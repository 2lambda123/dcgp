Search.setIndex({"docnames": ["changelog", "credits", "docs/cpp/es4cgp", "docs/cpp/expression", "docs/cpp/expression_ann", "docs/cpp/expression_weighted", "docs/cpp/gd4cgp", "docs/cpp/index", "docs/cpp/kernel", "docs/cpp/kernel_list", "docs/cpp/kernel_set", "docs/cpp/mes4cgp", "docs/cpp/momes4cgp", "docs/cpp/symbolic_regression", "docs/index", "docs/python/es4cgp", "docs/python/expression", "docs/python/expression_ann", "docs/python/expression_weighted", "docs/python/gd4cgp", "docs/python/index", "docs/python/kernel", "docs/python/kernel_list", "docs/python/kernel_set", "docs/python/koza_quintic", "docs/python/mes4cgp", "docs/python/momes4cgp", "docs/python/nist_problems", "docs/python/p_problems", "docs/python/symbolic_regression", "docs/python/threading", "docs/python/vladislavleva_problems", "index", "installation", "notebooks/An_intro_to_dCGPANNs", "notebooks/custom_kernels", "notebooks/dCGPANNs_for_classification", "notebooks/dCGPANNs_for_function_approximation", "notebooks/evo_in_parallel", "notebooks/finding_prime_integrals", "notebooks/learning_constants", "notebooks/learning_constants2", "notebooks/phenotype_correction_ex", "notebooks/real_world1", "notebooks/real_world2", "notebooks/real_world3", "notebooks/solving_odes", "notebooks/symbolic_regression_1", "notebooks/symbolic_regression_2", "notebooks/symbolic_regression_3", "notebooks/weighted_symbolic_regression", "quickstart", "theory/cgp", "theory/dcgp", "theory/index", "tutorials/cpp/cpp_hamiltonian_spring_mass", "tutorials/cpp/cpp_hamiltonian_spring_mass_lipson", "tutorials/cpp/cpp_kepler_first_integral", "tutorials/cpp/cpp_symbolic_regression_1", "tutorials/cpp/cpp_symbolic_regression_2", "tutorials/cpp/cpp_symbolic_regression_3", "tutorials/cpp/cpp_symbolic_regression_4", "tutorials/cpp/cpp_tsoulos_nlode3", "tutorials/cpp/cpp_tsoulos_ode1", "tutorials/cpp/index", "tutorials/index", "tutorials/py/index"], "filenames": ["changelog.rst", "credits.rst", "docs/cpp/es4cgp.rst", "docs/cpp/expression.rst", "docs/cpp/expression_ann.rst", "docs/cpp/expression_weighted.rst", "docs/cpp/gd4cgp.rst", "docs/cpp/index.rst", "docs/cpp/kernel.rst", "docs/cpp/kernel_list.rst", "docs/cpp/kernel_set.rst", "docs/cpp/mes4cgp.rst", "docs/cpp/momes4cgp.rst", "docs/cpp/symbolic_regression.rst", "docs/index.rst", "docs/python/es4cgp.rst", "docs/python/expression.rst", "docs/python/expression_ann.rst", "docs/python/expression_weighted.rst", "docs/python/gd4cgp.rst", "docs/python/index.rst", "docs/python/kernel.rst", "docs/python/kernel_list.rst", "docs/python/kernel_set.rst", "docs/python/koza_quintic.rst", "docs/python/mes4cgp.rst", "docs/python/momes4cgp.rst", "docs/python/nist_problems.rst", "docs/python/p_problems.rst", "docs/python/symbolic_regression.rst", "docs/python/threading.rst", "docs/python/vladislavleva_problems.rst", "index.rst", "installation.rst", "notebooks/An_intro_to_dCGPANNs.ipynb", "notebooks/custom_kernels.ipynb", "notebooks/dCGPANNs_for_classification.ipynb", "notebooks/dCGPANNs_for_function_approximation.ipynb", "notebooks/evo_in_parallel.ipynb", "notebooks/finding_prime_integrals.ipynb", "notebooks/learning_constants.ipynb", "notebooks/learning_constants2.ipynb", "notebooks/phenotype_correction_ex.ipynb", "notebooks/real_world1.ipynb", "notebooks/real_world2.ipynb", "notebooks/real_world3.ipynb", "notebooks/solving_odes.ipynb", "notebooks/symbolic_regression_1.ipynb", "notebooks/symbolic_regression_2.ipynb", "notebooks/symbolic_regression_3.ipynb", "notebooks/weighted_symbolic_regression.ipynb", "quickstart.rst", "theory/cgp.rst", "theory/dcgp.rst", "theory/index.rst", "tutorials/cpp/cpp_hamiltonian_spring_mass.rst", "tutorials/cpp/cpp_hamiltonian_spring_mass_lipson.rst", "tutorials/cpp/cpp_kepler_first_integral.rst", "tutorials/cpp/cpp_symbolic_regression_1.rst", "tutorials/cpp/cpp_symbolic_regression_2.rst", "tutorials/cpp/cpp_symbolic_regression_3.rst", "tutorials/cpp/cpp_symbolic_regression_4.rst", "tutorials/cpp/cpp_tsoulos_nlode3.rst", "tutorials/cpp/cpp_tsoulos_ode1.rst", "tutorials/cpp/index.rst", "tutorials/index.rst", "tutorials/py/index.rst"], "titles": ["Changelog", "Credits", "Evolutionary Strategy (UDA)", "expression (dCGP)", "expression_ann (dCGP-ANN)", "expression_weighted (dCGP-W)", "Gradient Descent (UDA)", "C++ Documentation", "kernel", "Available kernels", "kernel_set", "Memetic Evolutionary Strategy (UDA)", "Multi-Objective Memetic Evolutionary Strategy (UDA)", "Symbolic Regression (UDP)", "API documentation", "Evolutionary Strategy (UDA)", "expression (dCGP)", "expression_ann (dCGP-ANN)", "expression_weighted (dCGP-W)", "Gradient Descent (UDA)", "Python Documentation", "Kernel", "Available kernels", "Kernel set", "Koza Quintic", "Memetic Evolutionary Strategy (UDA)", "Multi-Objective Memetic Evolutionary Strategy (UDA)", "NIST problems (StRD)", "Problems P1-P7", "Symbolic Regression (UDP)", "Threading", "Problems from Vladislavleva", "Differentiable Cartesian Genetic Programming", "Installation guide", "Representing an Artificial Neural Network as a Cartesian Genetic Program", "Custom Kernels", "Training a FFNN in dCGPANN vs.\u00a0Keras (classification)", "Training a FFNN in dCGPANN vs.\u00a0Keras (regression)", "Symbolic Regression and the Island Model", "Discovery of prime integrals with dCGP", "Learning constants in a symbolic regression task (deprecated)", "Learning constants in a symbolic regression task (PART II) (deprecated)", "Phenotype Correction", "A real-world case (Engineering: materials)", "A real-world case (Physics: dynamics)", "A real-world case (Biomimetics: space technology)", "Solving differential equations with dCGP", "A basic tutorial on symbolic regression", "Learning constants using evolution", "Multi-objective memetic approach", "Weighted dCGP for a symbolic regression task", "Quick start examples", "Cartesian Genetic Programming (CGP)", "Differentiable Cartesian Genetic Programming (dCGP)", "Background", "Finding the prime integral for a spring mass system", "Finding the prime integral for a spring mass system using Lipson method", "Search for first integrals of Kepler\u2019s problem", "Find an exact model for the Koza quintic problem", "Find a model including one parameter (using a purely evolutionary approach)", "Find an exact model inclduing one parameter using a memetic approach", "Finding an entire non dominated front of formulas.", "Solving the NLODE3 problem from Tsoulos", "Solving the ODE1 problem from Tsoulos", "C++", "Tutorials", "Python"], "terms": {"all": [0, 1, 2, 4, 5, 7, 9, 10, 13, 15, 16, 17, 18, 20, 22, 29, 33, 34, 35, 36, 39, 40, 41, 42, 45, 46, 51, 54, 55, 56, 57], "uda": [0, 7, 13, 20, 38, 43, 44, 47, 48, 49, 58, 60, 61], "dcgpy": [0, 1, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54], "es4cgp": [0, 2, 15, 38, 47, 48, 58, 59], "mes4cgp": [0, 11, 12, 25, 26, 43, 60], "moes4cgp": 0, "momes4cgp": [0, 12, 26, 44, 49, 61], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 22, 23, 25, 26, 27, 29, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 61, 64, 66], "random": [0, 2, 3, 4, 5, 11, 12, 13, 15, 16, 17, 18, 25, 26, 34, 39, 40, 41, 46, 50, 51, 55, 56, 57, 62, 63], "mutat": [0, 2, 3, 4, 5, 11, 12, 13, 15, 16, 17, 18, 25, 26, 39, 46, 51, 55, 57, 58, 60, 61], "rather": [0, 2], "than": [0, 2, 11, 12, 16, 17, 19], "activ": [0, 2, 3, 4, 11, 12, 15, 16, 17, 25, 26, 32, 34, 36, 37, 39, 46, 50, 51, 53, 58, 60, 61], "evolv": [0, 2, 6, 11, 12, 13, 15, 19, 25, 26, 32, 38, 39, 42, 43, 44, 45, 47, 48, 49, 52, 58, 59, 60, 61], "express": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 29, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 25, 26, 29, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 58, 59, 60, 61], "improv": [0, 11, 25, 41], "significantli": 0, "algorithm": [0, 2, 3, 4, 5, 6, 7, 11, 12, 15, 19, 20, 25, 26, 34, 38, 58, 59, 60, 61], "behaviour": [0, 2, 11, 12, 44], "bug": 0, "fix": [0, 5], "when": [0, 2, 4, 5, 9, 11, 13, 15, 17, 20, 22, 25, 26, 29, 33, 34, 35, 40, 41, 59, 60], "larg": [0, 3, 43, 61], "number": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 46, 50, 51, 53, 55, 56, 57, 62, 63], "ephemer": [0, 2, 3, 6, 11, 13, 15, 16, 17, 18, 19, 25, 29, 40, 41, 42, 48, 49, 51, 58, 59, 60, 61], "constant": [0, 2, 3, 6, 11, 13, 15, 16, 17, 18, 19, 25, 29, 38, 39, 42, 43, 44, 49, 51, 57, 58, 59, 60, 61, 66], "now": [0, 32, 33, 34, 53, 59], "crash": 0, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "avoid": [0, 39, 40, 46], "enable_thread": 0, "disable_thread": 0, "util": [0, 33, 36, 37, 61], "allow": [0, 3, 4, 5, 7, 12, 13, 15, 16, 17, 18, 20, 29, 32, 42, 43, 44, 48, 49, 51, 53, 54], "switch": 0, "off": [0, 12, 26, 33], "multithred": 0, "entir": [0, 49, 64], "A": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 31, 32, 33, 34, 36, 37, 48, 49, 53, 66], "introduc": [0, 2, 7, 15, 20, 28, 31, 35, 42, 44, 48, 53, 54], "solv": [0, 2, 15, 19, 25, 26, 32, 49, 53, 60, 61, 64, 66], "symbol": [0, 2, 3, 4, 5, 6, 8, 11, 12, 15, 16, 17, 18, 19, 21, 25, 26, 31, 33, 34, 42, 45, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "regress": [0, 2, 3, 4, 6, 11, 12, 15, 17, 19, 24, 25, 26, 31, 32, 34, 36, 53, 58, 59, 60, 61], "problem": [0, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 19, 20, 24, 25, 26, 29, 36, 37, 38, 45, 46, 53, 59, 60, 61, 64], "Its": [0, 16], "call": [0, 2, 4, 6, 7, 10, 11, 12, 13, 15, 17, 19, 20, 23, 25, 26, 30, 32, 33, 35, 39, 40, 46, 47, 48, 49], "moe": 0, "multi": [0, 7, 20, 61, 66], "object": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 15, 20, 29, 38, 43, 44, 45, 61, 66], "evolutionari": [0, 1, 7, 20, 31, 32, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 58, 60, 61, 64], "startegi": [0, 58, 59], "complet": [0, 45, 61], "approach": [0, 4, 11, 25, 39, 40, 43, 48, 64, 66], "dcgp": [0, 1, 2, 6, 8, 9, 10, 11, 12, 13, 15, 19, 25, 26, 32, 33, 34, 40, 41, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66], "which": [0, 1, 2, 4, 7, 12, 15, 19, 20, 25, 26, 33, 35, 39, 42, 43, 50, 53], "can": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 29, 32, 33, 34, 35, 36, 38, 43, 44, 45, 46, 47, 48, 49, 53, 59, 60], "select": [0, 16, 31, 36, 37, 38, 42, 45], "memet": [0, 7, 20, 43, 44, 59, 61, 64, 66], "singl": [0, 2, 3, 4, 6, 11, 12, 13, 16, 29, 33, 34, 43], "break": [0, 39, 40, 41, 46, 50], "api": [0, 32, 33], "ha": [0, 3, 4, 5, 6, 29, 33, 44], "been": [0, 7, 20, 33], "made": [0, 8, 13, 15, 19, 25, 26, 36, 37], "uniform": [0, 3, 4, 37], "four": [0, 10, 58, 59, 60], "well": [0, 1, 3, 4, 5, 17, 27, 33, 35, 40, 41, 42, 44, 45], "mechan": 0, "name": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 22, 23, 29, 34, 38, 45, 51], "paramet": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 32, 45, 49, 53, 64], "have": [0, 1, 2, 4, 6, 7, 8, 10, 13, 15, 17, 19, 20, 29, 33, 35, 38, 39, 42, 43, 44, 45, 47, 48, 51], "thu": [0, 3, 5, 7, 34, 36, 40, 41, 43, 44, 47, 48, 58, 61, 62, 63], "default": [0, 2, 3, 4, 10, 11, 12, 13, 15, 19, 25, 26, 34, 36, 43, 44, 47, 48], "valu": [0, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 21, 25, 26, 29, 32, 34, 36, 39, 40, 41, 43, 44, 45, 46, 47, 50, 51, 53, 55, 56, 57, 58, 59, 60, 62, 63], "too": [0, 1, 3, 32, 43, 48], "note": [0, 4, 5, 16, 17, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61], "exampl": [0, 2, 4, 6, 7, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 39, 42, 47, 48, 49], "what": [0, 20, 38, 41, 42, 43, 44, 46, 47, 48, 49], "wa": [0, 42, 45], "n_mut": 0, "some": [0, 1, 4, 7, 17, 20, 34, 35, 38, 39, 42, 43, 44, 45, 47, 48, 49, 54, 58, 59, 60], "algo": [0, 15, 19, 25, 26, 38, 43, 44, 47, 48, 49, 58, 59, 60, 61], "max_mut": [0, 2, 11, 12, 15, 25, 26, 38, 43, 44, 45, 47, 48, 49], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 42, 53, 54, 55, 56, 57, 59, 60, 61], "underli": [0, 2, 11, 15, 32, 34, 42], "comput": [0, 1, 3, 4, 5, 7, 8, 13, 16, 17, 20, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63], "optim": [0, 1, 2, 6, 7, 11, 12, 13, 15, 19, 20, 25, 26, 29, 33, 36, 37, 43, 44, 47, 48, 49], "udp": [0, 2, 6, 7, 11, 12, 15, 19, 20, 25, 26, 38, 43, 44, 45, 47, 48, 49, 58, 59, 60, 61], "perform": [0, 1, 3, 4, 13, 17, 33, 36, 37, 38, 40, 41, 42, 44, 54], "obak": [0, 33], "vector": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 20, 38, 39, 41, 46, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "type": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 29, 33, 38, 40, 41, 50], "speed": [0, 7, 20], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 27, 28, 31, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 57], "observ": [0, 27], "magnitud": [0, 7, 20], "between": [0, 2, 11, 15, 17, 19, 25, 26, 29, 33, 39, 44, 45], "x4": 0, "x100": 0, "nan": [0, 9, 22], "appear": 0, "except": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 19, 25, 26, 29, 34], "being": [0, 4, 5, 17, 18, 34, 39, 40, 41, 46], "thrown": [0, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 19, 25, 26, 29], "symbolic_regress": [0, 2, 6, 10, 11, 12, 13, 15, 19, 25, 26, 29, 38, 43, 44, 45, 47, 48, 49, 58, 59, 60, 61], "guard": 0, "against": [0, 34, 47, 48, 49], "symengin": [0, 13, 33, 58, 59, 60, 61], "discard": 0, "zero": [0, 4, 13, 16, 27, 36, 37, 39, 40, 42, 43, 50, 60], "column": [0, 3, 4, 5, 13, 16, 17, 18, 29, 51], "row": [0, 3, 4, 5, 13, 16, 17, 18, 29, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51], "invert": 0, "hessian": [0, 13, 29, 50], "newton": [0, 11, 12, 25, 26, 41], "step": [0, 4, 9, 11, 12, 19, 25, 26, 37, 40, 41, 50], "longer": [0, 48, 49], "thread": [0, 3, 4, 13, 17, 20, 29, 35, 38, 54], "bfe": [0, 2, 15], "loss": [0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 16, 17, 19, 20, 25, 26, 29, 34, 36, 37, 38, 43, 44, 47, 48, 49, 60, 61], "python": [0, 7, 14, 15, 16, 17, 18, 19, 25, 26, 29, 35, 54, 65], "non": [0, 4, 7, 9, 12, 20, 22, 26, 35, 53, 58, 59, 60, 64], "safe": [0, 54], "kernel": [0, 3, 4, 5, 10, 13, 16, 17, 18, 29, 34, 38, 39, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 54, 66], "still": 0, "set": [0, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 25, 26, 33, 34, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 60, 61, 62, 63], "user": [0, 1, 7, 11, 12, 13, 20, 25, 26, 29, 35, 43, 44, 46, 47, 48, 49], "deprec": 0, "after": [0, 3, 4, 9, 14, 16, 22, 33, 34, 41, 51], "instanti": [0, 3, 4, 5, 7, 13, 14, 20, 29, 43, 44, 47, 48, 49, 51, 58, 59, 60, 61], "document": [0, 32, 33], "tutori": [0, 3, 32, 35, 38, 42, 43, 44, 45, 48, 49, 58, 59, 60, 61, 66], "updat": [0, 3, 4, 17, 41, 50], "who": 1, "behind": [1, 43, 53], "onc": [1, 3, 4, 5, 10, 17], "again": 1, "elus": 1, "yet": 1, "so": [1, 5, 12, 13, 26, 32, 34, 35, 36, 39, 42, 43, 44, 61], "resourc": [1, 54], "pagmo": [1, 2, 6, 7, 11, 12, 13, 20, 25, 29, 33, 58, 59, 60, 61], "foundat": 1, "basic": [1, 3, 9, 10, 22, 29, 35, 38, 39, 42, 43, 44, 45, 48, 49, 51, 66], "bunch": 1, "peopl": 1, "fool": 1, "around": [1, 41], "take": [1, 13, 21, 33, 41, 45, 50], "themselv": 1, "serious": 1, "meantim": 1, "try": [1, 14, 33, 39, 41, 43], "make": [1, 2, 15, 20, 33, 35, 42, 44, 47, 48, 51, 53, 57, 58], "good": [1, 12, 26, 27, 45, 61], "progress": 1, "scienc": 1, "softwar": [1, 33], "offer": [1, 7, 11, 12, 13, 25, 26], "full": [1, 33], "floss": 1, "philosophi": 1, "we": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 19, 20, 22, 25, 26, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63], "creat": [1, 2, 11, 12, 15, 25, 26, 33, 34, 37, 40, 41, 50, 51, 55, 56, 57, 61, 62, 63], "mostli": 1, "our": [1, 10, 38, 40, 41, 43, 44, 47, 48, 49, 51, 55, 57, 59, 60, 61], "spare": 1, "time": [1, 3, 5, 11, 12, 13, 15, 25, 26, 35, 36, 38, 39, 40, 41, 46, 49, 50], "tool": 1, "explor": 1, "research": [1, 4, 11, 25, 27, 32, 42, 53], "idea": [1, 53], "start": [1, 2, 3, 11, 12, 15, 16, 25, 26, 32, 33, 34, 35, 36, 37, 38], "nourish": 1, "sinc": [1, 3, 7, 14, 20, 34, 35, 40, 41, 44, 45, 46], "earli": [1, 39, 46], "investig": 1, "field": [1, 32], "context": [1, 11, 25, 45], "work": [1, 4, 15, 19, 25, 26, 35, 44, 45], "european": [1, 11, 25, 28, 32, 42, 45], "space": [1, 13, 24, 28, 29, 42, 46, 66], "agenc": [1, 42, 45], "genet": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 17, 20, 25, 28, 29, 31, 38, 42, 48, 49, 54, 62, 63, 66], "program": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 17, 20, 25, 28, 29, 31, 33, 38, 39, 40, 41, 42, 48, 49, 50, 51, 54, 62, 63, 66], "its": [1, 2, 3, 4, 5, 6, 7, 10, 12, 15, 16, 17, 18, 19, 20, 26, 32, 33, 34, 38, 39, 41, 43, 46, 47, 48, 49, 50, 51, 58, 59, 61], "capabl": [1, 20], "go": [1, 32, 34, 39], "beyond": [1, 32], "pure": [1, 33, 48, 64], "scientif": [1, 20, 33, 37], "academ": 1, "over": [1, 3, 7, 20, 39, 40, 41, 46, 50, 55, 56, 57, 62, 63], "year": 1, "attract": 1, "wider": 1, "interest": [1, 40, 41, 44, 50, 53], "acknowledg": [1, 40], "thank": [1, 40, 41], "support": [1, 32, 53], "dow": 1, "corpor": 1, "dure": [1, 15, 19, 25, 26, 34, 36, 37, 40, 41, 45], "phase": 1, "advanc": 1, "concept": [1, 36], "team": 1, "look": [1, 42, 43, 44, 47, 48], "potenti": 1, "game": 1, "chang": [1, 4, 34], "technologi": [1, 66], "dario": [1, 11, 25, 28, 32, 50], "izzo": [1, 11, 28, 32], "francesco": [1, 11, 25, 28, 32, 44], "biscani": [1, 11, 25, 28, 32, 44], "max": [1, 12, 19, 36, 61], "planck": 1, "institut": 1, "astronomi": 1, "class": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 29, 34, 36, 38, 40, 41], "cartesian": [2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 18, 20, 25, 29, 38, 42, 51, 54, 66], "popular": [2, 7, 15, 20], "global": [2, 7, 11, 15, 20, 25, 29, 30], "meta": [2, 11, 15, 25], "heurist": [2, 11, 15, 25], "essenti": [2, 3, 4, 5, 7, 15, 16, 17, 18, 20, 41], "base": [2, 4, 5, 11, 15, 25, 54, 58], "follow": [2, 3, 4, 5, 9, 11, 12, 15, 22, 23, 25, 26, 33, 39, 40, 41, 50, 51, 59, 60], "simpl": [2, 4, 6, 15, 19, 32, 33, 36, 38, 49], "pseudo": [2, 11, 12, 15, 25, 26], "from": [2, 3, 6, 10, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 58, 59, 60, 61, 64], "popul": [2, 6, 11, 12, 15, 19, 25, 26, 38, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61], "pop": [2, 6, 11, 12, 15, 19, 25, 26, 43, 44, 47, 48, 49, 58, 59, 60, 61], "dimens": [2, 4, 5, 11, 12, 13, 15, 16, 17, 18, 25, 26, 29, 41, 43, 44, 47, 48, 49, 50, 55, 56], "n": [2, 3, 4, 5, 11, 12, 15, 16, 17, 19, 25, 26, 33, 38, 39, 41, 45, 46, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "while": [2, 5, 11, 12, 15, 25, 26, 32, 39, 43, 49, 55, 56, 57, 62, 63], "gen": [2, 6, 11, 12, 15, 19, 25, 26, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63], "new": [2, 3, 4, 5, 11, 12, 13, 15, 16, 17, 18, 25, 26, 32, 39, 40, 41, 46, 50, 53, 55, 56, 57, 62, 63], "pop2": [2, 11, 12, 15, 25, 26], "contain": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 31, 33, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50], "differ": [2, 7, 13, 15, 16, 18, 19, 20, 25, 26, 34, 35, 40, 41, 44, 45, 50, 54, 58, 59, 60, 61], "best": [2, 6, 11, 12, 13, 15, 19, 25, 26, 29, 38, 39, 40, 41, 44, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63], "evalu": [2, 3, 4, 5, 6, 7, 8, 11, 12, 15, 19, 20, 21, 25, 26, 29, 35, 36, 37, 39, 40, 41, 46, 50], "chromosom": [2, 3, 4, 6, 13, 15, 16, 17, 18, 19, 34, 36, 37, 39, 40, 41, 42, 45, 46, 50, 58, 59, 60], "reinsert": [2, 11, 12, 15, 25, 26], "individu": [2, 11, 12, 15, 25, 26, 44, 48, 49, 58, 59, 60, 61], "taken": [2, 11, 12, 15, 25, 26, 27, 36, 37], "kei": [2, 15, 45], "success": [2, 15], "search": [2, 6, 11, 13, 15, 25, 29, 32, 39, 42, 53, 55, 56, 64], "qualiti": [2, 15, 45], "oper": [2, 3, 4, 5, 7, 8, 9, 10, 13, 15, 16, 17, 18, 20, 22, 23, 33, 35, 39, 40, 43, 44, 46, 47, 48, 49, 51], "In": [2, 3, 6, 7, 11, 12, 13, 15, 19, 20, 25, 26, 29, 32, 33, 35, 36, 38, 39, 42, 43, 44, 47, 48, 49, 53, 58, 59, 60, 61], "case": [2, 3, 4, 7, 13, 15, 20, 29, 33, 35, 36, 37, 38, 39, 42, 47, 48, 49, 51, 58, 61, 66], "chrosomos": [2, 15], "encod": [2, 3, 5, 13, 15, 16, 17, 32, 34, 42, 53], "cgp": [2, 3, 5, 6, 7, 8, 11, 13, 15, 16, 17, 18, 20, 21, 29, 32, 33, 34, 36, 37, 38, 40, 41, 53, 54, 55, 56, 57, 62, 63], "sens": [2, 15, 35], "act": [2, 15, 38, 45], "gene": [2, 3, 11, 12, 15, 16, 25, 26, 34, 39, 46, 51], "onli": [2, 4, 5, 6, 11, 12, 13, 15, 17, 19, 25, 26, 33, 34, 35, 36, 42, 44, 46, 59, 60, 61], "part": [2, 3, 4, 6, 11, 12, 13, 14, 15, 17, 19, 25, 26, 29, 42, 66], "actual": [2, 3, 6, 13, 15, 16, 19, 38, 42, 43, 44, 47, 48, 49, 58, 59, 60, 61], "final": [2, 15, 37, 43, 44, 45, 47, 48, 49, 57, 61], "formula": [2, 3, 5, 11, 13, 15, 16, 17, 18, 27, 41, 45, 49, 51, 58, 59, 60, 64], "model": [2, 3, 6, 7, 12, 13, 15, 16, 19, 20, 25, 26, 27, 29, 31, 32, 36, 37, 43, 44, 45, 47, 48, 49, 53, 61, 64, 66], "coupl": [2, 15, 42], "sai": [2, 10, 15, 42], "solut": [2, 7, 15, 20, 38, 39, 40, 41, 45, 49, 53], "although": [2, 15], "prevent": [2, 15, 43], "gener": [2, 3, 4, 5, 6, 8, 11, 12, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 31, 40, 41, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "purpos": [2, 15], "ineffici": [2, 4, 15], "e": [2, 3, 6, 9, 10, 12, 13, 15, 16, 19, 22, 25, 26, 27, 28, 29, 31, 34, 35, 38, 39, 42, 43, 44, 45, 55, 56, 57, 59, 61, 62, 63], "g": [2, 3, 10, 15, 16, 19, 25, 26, 29, 39, 40, 41, 42, 46, 50], "would": [2, 3, 8, 13, 15, 35, 39, 43, 44], "agnost": [2, 15], "exist": [2, 15, 54], "provid": [2, 3, 5, 6, 7, 10, 13, 15, 19, 20, 29, 32, 61], "an": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 27, 29, 32, 33, 35, 36, 37, 38, 39, 44, 45, 46, 48, 49, 50, 52, 53, 57, 59, 64, 66], "tailor": [2, 15, 19, 25, 26], "leverag": [2, 15], "kowledg": [2, 15], "structur": [2, 15], "abl": [2, 6, 7, 11, 15, 17, 19, 20, 25, 40, 41, 51], "public": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "typedef": [2, 6, 11, 12], "std": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 17, 34, 36, 37, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "tupl": [2, 4, 6, 11, 12, 15, 19, 24, 25, 26, 27, 28, 31, 45], "unsign": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 51, 55, 56, 57, 62, 63], "long": [2, 3, 6, 11, 12, 25, 26, 40, 41, 48], "doubl": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 21, 35, 55, 56, 57, 58, 59, 60, 61, 62, 63], "vector_doubl": [2, 11, 13], "string": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 17, 21, 23, 25, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "log_line_typ": [2, 6, 11, 12], "entri": [2, 6, 11, 12, 16, 17, 18, 58], "log": [2, 6, 9, 11, 12, 15, 19, 22, 23, 25, 26, 38, 43, 44, 46, 55, 56, 62, 63], "feval": [2, 6, 11, 12, 15, 19, 25, 26, 58, 59, 60, 61], "log_typ": [2, 6, 11, 12], "function": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 42, 44, 45, 53, 55, 56, 57, 62, 63], "inlin": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "1u": [2, 3, 4, 5, 6, 8, 11, 12, 13, 51, 55, 56, 57, 58, 59, 60, 61], "4u": [2, 11, 12, 58, 59, 60, 61], "ftol": [2, 11, 12, 15, 25, 26, 58, 60], "0": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 25, 26, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "bool": [2, 3, 4, 13, 15, 16, 17, 29, 50], "learn_const": [2, 15, 25, 48, 49], "true": [2, 3, 4, 13, 15, 16, 17, 29, 34, 36, 37, 44, 45, 48, 49, 50, 59, 61], "seed": [2, 3, 4, 5, 11, 12, 13, 15, 16, 17, 18, 25, 26, 35, 36, 37, 39, 40, 41, 42, 46, 50, 51, 55, 56, 57, 62, 63], "random_devic": [2, 3, 4, 5, 11, 12, 13, 55, 56, 57, 62, 63], "next": [2, 3, 4, 5, 11, 12, 13, 59, 60, 61], "constructor": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "construct": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 38, 46, 48, 49], "maximum": [2, 3, 6, 11, 12, 19, 26, 43, 46, 51, 60, 61], "each": [2, 3, 4, 5, 6, 7, 11, 12, 13, 15, 16, 17, 19, 20, 25, 26, 36, 38, 45, 50], "exit": [2, 11, 15, 19, 25, 26, 58, 59, 60, 61], "below": [2, 11, 15, 25, 26, 27], "toler": [2, 11, 15, 25, 26], "where": [2, 3, 4, 5, 15, 16, 17, 19, 25, 26, 33, 38, 39, 42, 44, 48, 49, 52], "exact": [2, 40, 59, 64], "seek": [2, 12, 26], "just": [2, 11, 25, 33, 39], "approxim": [2, 59, 60], "one": [2, 3, 4, 5, 6, 9, 11, 12, 13, 16, 17, 18, 22, 23, 25, 26, 29, 31, 32, 35, 36, 37, 39, 40, 41, 42, 44, 46, 48, 49, 55, 56, 57, 61, 64], "gaussian": [2, 9, 15, 22, 27, 35, 43, 45], "appli": [2, 3, 11, 12, 13, 15, 16, 25, 26, 40, 48, 49], "also": [2, 3, 4, 5, 7, 9, 11, 13, 15, 17, 19, 20, 22, 25, 26, 29, 35, 38, 43, 45, 47, 48, 49, 51, 59, 60, 61], "1": [2, 3, 4, 5, 6, 9, 11, 12, 13, 15, 16, 17, 18, 19, 22, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 45, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "intern": [2, 3, 11, 12, 13, 15, 25, 26], "throw": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "invalid_argu": [2, 3, 4, 5, 6, 10, 11, 12, 13], "neg": [2, 4, 11, 15, 25, 44], "const": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 55, 56, 57, 62, 63], "method": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 25, 26, 35, 40, 41, 44, 55, 57, 64], "cannot": [2, 4, 5, 6, 11, 12, 15, 35, 59, 60], "extract": [2, 6, 11, 12, 15, 19, 25, 26, 34, 44, 47, 48, 49], "size": [2, 3, 4, 8, 11, 12, 17, 19, 26, 29, 38, 43, 44, 45, 46, 47, 48, 49, 55, 56, 57, 61, 62, 63], "smaller": [2, 11, 12, 19], "2": [2, 6, 9, 11, 12, 15, 16, 17, 18, 19, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 45, 46, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "return": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 24, 25, 26, 27, 28, 31, 35, 36, 37, 39, 40, 41, 42, 45, 46, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63], "void": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "set_se": [2, 11, 12], "control": [2, 3, 4, 5, 11, 12, 16, 17, 18, 39, 51, 53], "stochast": [2, 4, 5, 6, 11, 12, 17, 36, 37], "get_se": [2, 11, 12, 15, 25, 26], "get": [2, 3, 4, 5, 6, 10, 11, 12, 13, 16, 17, 18, 34, 37, 39, 40, 41, 45, 46, 47, 48, 49, 50, 55, 56, 57, 62, 63], "set_bf": [2, 15], "b": [2, 4, 15, 34, 35, 37], "batch": [2, 3, 4, 13, 15, 17, 29, 37, 61], "scheme": [2, 15], "set_verbos": [2, 6, 11, 12, 15, 19, 25, 26, 43, 44, 47, 48, 49, 58, 59, 60, 61], "level": [2, 3, 4, 5, 6, 11, 12, 13, 16, 17, 18, 29, 30, 43, 48, 49, 51], "verbos": [2, 6, 11, 12, 15, 19, 25, 26, 36, 37], "screen": [2, 6, 11, 12, 43, 44, 47, 48, 49, 58, 59, 60, 61], "output": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 16, 17, 18, 29, 32, 34, 35, 37, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 53], "get_log": [2, 6, 11, 12, 15, 19, 25, 26, 47, 48, 49], "print": [2, 6, 11, 12, 16, 17, 18, 29, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61], "line": [2, 6, 11, 12, 15, 19, 25, 26, 27, 43], "100": [2, 12, 26, 34, 36, 37, 39, 40, 41, 42, 44, 46, 48, 49, 50, 57, 60, 61], "4087": 2, "68": [2, 39, 40, 46, 50], "3": [2, 6, 11, 12, 15, 16, 17, 19, 24, 25, 26, 28, 31, 33, 34, 36, 37, 38, 39, 44, 45, 46, 51, 55, 57, 58, 59, 60, 61, 62, 63], "52114": 2, "400": [2, 15, 39, 43, 60], "324": 2, "845": 2, "61414": 2, "x0": [2, 11, 15, 25, 46, 49, 58, 59, 60, 61], "4": [2, 6, 11, 15, 17, 19, 25, 31, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "200": [2, 11, 15, 25, 46, 50, 60, 61], "800": [2, 15, 37, 60], "300": [2, 31, 41, 60], "1200": [2, 15, 60], "165": [2, 50], "212": 2, "56702": 2, "1600": [2, 15], "28": [2, 6, 39, 40, 41, 46, 50], "814": 2, "45813": 2, "500": [2, 46, 58, 59], "2000": [2, 12, 15, 26, 39, 41, 46, 58, 59, 61], "10": [2, 6, 11, 12, 16, 17, 18, 19, 25, 26, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 61], "5589": 2, "59501": 2, "600": [2, 15, 60], "2400": [2, 15], "2459": 2, "44443": 2, "c1": [2, 11, 15, 16, 17, 25, 37, 41, 42, 48, 49, 59, 60, 61], "700": [2, 39], "2800": 2, "24378": 2, "43364": 2, "3200": [2, 15], "900": 2, "3600": 2, "1000": [2, 12, 15, 26, 27, 35, 40, 46, 47, 48, 58, 59, 60, 61], "4000": [2, 12, 15, 26, 58, 59, 61], "24374": 2, "43618": 2, "1100": 2, "4400": 2, "24372": 2, "43479": 2, "4800": [2, 15], "0697188": 2, "35616": 2, "1300": 2, "5200": 2, "0254527": 2, "37625": 2, "fit": [2, 6, 11, 12, 13, 15, 19, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 46, 50, 53, 55, 56, 57, 58, 59, 60, 62, 63], "found": [2, 6, 11, 15, 25, 26, 33, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 62, 63], "peek": [2, 11, 45], "prettier": [2, 11, 13, 38, 43, 44, 45, 47, 48, 49, 58, 59, 60, 61], "get_verbos": [2, 6, 11, 12], "get_nam": [2, 6, 8, 11, 12, 13], "get_extra_info": [2, 6, 11, 12, 13], "extra": [2, 6, 11, 12, 13, 17, 19, 29, 38], "info": [2, 6, 11, 12, 13, 29, 38], "relev": [2, 6, 11, 12, 15, 19, 25, 26], "quantiti": [2, 6, 11, 12, 13, 32, 53], "monitor": [2, 6, 11, 12], "last": [2, 6, 11, 12, 15, 19, 25, 26, 36, 47, 48, 49], "element": [2, 3, 6, 10, 11, 12], "describ": [2, 6, 7, 11, 12, 20, 27], "templat": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14], "typenam": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "archiv": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 36], "serial": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "save": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "load": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 43, 45, 47, 48, 49, 58, 59, 60, 61], "target": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 34, 40, 41, 50, 51], "unspecifi": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 19, 25, 26, 29], "ani": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15, 19, 25, 26, 29, 34, 38, 39, 43, 53, 54, 58], "primit": [2, 3, 4, 5, 6, 8, 10, 11, 12, 13], "repres": [3, 4, 5, 7, 8, 12, 13, 20, 26, 39, 41, 42, 43, 44, 46, 50, 52, 53, 54, 57, 66], "artifici": [3, 4, 7, 17, 20, 32, 53, 66], "mathemat": [3, 5, 7, 12, 13, 20, 26, 29, 33, 43, 44, 47, 48, 49], "gdual": [3, 4, 5, 7, 16, 18, 20, 34, 35, 39, 40, 41, 46, 50, 51], "t": [3, 4, 5, 7, 8, 10, 39, 40, 41, 46, 50, 55, 56, 57, 62, 63], "reproduc": 3, "canon": [3, 53], "differenti": [3, 4, 11, 13, 25, 28, 29, 33, 34, 39, 54, 62, 63, 66], "algebra": [3, 33, 53], "truncat": [3, 33, 46, 51, 53], "taylor": [3, 5, 33, 41, 53, 55, 56, 57], "polynomi": [3, 33, 53, 58], "coeffici": [3, 41, 50], "order": [3, 7, 11, 12, 20, 25, 26, 31, 33, 34, 40, 41, 44, 46, 48, 49, 50, 51, 54, 55, 56, 57], "deriv": [3, 5, 7, 20, 32, 34, 40, 41, 44, 46, 51, 53, 54, 55, 56, 57, 62, 63], "inform": [3, 13, 32, 43, 45, 52, 53], "expans": [3, 5, 32, 41], "respect": [3, 4, 5, 8, 13, 27, 32, 34, 44, 45, 53], "input": [3, 4, 5, 6, 8, 9, 10, 12, 13, 16, 17, 18, 19, 21, 22, 26, 29, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 53, 58, 59, 60], "numer": [3, 4, 5, 7, 20, 34, 43, 46], "subclass": 3, "expression_weight": [3, 7, 20], "enum": [3, 4], "loss_typ": [3, 4, 16, 17], "enumer": [3, 4, 36, 42, 45], "mse": [3, 4, 13, 16, 17, 29, 34, 36, 37, 43, 44, 45, 47, 48, 50, 59], "mean": [3, 4, 13, 16, 17, 27, 29, 34, 36, 37, 43, 53, 61], "squar": [3, 4, 9, 13, 16, 17, 22, 29, 37, 46, 61], "error": [3, 4, 5, 13, 15, 16, 17, 19, 25, 26, 29, 34, 36, 37, 44, 45, 46, 55, 57, 61, 62, 63], "ce": [3, 4, 13, 16, 17, 29, 36], "m": [3, 4, 5, 35, 57], "r": [3, 4, 5, 13, 17, 18, 36, 38, 39, 40, 41, 43, 44, 45, 47, 50, 57], "c": [3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 29, 35, 38, 39, 40, 41, 45, 50, 65], "l": [3, 4, 5, 13, 36, 39, 50], "ariti": [3, 4, 5, 13, 16, 17, 18, 29, 34, 35, 39, 40, 41, 42, 46, 50, 51], "f": [3, 4, 5, 8, 10, 13, 31, 34, 38, 42, 44, 45, 48, 49, 50, 54], "n_eph": [3, 13, 16, 17, 18, 29, 35, 42, 43, 44, 45, 48, 49, 51, 58, 59, 60, 61], "variabl": [3, 4, 5, 13, 27, 36, 51, 53, 57], "independ": [3, 4, 5, 51], "depend": [3, 4, 5, 15, 16, 19, 25, 26, 33, 39], "represent": [3, 4, 5, 8, 13, 15, 16, 17, 18, 21, 25, 29, 32, 35, 43, 44, 47, 48, 51, 54], "acycl": [3, 4, 5, 16, 17, 18, 52], "graph": [3, 4, 5, 7, 13, 16, 17, 18, 20, 29, 33, 51, 52, 53], "back": [3, 4, 5, 13, 16, 17, 18, 29, 32, 41, 48, 49, 51, 53], "minimum": [3, 4, 5, 6, 12, 16, 17, 18, 19, 26, 51, 60], "If": [3, 4, 5, 15, 16, 17, 18, 33, 44, 51, 57], "uncertain": [3, 4, 5, 16, 17, 18, 51], "basi": [3, 4, 5, 8, 13, 16], "Their": [3, 16, 17, 18], "via": [3, 7, 13, 16, 17, 18, 20, 23, 31, 33, 35, 39, 40, 41, 44, 45, 48, 49, 59, 60], "dedic": [3, 16, 17, 18, 40, 41], "initi": [3, 4, 5, 6, 19, 34, 36, 37, 40, 41, 46, 50, 51, 53, 62, 63], "kernel_set": [3, 4, 5, 7, 9, 13, 39, 40, 41, 42, 46, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "sum": [3, 4, 5, 8, 9, 10, 13, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 29, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "0u": [3, 4, 13, 51, 55, 56, 57, 58, 59, 61, 62, 63], "virtual": [3, 4, 5], "destructor": 3, "copi": 3, "assign": [3, 45], "move": 3, "point": [3, 4, 7, 8, 11, 13, 16, 17, 20, 24, 25, 27, 28, 29, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 61, 63], "initializer_list": [3, 4, 5, 8], "list": [3, 4, 5, 7, 10, 13, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 29, 35, 39, 40, 43, 45, 46, 47, 48, 49, 50], "form": [3, 6, 10, 19, 28, 31, 39, 42, 52, 54], "predict": [3, 4, 13, 29, 38, 43, 44, 45, 47, 48], "loss_": [3, 4, 13], "data": [3, 4, 12, 13, 16, 17, 20, 24, 26, 27, 29, 38, 41, 42, 45, 58, 59, 60, 61], "cross": [3, 4, 16, 17, 29, 36], "entropi": [3, 4, 16, 17, 29, 36], "classif": [3, 4, 17, 37, 66], "label": [3, 4, 13, 16, 17, 24, 27, 28, 29, 31, 34, 36, 37, 38, 43, 44, 45, 47, 48, 49], "parallel": [3, 4, 13, 15, 17, 29, 33, 34, 36, 37, 61], "grain": [3, 4, 17], "divid": [3, 4, 17], "them": [3, 4, 16, 17, 34, 38, 42, 43, 44, 47, 48, 49], "xu": 3, "given": [3, 10, 13, 16, 29], "genotyp": 3, "node": [3, 4, 5, 8, 16, 17, 18, 21, 32, 34, 36, 37, 50, 53], "accordingli": 3, "cromosom": 3, "out": [3, 16, 29, 46, 62], "bound": [3, 13, 16, 29], "wrong": 3, "inputit": 3, "set_from_rang": 3, "begin": [3, 39, 44], "end": [3, 34, 35, 36, 37, 39, 41, 44, 61], "rang": [3, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 50], "iter": [3, 6, 19, 37], "first": [3, 4, 5, 9, 17, 18, 22, 32, 33, 34, 35, 39, 40, 41, 46, 51, 55, 56, 58, 64], "set_f_gen": [3, 16], "node_id": [3, 4, 5, 16, 17, 18, 34], "f_id": [3, 16], "valid": [3, 4, 5, 13, 16, 17, 18, 43, 46], "id": [3, 4, 5, 16, 17, 18, 38, 45], "invalid": [3, 4, 41, 50], "set_eph_v": 3, "eph_val": [3, 16, 17, 18], "equal": [3, 4, 16, 17, 18, 24, 28, 29, 45, 46], "set_eph_symb": 3, "eph_symb": [3, 16, 17, 18], "get_eph_v": 3, "get_eph_symb": 3, "current": [3, 6, 11, 15, 16, 18, 19, 25, 26, 32, 41, 53], "get_lb": [3, 16], "lower": [3, 13, 16, 29], "get_ub": [3, 16], "upper": [3, 13, 16, 29], "get_active_gen": [3, 16], "idx": [3, 4, 10, 16, 17, 44, 49, 50, 58, 59, 60, 61], "get_active_nod": [3, 16, 34, 36, 37, 50], "ppsn": 3, "miller": [3, 4, 5, 7, 17, 18, 20, 54], "get_n": [3, 16, 50], "get_m": [3, 16], "get_r": 3, "get_c": 3, "get_l": 3, "get_ar": [3, 16, 50], "particular": [3, 7, 20, 39, 43, 44, 47, 48, 49], "get_f": [3, 16, 44, 49, 58, 59, 60, 61], "get_gene_idx": [3, 16], "gene_idx": 3, "index": [3, 4, 10, 16, 50], "randomli": [3, 4, 16, 31, 34, 50], "exactli": [3, 34], "within": [3, 13, 16], "me": [3, 16, 45], "multipl": [3, 7, 9, 12, 16, 20, 22, 38, 44], "mutate_random": [3, 16, 42], "specifi": [3, 10, 16, 17, 18, 32, 43, 44, 47, 48, 49, 50], "mutate_inact": 3, "inact": [3, 4, 16, 17, 34], "up": [3, 4, 5, 7, 17, 18, 20, 33, 39, 40, 41, 43, 46, 51, 55, 56, 57], "guarante": [3, 13], "cost": 3, "deem": 3, "unnecessari": 3, "mutate_act": [3, 16, 39, 40, 41, 46, 50, 51, 55, 56, 57, 62, 63], "affect": [3, 11, 12, 25, 26, 34], "mutate_active_fgen": [3, 16, 34], "mutate_active_cgen": [3, 16, 34], "connect": [3, 4, 5, 16, 17, 32, 34, 50, 53], "mutate_ogen": [3, 16, 34], "other": [3, 4, 5, 10, 34, 43], "thing": [3, 7, 20, 39, 40, 41, 46], "is_active_nod": 3, "check": [3, 13, 16, 33, 35, 36, 37, 39, 55, 57], "is_active_gen": 3, "set_phenotype_correct": [3, 13, 16, 42], "pc_fun_typ": [3, 13], "pc": [3, 13, 16], "phenotyp": [3, 13, 16], "correct": [3, 13, 16, 36, 37, 59, 60], "itself": [3, 6, 16, 19, 49, 53], "indic": [3, 4, 11, 14, 16, 17, 23, 25, 36, 38], "overal": [3, 16], "y": [3, 15, 16, 19, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 63], "x": [3, 13, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "callabl": [3, 8, 13, 16, 21], "unset_phenotype_correct": [3, 13, 16], "unset": [3, 13, 16], "friend": [3, 4, 5, 8, 10], "ostream": [3, 4, 5, 8, 10], "o": [3, 4, 5, 8, 10], "d": [3, 4, 5, 8, 10, 16, 46, 50, 55, 56, 57, 62, 63], "overload": [3, 4, 5, 8, 10, 17], "stream": [3, 4, 5, 8, 10, 55, 62, 63], "Will": [3, 4, 5, 8, 10], "format": [3, 4, 5, 45, 49], "human": [3, 4, 5, 13], "readabl": [3, 4, 5, 13], "neural": [4, 7, 17, 20, 32, 36, 37, 53], "network": [4, 7, 17, 20, 32, 36, 37, 53], "associ": [4, 5, 46, 53], "weight": [4, 5, 7, 16, 17, 18, 20, 32, 34, 36, 37, 53, 66], "bia": [4, 17], "subset": 4, "includ": [4, 27, 33, 40, 44, 50, 51, 55, 56, 57, 58, 60, 61, 62, 63, 64], "most": [4, 7, 20, 34, 46, 51, 61], "nonlinear": [4, 17, 31, 34, 37, 48, 49], "tanh": [4, 9, 17, 22, 34], "sig": [4, 9, 17, 22, 23, 34, 36, 37], "relu": [4, 9, 17, 22, 34], "elu": [4, 9, 22], "isru": [4, 9, 22], "result": [4, 5, 6, 7, 11, 12, 13, 17, 19, 20, 25, 26, 27, 34, 35, 36, 37, 38, 42, 44, 45, 60, 61], "feed": [4, 34, 36, 37], "forward": [4, 34, 36, 37, 39], "less": [4, 17, 27], "obviou": 4, "architectur": [4, 32, 34], "bias": [4, 7, 17, 20, 34, 36, 37, 53], "train": [4, 5, 17, 66], "effici": [4, 43, 45], "backpropag": [4, 17, 53], "thei": [4, 5, 16, 18, 42, 43], "correspond": [4, 7, 9, 14, 22, 43, 45, 47, 48, 49], "mode": 4, "autom": [4, 33, 34], "super": 4, "deep": [4, 34, 36, 37], "ml": [4, 36], "small": 4, "dcpp": 4, "It": [4, 5, 13, 29, 40, 41, 43, 44, 47], "add": [4, 7, 9, 10, 20, 22, 23, 32, 33, 48, 53], "backward": [4, 34], "kernel_typ": 4, "sigmoid": [4, 9, 17, 22, 36, 37], "hyperbol": [4, 9, 22], "tangent": [4, 9, 22], "rectifi": [4, 9, 22], "linear": [4, 7, 9, 20, 22, 33, 35, 48, 49, 53], "unit": [4, 7, 9, 20, 22, 35, 43, 44], "exponenti": [4, 9, 22, 27, 43], "sin_nu": [4, 9], "unari": [4, 9, 22], "sine": [4, 9, 22], "cos_nu": [4, 9], "cosin": [4, 9, 22], "gaussian_nu": [4, 9], "inv_sum": [4, 9], "ab": [4, 9, 55, 56], "absolut": [4, 9, 27], "funxtion": 4, "dcgpann": [4, 9, 17, 22, 32, 66], "2u": [4, 5, 13, 51, 58, 59, 60, 61], "overrid": [4, 5], "u": [4, 5, 8, 38, 39, 42], "enable_double_str": 4, "produc": [4, 34, 36, 45], "initialz": 4, "d_loss": 4, "gweight": 4, "gbias": 4, "cumul": 4, "gradient": [4, 5, 7, 13, 17, 20, 29, 36, 37, 40, 41, 50], "loop": [4, 40, 41, 42, 50], "mani": [4, 11, 25, 36, 37, 43, 44, 45, 47, 53], "total": [4, 55, 56, 57, 62, 63], "w": [4, 7, 17, 20, 32, 34, 37, 40, 41, 50], "must": [4, 12, 13, 16, 17, 18, 26], "process": [4, 15, 17, 27, 35, 38, 53], "sgd": [4, 17, 34, 36, 37], "lr": [4, 6, 17, 19, 34, 36, 37], "batch_siz": [4, 17, 34, 36, 37], "shuffl": [4, 17, 34, 36, 37], "descent": [4, 5, 7, 12, 17, 20, 36, 37, 40, 41], "epoch": [4, 15, 17, 19, 25, 26, 36, 37], "learn": [4, 6, 7, 11, 12, 17, 19, 20, 25, 26, 32, 34, 35, 36, 37, 38, 42, 43, 49, 50, 53, 59, 60, 66], "rate": [4, 6, 19, 41], "defin": [4, 5, 7, 8, 11, 12, 13, 17, 20, 21, 25, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 53, 54, 58], "befor": [4, 17, 49], "do": [4, 32, 39, 44, 45, 55, 56, 57, 58, 62, 63], "match": [4, 16, 17], "posit": [4, 6, 9, 17, 22], "averag": [4, 17, 45], "across": [4, 17, 26], "whole": [4, 16, 17, 34, 61], "though": [4, 39], "free": [4, 40, 41], "set_output_f": [4, 17, 34], "task": [4, 11, 12, 17, 25, 26, 32, 34, 36, 37, 58, 61, 66], "expect": [4, 17, 29, 35, 39, 40, 41, 46, 50], "henc": [4, 5, 7, 17, 20, 32, 43, 53, 54], "layer": [4, 17, 35, 36, 37], "should": [4, 13, 17], "n_active_weight": [4, 17, 34, 36, 37], "uniqu": [4, 17, 34, 36, 37], "fals": [4, 13, 15, 16, 17, 19, 25, 26, 29, 34, 36, 37, 39, 40, 41, 45, 46, 50, 58, 59, 60, 61], "influenc": [4, 17], "complex": [4, 12, 13, 17, 26, 29, 31, 34, 36, 37, 40, 41, 45, 48, 49, 61], "count": [4, 17, 59], "same": [4, 11, 13, 17, 20, 25, 38, 51], "two": [4, 8, 12, 13, 14, 17, 26, 27, 29, 32, 35, 36, 37, 44, 45, 48, 49, 59, 60], "set_weight": [4, 5, 17, 18, 34, 50], "input_id": [4, 5, 17, 18, 34], "whose": [4, 5, 17, 18], "convent": [4, 5, 17, 18], "adopt": [4, 5, 17, 18], "http": [4, 5, 13, 17, 18, 27, 29, 33, 36, 45, 47], "ppsn2014": [4, 5, 17, 18], "ij": [4, 5, 17, 18], "si": [4, 5, 17, 18], "file": [4, 5, 17, 18, 45, 51], "slide": [4, 5, 17, 18], "tutorial3": [4, 5, 17, 18], "pdf": [4, 5, 17, 18], "size_typ": [4, 10, 13], "get_weight": [4, 5, 17, 18, 34, 37, 50], "randomise_weight": [4, 17, 34, 36, 37], "result_typ": 4, "random_numb": 4, "randomis": [4, 17], "normal": [4, 17, 27, 34, 35, 36, 37, 50, 53], "distribut": [4, 17, 27, 34, 36, 37], "standard": [4, 17, 27, 32, 52, 59, 60], "deviat": [4, 17], "set_bia": [4, 17], "set_bias": [4, 17, 34], "get_bia": [4, 17], "get_bias": [4, 17, 34, 37], "randomise_bias": [4, 17, 34, 36, 37], "more": [5, 17, 23, 37, 45, 48, 52], "expand": [5, 40, 41, 50, 58, 59, 60], "rest": 5, "remain": [5, 43], "addit": [5, 7, 9, 20, 22, 33], "per": [5, 27, 61], "functor_enabl": 5, "accord": [5, 12, 26], "compil": [5, 33, 36, 37, 45, 51], "sfina": 5, "ident": [5, 39], "conveni": 5, "gd4cgp": [6, 19], "not_population_bas": 6, "typic": [6, 19], "present": [6, 19, 40, 41, 53], "termin": [6, 19, 43, 44, 47, 48, 49], "profound": [6, 19], "effect": [6, 19, 43], "open": [6, 19, 45, 54], "question": [6, 19], "how": [6, 19, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 49, 58, 59, 60, 61], "balanc": [6, 19], "continu": [6, 11, 12, 13, 19, 25, 26, 29, 44, 50], "integ": [6, 11, 12, 13, 19, 29], "tackl": [6, 19], "modifi": [6, 19], "leav": [6, 19], "unchang": [6, 19], "geval": [6, 19], "gradient_magnitud": 6, "max_it": [6, 19], "lr_min": [6, 19], "1e": [6, 15, 19, 25, 39, 40, 41, 46, 50, 55, 56, 57, 58, 59, 60, 61, 62, 63], "strictli": [6, 43], "detect": 6, "grad": [6, 19], "norm": [6, 19], "9349": 6, "95": [6, 39, 41, 46, 50], "4180": 6, "21": [6, 15, 19, 25, 26, 29, 39, 40, 41, 44, 46, 50], "5": [6, 11, 12, 24, 25, 26, 28, 31, 33, 34, 35, 36, 37, 38, 39, 42, 46, 51, 57, 58, 59, 60, 61], "7390": 6, "53": [6, 39, 40, 46, 50], "308": 6, "04": 6, "375": [6, 46], "5625": 6, "7386": 6, "77": [6, 39, 40, 41, 46, 50], "312": [6, 40], "186": [6, 50], "140625": 6, "210938": 6, "7353": 6, "6": [6, 11, 12, 16, 17, 19, 25, 26, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 55, 56, 57, 61], "169": [6, 39], "472": [6, 46], "316406": 6, "7335": 6, "08": [6, 58, 60], "7": [6, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 55, 56, 57, 61, 62, 63], "938": 6, "474609": 6, "7320": 6, "24": [6, 11, 25, 39, 46, 50], "8": [6, 11, 12, 17, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61], "269": [6, 46], "803": 6, "118652": 6, "9": [6, 28, 31, 34, 35, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 55, 56, 61, 63], "177979": 6, "7295": 6, "06": [6, 45], "168": [6, 50], "844": 6, "266968": 6, "7271": 6, "23": [6, 38, 39, 46, 50], "width": 6, "ann": [7, 20, 34, 36, 37, 53], "literatur": [7, 11, 20, 25, 34], "fundament": [7, 20, 33, 35, 38, 42, 43, 44, 47, 48, 49, 51], "like": [7, 8, 20, 35], "trigonomoetr": [7, 20], "definit": [7, 9, 20, 22, 44], "own": [7, 10, 20, 43, 47, 48, 49], "choosen": [7, 20], "alreadi": [7, 20], "code": [7, 17, 20, 33, 34, 54], "ship": [7, 20, 35, 43, 47, 48, 49], "easili": [7, 20, 33, 34, 42], "avail": [7, 14, 16, 17, 18, 20, 23, 27, 33, 34, 47, 48, 49], "sever": [7, 20, 54], "kind": [7, 20], "term": [7, 11, 13, 20, 25, 29, 32, 45, 46, 53, 62, 63], "relat": [7, 13, 20, 39, 45], "three": [7, 16, 18, 20, 34, 36, 39, 40, 41, 43, 44], "origin": [7, 20, 27, 34, 42, 43, 59, 60, 61], "1999": [7, 20, 40], "formul": [7, 20, 39], "edg": [7, 20], "2016": [7, 20, 32], "expression_ann": [7, 20, 34], "inclus": [7, 20], "backproag": [7, 20], "2018": [7, 20, 32], "abov": [7, 20, 33, 38, 39], "For": [7, 14, 20, 33, 35, 37, 42, 44, 52], "inner": [7, 13, 20], "audi": [7, 13, 33, 51, 53, 55, 56, 57, 62, 63], "cf": 7, "chosen": [7, 20, 29, 39, 50], "refer": [7, 8, 10, 11, 20, 25, 33], "anoth": [7, 20], "import": [7, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "upon": [7, 16, 18, 20], "vectorized_doubl": 7, "whenev": 7, "need": [7, 13, 17, 20, 33, 35, 39, 40, 41, 42, 45, 46, 50], "facilit": [7, 10, 20], "design": [7, 20, 39], "interfac": [7, 13, 20, 29, 33, 35], "optimis": [7, 20], "suit": [7, 11, 12, 13, 20, 25, 26, 29], "pygmo": [7, 15, 19, 20, 25, 26, 29, 33, 38, 43, 44, 45, 47, 48, 49], "": [7, 20, 21, 27, 34, 36, 37, 45, 64], "jargon": [7, 20], "build": [7, 20, 40, 51], "strategi": [7, 20, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 52, 61], "To": [8, 33, 36, 37, 39, 51], "accept": 8, "prototyp": 8, "textual": 8, "intend": [8, 10], "someth": [8, 42], "my_sum": [8, 10, 21], "retval": [8, 46, 55, 56, 57, 62, 63], "auto": [8, 10, 55, 56, 57, 58, 59, 60, 61, 62, 63], "print_my_sum": [8, 10, 21], "v": [8, 39, 50, 66], "pf": 8, "ex": [8, 16, 17, 35, 36, 42, 51, 55, 56, 57, 62, 63], "parenthesi": [8, 10], "ln": 8, "s1": 8, "s2": 8, "inout": [8, 10], "argument": [8, 10], "sum_i": [9, 22], "x_i": [9, 16, 22, 31, 39], "diff": [9, 10, 13, 15, 16, 17, 18, 19, 22, 23, 25, 26, 29, 35, 38, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "subtract": [9, 22], "x_1": [9, 13, 22, 31, 39], "sum_": [9, 22, 31, 39], "mul": [9, 10, 13, 15, 16, 17, 18, 19, 22, 23, 25, 26, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "prod_i": [9, 22], "div": [9, 10, 16, 17, 18, 22, 23, 41, 45, 46, 50, 51, 55, 56, 57, 62, 63], "divis": [9, 22, 40], "prod_": [9, 22], "pdiv": [9, 13, 22, 38, 39, 40, 41, 42, 44, 47, 48, 58, 59, 60, 61], "protect": [9, 22, 40, 43], "ignor": [9, 22, 39, 46, 57], "sin": [9, 22, 23, 28, 31, 37, 39, 46, 49, 61, 63], "co": [9, 22, 28, 31, 34, 39, 46, 49, 61, 63], "natur": [9, 22], "logarithm": [9, 22], "exp": [9, 22, 23, 35, 36, 37, 42, 43, 45, 46, 63], "sqrt": [9, 22, 37, 40, 50], "root": [9, 22], "psqrt": [9, 22], "suitabl": [9, 22, 49], "frac": [9, 22, 27, 28, 31, 38, 39, 42, 44, 45, 46, 47, 48], "left": [9, 22, 27, 35, 38, 39, 43, 44, 45, 47, 48, 49, 61], "right": [9, 22, 27, 35, 38, 39, 43, 44, 45, 47], "otherwis": [9, 22], "invers": [9, 22], "vert": 9, "assembl": [10, 42], "greatli": 10, "option": [10, 43, 44, 47], "custom": [10, 66], "fill": [10, 17], "kernel_vector": 10, "basic_set": [10, 51, 55, 56, 57, 62, 63], "push_back": [10, 23, 35, 62, 63], "five": [10, 39, 45], "kernel_vector2": 10, "helper": [10, 23], "request": [10, 48, 49], "kernel_nam": [10, 23], "insert": 10, "implement": [10, 29, 33, 35, 36, 53, 54], "clear": [10, 43], "remov": 10, "requir": [10, 16, 17, 33, 44, 46, 51, 58], "wide": [11, 25, 36, 37, 40, 41, 45], "synergi": [11, 25], "local": [11, 25, 50], "procedur": [11, 25], "baldwinian": [11, 25], "ea": [11, 25], "lamarckian": [11, 25], "cultur": [11, 25], "veri": [11, 25, 43], "seen": [11, 25, 41], "hybrid": [11, 25, 40, 41], "techniqu": [11, 25, 40, 41, 42, 47, 59, 60], "regardless": [11, 25], "terminologi": [11, 25], "view": [11, 25], "applic": [11, 13, 25, 29, 32, 44, 53], "consider": [11, 25], "stand": [11, 25, 40, 41], "issu": [11, 25], "find": [11, 12, 13, 25, 26, 29, 33, 40, 41, 49, 64], "classic": [11, 24, 25, 47, 58], "tradition": [11, 25], "second": [11, 12, 13, 25, 26, 27, 29, 32, 40, 41, 46, 49, 51, 59, 60], "help": [11, 25], "outlin": [11, 12, 25, 26], "alessio": [11, 25, 28, 32], "mereta": [11, 25, 28, 32], "confer": [11, 25, 28, 32], "pp": [11, 25, 32], "35": [11, 25, 32, 37, 39, 40, 46, 49, 50, 58], "51": [11, 25, 32, 39, 41, 46, 50], "springer": [11, 25, 28, 32], "2017": [11, 25, 28, 32], "life": [11, 12, 25, 26], "2802": [11, 25], "82": [11, 25, 39, 46, 50], "35943": [11, 25], "40": [11, 12, 25, 26, 39, 46, 50, 61], "948": [11, 25], "839": [11, 25], "9722": [11, 25], "20": [11, 12, 15, 19, 25, 26, 29, 34, 36, 37, 39, 40, 42, 44, 45, 46, 49, 50, 57, 61], "80": [11, 12, 25, 26, 39, 46, 48, 50, 61], "823": [11, 25], "816": [11, 25], "38173": [11, 25], "30": [11, 12, 25, 26, 31, 34, 37, 39, 46, 49, 50, 58, 61], "120": [11, 12, 25, 26, 39, 50, 61], "473": [11, 25, 46], "274": [11, 25], "48466": [11, 25], "160": [11, 25, 50, 61], "338": [11, 25], "735": [11, 25], "2287": [11, 25], "50": [11, 12, 25, 26, 31, 36, 37, 39, 45, 46, 48, 50, 57, 60, 61], "107": [11, 25], "126": [11, 25, 45], "60": [11, 12, 25, 26, 39, 46, 50, 61], "240": [11, 25, 61], "2064": [11, 25], "844799": [11, 25], "70": [11, 12, 25, 26, 39, 46, 50, 61], "280": [11, 25], "320": [11, 25], "3605": [11, 25], "03424": [11, 25], "90": [11, 12, 25, 26, 39, 40, 46, 50, 61], "360": [11, 25], "By": [12, 26, 34, 36], "increas": [12, 26, 40, 41, 50], "alwai": [12, 26, 39], "theoret": [12, 26], "possibl": [12, 14, 26, 34, 35, 48, 53], "almost": [12, 26], "perfect": [12, 26, 58], "As": [12, 26, 34, 39, 40, 41], "consequ": [12, 26], "trade": [12, 26], "accuraci": [12, 13, 26, 27, 29, 36], "ultim": [12, 26], "extend": [12, 26], "multiobject": [12, 26, 29, 61], "domin": [12, 26, 64], "sort": [12, 26, 45], "ndf": [12, 26, 49, 61], "stop": [12, 19, 38, 39, 46], "criterion": 12, "achiev": 12, "mut_n": 12, "compl": [12, 26, 49, 61], "07319": [12, 26], "92": [12, 26, 39, 46, 50], "15419": [12, 26], "92403": [12, 26, 61], "33": [12, 16, 19, 26, 37, 39, 41, 46, 50], "3000": [12, 26, 36, 44, 59, 61, 63], "373663": [12, 26], "12": [12, 26, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57], "72": [12, 26, 33, 39, 40, 46, 50], "36954": [12, 26], "13": [12, 26, 31, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 61], "5000": [12, 26, 37, 40, 41, 59, 61], "235749": [12, 26], "16": [12, 19, 26, 29, 39, 40, 41, 42, 43, 45, 46, 48, 50, 55, 56, 61, 62, 63], "73": [12, 26, 37, 39, 40, 46, 50], "6000": [12, 26, 58, 59, 61], "7000": [12, 26, 59, 61], "8000": [12, 15, 26, 59, 61], "217968": [12, 26], "75": [12, 26, 39, 40, 46, 50], "9000": [12, 26, 59, 61], "10000": [12, 26, 38, 41, 43, 45, 47, 55, 56, 57, 58, 59, 61, 62], "110": [12, 26, 50, 61], "11000": [12, 26, 61], "14": [12, 15, 26, 27, 39, 40, 41, 43, 44, 46, 48, 49, 50, 61], "12000": [12, 26, 59, 61], "130": [12, 26, 50, 61], "13000": [12, 26, 61], "140": [12, 26, 46, 61], "14000": [12, 26, 59, 61], "162293": [12, 26], "52": [12, 26, 39, 40, 46, 50], "front": [12, 26, 64], "lowest": [12, 44], "analysi": [13, 29], "dataset": [13, 29, 36], "both": [13, 29, 34, 35], "simplic": [13, 29], "ref": [13, 29], "en": [13, 29], "wikipedia": [13, 29], "org": [13, 29], "wiki": [13, 29], "core": [13, 45], "easi": [13, 29], "wai": [13, 29, 36, 37], "asid": [13, 29, 49], "consid": [13, 29, 39, 45, 48, 49, 61], "empti": [13, 16, 17], "dummi": [13, 46], "member": 13, "m_point": 13, "m_label": 13, "access": [13, 33], "10u": [13, 55, 56, 62, 63], "11u": 13, "multi_object": [13, 29, 44, 45, 49, 61], "parallel_batch": [13, 29], "compat": [13, 29], "either": [13, 16], "engin": [13, 66], "consist": [13, 56], "etc": [13, 15, 16, 19, 25, 26, 29, 45, 53], "malform": [13, 16, 17, 39, 46], "get_nobj": 13, "decis": [13, 38], "sparsity_pattern": 13, "gradient_spars": 13, "sparsiti": [13, 29], "pattern": 13, "patter": 13, "dens": [13, 36, 37], "assum": [13, 16, 17, 18, 29, 33, 46], "hessians_spars": 13, "pair": [13, 50], "get_bound": 13, "box": 13, "compon": [13, 29, 41, 50], "get_nix": 13, "pretti": [13, 58, 59, 60], "here": [13, 27, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 61, 62, 63], "obtain": [13, 43, 44, 53, 60], "directli": [13, 17, 35, 40, 41], "x_2": [13, 31], "c_1": 13, "c_2": 13, "get_cgp": 13, "reus": 13, "hack": 13, "altern": 13, "friendship": 13, "uughhh": 13, "seem": [13, 45, 46], "expens": 13, "FOR": 13, "IN": 13, "set_cgp": 13, "thread_safeti": 13, "get_thread_safeti": 13, "safeti": [13, 29], "none": [13, 16, 17, 36, 37], "piton": 13, "could": [13, 36, 37, 41, 43, 50], "gdual_v": 13, "dpc": 13, "No": [13, 16], "care": [13, 43], "pass": [13, 42], "split": [14, 29, 36], "keep": [14, 27], "similar": [14, 45], "expos": [14, 33], "arbitrari": 14, "underscor": 14, "expression_doubl": [14, 17, 18, 20, 35, 42], "int": [15, 16, 17, 18, 19, 25, 26, 29, 45, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "float": [15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 31, 39, 46], "rais": [15, 16, 17, 18, 19, 25, 26, 29, 39], "failur": [15, 19, 25, 26, 29], "intersect": [15, 19, 25, 26, 29], "convers": [15, 19, 25, 26, 29, 35], "mismatch": [15, 19, 25, 26, 29], "signatur": [15, 19, 25, 26, 29, 41, 50], "valueerror": [15, 16, 17, 18, 19, 25, 26], "bfe_mp": 15, "archipelago": [15, 38], "nest": 15, "lead": 15, "assertionerror": 15, "daemon": 15, "children": 15, "record": [15, 19, 25, 26], "frequenc": [15, 19, 25, 26], "noth": [15, 19, 25, 26], "impli": [15, 19, 25, 26], "generate_koza_quint": [15, 19, 24, 25, 26, 29, 58], "kernel_set_doubl": [15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 34, 35, 38, 42, 43, 44, 45, 47, 48, 49], "7398": 15, "22497": 15, "233": [15, 39], "979": 15, "34118": 15, "26131": 15, "15376": 15, "26126": 15, "15198": 15, "1400": [15, 60], "5600": 15, "6400": 15, "664691": 15, "12614": 15, "1800": 15, "7200": 15, "664689": 15, "12548": 15, "condit": [15, 19, 25, 26, 46, 58, 59, 60, 61, 62, 63], "139620548432": 15, "arrai": [15, 16, 17, 24, 25, 27, 28, 29, 31, 39, 40, 41, 44, 45, 46, 50], "22496858": 15, "see": [15, 19, 25, 26, 27, 33, 34, 35, 38, 43, 44, 47, 48, 49], "doc": [15, 19, 25, 26, 43, 47, 48, 49], "col": [16, 17, 18, 29, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51], "levels_back": [16, 17, 18, 29, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51], "randint": [16, 17, 18, 39, 40, 41, 46, 50], "unless": [16, 17, 18], "kernel_doubl": [16, 17, 18, 20, 23, 35], "str": [16, 17, 18, 29, 35, 45, 49, 50], "11": [16, 17, 18, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 49, 50, 61], "32": [16, 17, 18, 34, 36, 37, 38, 44, 46, 50], "num_out": [16, 17, 18], "sym_out": [16, 17, 18], "get_col": [16, 50], "get_levels_back": 16, "get_row": [16, 50], "2d": [16, 17, 24, 27, 28, 29, 31], "numpi": [16, 17, 24, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50], "supervis": [16, 17], "signal": [16, 17], "incompat": 16, "done": [16, 33, 35], "def": [16, 21, 35, 36, 39, 40, 41, 42, 45, 46, 50], "simplifi": [16, 17, 35, 39, 40, 41, 45, 46, 50, 51], "in_sym": [16, 17, 51, 55, 56, 57, 62, 63], "subs_weight": [16, 17], "erc": [16, 17], "sympi": [16, 17, 33, 35, 38, 42, 43, 44, 45, 46, 47, 48, 49], "pyaudi": [16, 17, 33, 35, 39, 40, 41, 42, 46, 50, 51], "modul": [16, 17, 33, 46], "instal": [16, 17, 32, 46, 51], "your": [16, 17, 33, 43, 44, 47, 48, 49, 51, 58, 59, 61], "system": [16, 17, 32, 33, 44, 53, 64], "length": [16, 17], "whether": [16, 17], "substitut": [16, 17], "instead": [16, 17, 42], "doe": [16, 17], "larger": [16, 17, 19], "importerror": [16, 17], "expression_weighted_gdual_doubl": [16, 17], "kernel_set_gdual_doubl": [16, 17, 18, 20, 22, 51], "c0": [16, 17], "visual": [16, 17, 33, 34, 36, 37, 39, 43, 44, 46, 47, 48, 49, 51], "draw_inact": 16, "draw_weight": 16, "graphviz": [16, 33, 46], "draw": [16, 33], "digraph": 16, "pygraphviz": 16, "nonempti": 16, "gdual_doubl": [16, 18, 21, 35, 51], "kernel_gdual_doubl": [16, 18, 20, 23, 35], "gdual_vdoubl": [16, 18, 21, 39, 40, 41, 46, 50], "kernel_gdual_vdoubl": [16, 18, 20, 23], "kernel_set_gdual_vdoubl": [16, 18, 20, 22, 39, 40, 41, 46, 50], "ad": [17, 35, 38, 43], "you": [17, 33, 36, 37, 48, 49, 51], "randomint": 17, "want": [17, 34, 42, 43, 44, 45, 47, 48, 49, 59, 60], "softmax": [17, 36], "neuron": [17, 36], "mini": 17, "decreas": 17, "proxi": 17, "real": [17, 27, 34, 39, 58, 66], "show_connect": 17, "fill_color": 17, "show_nonlinear": [17, 34, 36, 37], "active_connection_alpha": [17, 34], "inactive_connection_alpha": 17, "01": [17, 46], "legend": [17, 34, 36, 37], "show": [17, 34, 36, 37, 42, 43, 48, 49, 58, 59, 60], "show_inact": 17, "alpha": [17, 38, 42, 43, 44, 45, 47], "rgb": 17, "color": [17, 37], "15": [17, 19, 33, 34, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 55, 56, 61, 62, 63], "expression_gdual_doubl": [18, 20, 51], "expression_gdual_vdoubl": [18, 20, 39, 40, 41, 46], "criteria": 19, "4588": 19, "687": [19, 39], "738": 19, "4520": 19, "41": [19, 39, 40, 46, 50], "676": 19, "004": 19, "225": 19, "4420": 19, "658": 19, "404": 19, "3375": 19, "4275": 19, "632": 19, "50625": 19, "4068": 19, "54": [19, 38, 39, 40, 46, 47, 50], "5979303850145": 19, "assort": 20, "gym": [20, 43, 58, 59, 60, 61], "test": [20, 33, 36, 37, 51], "variou": [20, 33, 51], "propos": [20, 27, 40, 41, 43, 49], "methodologi": 20, "come": [20, 35, 44], "sourc": [20, 54], "These": [20, 27, 28, 31], "collect": [20, 27], "koza": [20, 64], "quintic": [20, 64], "p1": [20, 59, 60], "p7": 20, "vladislavleva": [20, 48, 49], "nist": [20, 47], "strd": [20, 47], "callable_f": 21, "callable_": 21, "join": [21, 35], "my_kernel": 21, "common": [23, 34, 59, 60], "retriev": 23, "sampl": [24, 28, 31, 37], "ten": [24, 28], "matplotlib": [24, 27, 28, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], "pyplot": [24, 27, 28, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "plt": [24, 27, 28, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "plot": [24, 27, 28, 31, 34, 35, 36, 37, 38, 43, 44, 45, 47, 48, 49], "8212344354": 25, "35943212": 25, "0731942123423": 26, "physic": [27, 42, 66], "web": 27, "page": [27, 54], "www": [27, 45, 47], "gov": [27, 47], "itl": [27, 47], "generate_chwirut1": 27, "studi": [27, 28, 31, 44, 45, 53], "involv": 27, "ultrason": [27, 38, 47], "calibr": 27, "respons": [27, 38, 47], "predictor": 27, "metal": [27, 38, 47], "distanc": [27, 38, 47], "div898": [27, 47], "nl": [27, 47], "chwirut1": 27, "shtml": [27, 47], "beta_1": 27, "beta_2": 27, "beta_3": 27, "epsilon": 27, "generate_chwirut2": [27, 38, 47], "chwirut2": [27, 47], "generate_daniel_wood": 27, "daniel": 27, "wood": 27, "1980": 27, "publish": 27, "introduct": 27, "statist": [27, 39, 40, 41, 46, 50], "infer": 27, "van": 27, "nostrand": 27, "compani": 27, "princeton": 27, "nj": 27, "1962": 27, "p": [27, 34, 36, 39, 50, 55, 56], "354": [27, 46], "energi": [27, 39], "radiet": 27, "carbon": 27, "filament": 27, "lamp": 27, "cm": [27, 37], "temperatur": [27, 43, 44], "degre": 27, "kelvin": 27, "daniel_wood": 27, "generate_gauss1": 27, "separ": [27, 38, 45], "decai": 27, "baselin": 27, "plu": 27, "nois": [27, 43], "varianc": 27, "25": [27, 39, 46, 50], "gauss1": 27, "beta_4": 27, "beta_5": 27, "beta_6": 27, "beta_7": 27, "beta_8": 27, "generate_kirby2": 27, "scan": 27, "electron": 27, "microscop": 27, "151": [27, 46, 50], "kirby2": 27, "generate_lanczos2": 27, "discuss": 27, "lanczo": 27, "1956": 27, "were": [27, 45], "digit": 27, "lanczos2": 27, "trivial": [27, 39], "generate_misra1b": 27, "dental": 27, "monomolecular": 27, "adsorpt": 27, "volum": 27, "pressur": 27, "misra1b": 27, "x2": 27, "seven": 28, "paper": [28, 31, 46, 48, 49, 62, 63], "generate_p1": [28, 59, 60, 61], "pi": [28, 34, 59, 60], "generate_p2": 28, "p2": 28, "generate_p3": 28, "p3": 28, "generate_p4": 28, "p4": 28, "1x": 28, "generate_p5": 28, "p5": 28, "generate_p6": 28, "p6": 28, "generate_p7": 28, "17": [29, 39, 40, 41, 43, 45, 46, 48, 50, 51, 61], "kernel_": 29, "pg": [29, 38, 43, 44, 45, 47, 48, 49], "prob": [29, 38, 43, 44, 45, 47, 48, 49], "62": [29, 39, 46, 50, 61], "61": [29, 39, 41, 46, 50], "constraint": 29, "inequ": 29, "disabl": 30, "enabl": [30, 32, 53], "ekaterina": [31, 48, 49], "j": [31, 48, 49, 50], "guido": [31, 48, 49], "smit": [31, 48, 49], "dick": [31, 48, 49], "den": [31, 48, 49], "hertog": [31, 48, 49], "measur": [31, 38, 43, 44, 47, 48, 49], "pareto": [31, 48, 49], "ieee": [31, 48, 49], "transact": [31, 48, 49], "2008": [31, 48, 49], "333": [31, 48, 49], "349": [31, 48, 49], "generate_kotanchek": 31, "kotanchek": 31, "hundr": 31, "mpl_toolkit": [31, 37, 48, 49], "mplot3d": [31, 37, 48, 49], "axes3d": [31, 37, 48, 49], "fig": [31, 37, 45, 48, 49], "figur": [31, 37, 39, 46, 48, 49], "ax": [31, 34, 37, 45, 48, 49], "gca": [31, 37], "project": [31, 37, 45, 48, 49, 51, 61], "3d": [31, 37, 48, 49], "scatter": [31, 45, 48, 49], "generate_salutowicz": 31, "salutowicz": 31, "uniformli": 31, "generate_salutowicz2d": 31, "salutowicz2d": 31, "601": [31, 40], "05": [31, 34, 37, 41, 45, 59], "generate_uball5d": 31, "uball5d": 31, "1024": 31, "generate_ratpol3d": 31, "ratpol3d": 31, "x_3": 31, "generate_sinecosin": [31, 49], "sinecosin": [31, 49], "generate_rippl": 31, "rippl": 31, "generate_ratpol2d": [31, 48], "ratpol2d": 31, "recent": [32, 53], "develop": [32, 53], "about": [32, 39, 42, 43, 46, 53], "subject": [32, 53], "evolut": [32, 38, 39, 40, 41, 45, 49, 53, 56, 66], "equival": [32, 53], "propag": [32, 41, 53], "addition": 32, "equat": [32, 39, 44, 53, 62, 63, 66], "captur": 32, "conserv": [32, 39, 53], "dynam": [32, 53, 66], "guid": [32, 51], "quick": [32, 33], "background": 32, "credit": 32, "changelog": 32, "dcgp1": [32, 53], "arxiv": 32, "version": [32, 51], "dcgp2": [32, 53], "marcu": 32, "m\u00e4rten": 32, "proceed": 32, "companion": 32, "181": [32, 50], "182": 32, "acm": 32, "header": 33, "librari": [33, 53, 54], "third": [33, 49], "parti": 33, "boost": [33, 58, 59, 60, 61], "eigen": 33, "tbb": 33, "let": [33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "write": [33, 41], "advantag": 33, "multicor": 33, "2020": 33, "high": [33, 44], "github": [33, 45], "com": 33, "bluescarni": 33, "manipul": [33, 35, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49], "spars": 33, "math": [33, 45, 50], "familiar": 33, "packag": [33, 35, 41, 50], "manag": 33, "environ": [33, 36], "readi": 33, "command": 33, "build_dcgp": 33, "cmake": [33, 51], "cxx": 33, "cpp": [33, 35, 51], "devel": 33, "sure": [33, 42, 57], "mai": [33, 39, 41, 42, 43, 45], "download": 33, "latest": [33, 47, 48, 49], "git": 33, "clone": 33, "darioizzo": 33, "configur": 33, "directori": 33, "dboost_no_boost_cmak": 33, "ON": 33, "dcmake_install_prefix": 33, "miniconda3": [33, 50], "env": [33, 50], "dcmake_prefix_path": 33, "finish": [33, 38], "run": [33, 38, 39, 40, 41, 45, 46, 48, 49, 50, 51, 55, 56, 57, 62, 63], "successful": 33, "cmake_install_prefix": 33, "went": 33, "main": [33, 35, 40, 41, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "osx": 33, "linux": 33, "win": 33, "pip": [33, 46], "18": [33, 39, 40, 41, 44, 46, 48, 49, 50, 61], "comprehens": 33, "static": 33, "anim": 33, "interact": [33, 38, 44], "42": [33, 39, 40, 46, 50], "forg": 33, "channel": 33, "config": 33, "automat": [33, 53], "pleas": 33, "instruct": 33, "setup": [33, 38, 45], "run_test_suit": 33, "mp_island": 33, "shutdown_pool": 33, "mp_bfe": 33, "pybind11": [33, 38], "seamless": 33, "correctli": 33, "ddcgp_build_dcgp": 33, "ddcgp_build_dcgpi": 33, "fire": 33, "consol": 33, "k": [34, 35, 39, 40, 41, 46, 50, 51], "shallow": 34, "convolut": 34, "unlik": [34, 39], "higher": [34, 39, 46], "np": [34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50], "tqdm": [34, 36, 37], "limit": 34, "amount": [34, 50], "notabl": 34, "001": 34, "Or": 34, "specif": 34, "w5_1": 34, "usual": 34, "025039127544017294": 34, "messi": 34, "charact": 34, "150": [34, 37, 46, 50, 60, 61], "39": [34, 35, 39, 40, 41, 42, 45, 46, 50], "b101": 34, "w101_0": 34, "b79": 34, "w79_0": 34, "b45": 34, "w45_0": 34, "b8": 34, "w8_0": 34, "w8_1": 34, "w45_1": 34, "b21": 34, "w21_0": 34, "w21_1": 34, "w45_2": 34, "b40": 34, "w40_0": 34, "b14": 34, "w14_0": 34, "w14_1": 34, "w4": 34, "slightli": 34, "nor": 34, "subplot": [34, 45], "figsiz": [34, 39, 45, 46], "_": [34, 35, 36, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50], "set_titl": 34, "difficult": [34, 46], "becom": 34, "sample_s": 34, "linspac": [34, 40, 41, 42, 44, 46, 50], "reshap": [34, 37, 44, 45], "titl": [34, 36, 37, 38, 43, 44, 45, 47, 48, 49], "forc": [34, 35, 39], "nonliear": 34, "net": [34, 36, 37], "len": [34, 36, 37, 41, 45, 50], "13025583420928363": 34, "220": [34, 46, 61], "166": [34, 50], "store": 34, "histori": [34, 36, 37], "n_epoch": [34, 36], "50000": 34, "re": [34, 36, 37, 39, 40, 41, 46, 50], "00": [34, 36, 37], "29": [34, 36, 39, 40, 46, 50, 60], "lt": [34, 36, 37, 39], "1718": 34, "94it": [34, 37], "577340177339237e": 34, "semilogi": [34, 37, 45, 47, 48], "slowdown": 35, "reason": 35, "necessari": [35, 38, 40, 42, 43, 44, 47, 48, 49], "nice": [35, 38, 42, 43, 44, 45, 47, 48, 49], "init_print": [35, 38, 42, 43, 44, 45, 47, 48, 49], "pars": [35, 38, 42, 43, 44, 45, 47, 48, 49], "sympy_pars": [35, 38, 42, 43, 44, 45, 47, 48, 49], "my_fun": 35, "understand": 35, "semant": 35, "interpret": 35, "z": [35, 37], "my_fun_print": 35, "truth": 35, "reli": 35, "fact": [35, 41, 50], "0011": 35, "0559081580940681": 35, "wrote": 35, "my_kernel_doubl": 35, "my_gaussian": 35, "my_kernel_gdual_doubl": 35, "And": [35, 36, 37, 38, 42, 43, 44, 47, 48, 49, 58], "18087": 35, "dx": [35, 39, 46], "05591": 35, "166622": 35, "slow": 35, "down": 35, "wrap": 35, "elaps": [35, 36, 37], "709980010986328": 35, "cpp_kernel": 35, "939939498901367": 35, "7784576416015625": 35, "parsabl": 35, "displaystyl": [35, 38, 43, 44, 45, 47, 48], "toolbox": [36, 37], "sklearn": [36, 37], "timeit": [36, 37], "genfromtxt": 36, "ic": 36, "uci": 36, "edu": 36, "abalon": 36, "my_data": 36, "abalone_data_set": 36, "csv": 36, "delimit": 36, "labels_tmp": 36, "trasform": 36, "categor": 36, "hot": 36, "treat": 36, "elif": 36, "els": [36, 40, 41], "x_train": [36, 37], "y_train": [36, 37], "x_test": [36, 37], "y_test": [36, 37], "stabl": [36, 43], "score": 36, "e_x": 36, "metric": 36, "acc": 36, "zip": 36, "argmax": [36, 45], "There": [36, 37, 42], "encode_ffnn": [36, 37], "absent": 36, "655116669472566": 36, "1460": 36, "81": [36, 39, 40, 46, 50], "flush": 36, "start_tim": [36, 37], "default_tim": [36, 37], "append": [36, 37, 39, 40, 41, 46, 50], "582368721500477": 36, "03": 36, "44it": 36, "722099548734631": 36, "7430558265559517": 36, "3997908270102926": 36, "6508071367884452": 36, "gpu": 36, "comparison": 36, "cpu": 36, "sequenti": [36, 37], "initializet": [36, 37], "initializerw": [36, 37], "randomnorm": [36, 37], "stddev": [36, 37], "initializerb": [36, 37], "input_dim": [36, 37], "kernel_initi": [36, 37], "bias_initi": [36, 37], "categorical_crossentropi": 36, "tensorflow": [36, 37], "7097578446865082": 36, "671999990940094": 36, "7359503806396978": 36, "6525063514709473": 36, "497980389976874": 36, "xlabel": [36, 37, 38, 43, 44, 45, 47, 48, 49], "ylabel": [36, 37, 38, 43, 44, 45, 47, 48, 49], "ticker": 37, "linearloc": 37, "formatstrformatt": 37, "unction": 37, "grid": [37, 39, 40, 41, 42, 44, 46, 50, 55, 56, 57, 62, 63], "arang": 37, "n_sampl": 37, "meshgrid": 37, "surf": 37, "plot_surfac": 37, "cmap": 37, "coolwarm": 37, "linewidth": 37, "antialias": 37, "random_st": 37, "3784204557734959": 37, "1120": 37, "_subplot": 37, "axessubplot": 37, "0x7f487c858910": 37, "gt": [37, 39], "lr0": 37, "0001": 37, "70it": 37, "18543911201414": 37, "016128249531917035": 37, "115": [37, 46, 50], "98968720703851": 37, "52u": 37, "018288641115650536": 37, "rmse": 37, "142": [37, 39, 46, 50], "21it": 37, "148": [37, 46], "42it": 37, "31": [37, 39, 46, 50], "156": [37, 46], "85it": 37, "154": [37, 39, 40, 46, 50], "152": [37, 46], "80it": 37, "159": 37, "39it": 37, "161": [37, 39, 50], "65it": 37, "149": [37, 46, 50], "162": [37, 50], "77it": 37, "24it": 37, "previou": 38, "maintain": [38, 54], "ss": [38, 43, 44, 45, 47, 48, 49, 50], "64": [38, 39, 40, 41, 45, 46, 50], "containin": 38, "indivisu": 38, "archi": 38, "pop_siz": 38, "inspect": 38, "statu": 38, "multiprocess": 38, "busi": 38, "pool": 38, "ye": [38, 51], "replac": [38, 50], "polici": [38, 43], "fair": 38, "champion": 38, "1673": 38, "session": 38, "wait": 38, "wait_check": 38, "get_champions_f": 38, "get_champions_x": 38, "b_idx": 38, "argmin": [38, 44, 45], "best_x": [38, 45], "parse_expr": [38, 43, 44, 45, 47, 48, 49], "x_": [38, 43, 44, 45, 47, 48], "y_pred": [38, 43, 44, 45, 47, 48], "comapr": [38, 43, 44, 47], "seterr": [39, 46], "complain": [39, 46], "evalku": [39, 46], "dx_1": 39, "dt": [39, 56], "f_1": 39, "cdot": [39, 48], "x_n": 39, "vdot": 39, "dx_n": 39, "f_n": 39, "motion": 39, "straight": 39, "along": 39, "trajectori": 39, "naiv": 39, "bring": 39, "intrins": 39, "reltat": 39, "state": 39, "varaibl": 39, "schmidt": 39, "2009": 39, "od": [39, 46], "dp": [39, 55, 56], "partial": 39, "dx_i": 39, "f_i": 39, "satisfi": 39, "belong": 39, "toward": [39, 48, 49], "suppress": [39, 55, 57], "give": 39, "That": 39, "dot": 39, "kx": 39, "234213213": 39, "hold": 39, "n_point": 39, "fitness_cal": 39, "dpdx": 39, "get_deriv": [39, 40, 41, 46, 50, 51, 55, 56, 57, 62, 63], "dpdv": 39, "dv": 39, "xcoeff": 39, "constant_cf": [39, 40, 41, 46, 50, 55, 56, 57, 62, 63], "vcoeff": 39, "kcoeff": 39, "err": [39, 40, 41, 45, 55, 56, 57], "offspr": [39, 40, 41, 46, 50], "run_experi": [39, 40, 41, 46, 50], "max_gen": [39, 40, 41, 46, 50], "screen_output": [39, 40, 41, 46, 50], "best_chromosom": [39, 40, 41, 46, 50, 55, 56, 57, 62, 63], "best_fit": [39, 40, 41, 46, 50, 55, 56, 57, 62, 63], "1e10": 39, "increasingli": [39, 46], "nexp": [39, 40, 41, 46, 50], "experi": [39, 40, 41, 43, 45, 46, 50], "accumul": [39, 40, 41, 46, 50], "ert": [39, 40, 41, 46, 50], "restart": [39, 40, 41, 46, 50], "one_sol": 39, "1221": 39, "557": 39, "382": [39, 46], "1249": 39, "198": 39, "1281": 39, "1595": 39, "321": 39, "1804": 39, "1292": 39, "34": [39, 45, 46, 49, 50], "417": 39, "880": 39, "45": [39, 40, 41, 46, 50, 61], "849": 39, "46": [39, 40, 46, 50], "252": [39, 46], "49": [39, 46, 50], "1010": 39, "912": 39, "1144": 39, "57": [39, 40, 46, 50], "58": [39, 40, 41, 46, 50], "1444": 39, "59": [39, 40, 41, 46, 50, 60], "842": 39, "63": [39, 41, 46, 50], "853": 39, "65": [39, 46, 50], "834": 39, "69": [39, 40, 46, 50], "276": 39, "76": [39, 40, 41, 46, 50], "1568": 39, "79": [39, 40, 46, 50], "406": 39, "83": [39, 40, 41, 46, 50], "1888": 39, "87": [39, 46, 50], "955": 39, "1928": 39, "93": [39, 46, 50], "94": [39, 46, 50], "690": 39, "96": [39, 46, 50], "1161": 39, "99": [39, 41, 46, 50], "636": 39, "avg": [39, 40, 41, 46, 50], "49888": 39, "1818182": 39, "rcparam": [39, 46], "imag": 39, "axesimag": 39, "0x7f5acc2fc390": 39, "omega": 39, "gl": 39, "theta": 39, "dpdtheta": 39, "dtheta": 39, "dpdomega": 39, "domega": 39, "thetacoeff": 39, "omegacoeff": 39, "ccoeff": 39, "1087": 39, "1007": 39, "727": 39, "509": 39, "19": [39, 46, 49, 50, 61], "1780": 39, "246": 39, "38": [39, 41, 46, 50], "506": 39, "1063": 39, "966": 39, "1159": 39, "71": [39, 41, 46, 50], "1970": 39, "86": [39, 46, 50], "1215": 39, "1545": 39, "98": [39, 46, 50], "264": 39, "114250": 39, "625": 39, "0x7f5acc2352e8": 39, "polar": 39, "coordin": 39, "mu": [39, 57], "dpdr": 39, "dr": [39, 57], "rcoeff": 39, "mucoeff": 39, "converg": 39, "angular": 39, "momentum": 39, "fitness_call_fre": 39, "obj_fun": 39, "100000": [39, 46], "117": [39, 46], "421": 39, "22": [39, 46, 50], "634": 39, "408": [39, 46], "533": 39, "1573": 39, "196": 39, "316": 39, "1660": 39, "267": 39, "1392": 39, "231": 39, "337": 39, "27": [39, 40, 50], "26": [39, 45, 46, 50], "261": 39, "285": [39, 46], "1021": 39, "528": 39, "931": 39, "153": [39, 46, 50], "113": [39, 50], "36": [39, 40, 41, 46, 49, 50], "37": [39, 46, 50], "193": [39, 40, 46], "118": [39, 50], "301": [39, 46], "43": [39, 40, 46, 50], "1147": 39, "44": [39, 40, 46, 50], "649": 39, "47": [39, 41, 46, 50], "309": [39, 40], "48": [39, 41, 46, 50, 61], "194": 39, "516": 39, "623": 39, "291": [39, 46], "245": [39, 46], "56": [39, 40, 46, 50], "202": 39, "85": [39, 46, 50], "545": 39, "178": [39, 46], "66": [39, 40, 46, 50, 61], "389": 39, "67": [39, 40, 46, 50], "882": 39, "965": 39, "363": [39, 46], "397": 39, "74": [39, 40, 46, 50, 61], "270": [39, 46], "78": [39, 40, 46, 50, 61], "947": 39, "568": 39, "84": [39, 46, 50], "211": 39, "1423": 39, "127": [39, 40, 46], "88": [39, 46, 50], "1078": 39, "89": [39, 46, 50], "376": 39, "91": [39, 46, 50], "219": 39, "679": 39, "608": 39, "259": 39, "97": [39, 40, 41, 46, 50], "829": 39, "101": [39, 49, 58], "5270": 39, "98901099": 39, "0x7f5acc158cc0": 39, "25413": 39, "46221": 39, "97122": 39, "28010": 39, "22942": 39, "63318": 39, "12543": 39, "64916": 39, "86173": 39, "29174": 39, "47790": 39, "36982": 39, "34496": 39, "58369": 39, "63291": 39, "One": [40, 41], "skeleton": [40, 41], "closet": [40, 41], "gp": [40, 41, 59, 60], "de": [40, 41], "facto": [40, 41], "far": [40, 41], "satisfactori": [40, 41], "successfulli": [40, 51], "v1": [40, 41, 45], "he": 40, "yt": [40, 41, 50], "init": [40, 41, 50, 58, 59, 60, 61], "best_const": [40, 41], "err2": [40, 41, 46], "cumsum": [40, 41, 50], "data_p1": [40, 50], "data_p2": [40, 50], "data_p3": [40, 50], "data_p4": [40, 50], "data_p5": [40, 41, 50], "quadrat": [40, 41, 46, 50, 55, 57, 62, 63], "cin": [40, 41], "xin": [40, 41, 50], "dc": 40, "dc2": [40, 41], "learned_const": 40, "1233456": [40, 41, 50], "163": [40, 50], "141592653589793": [40, 41], "452": 40, "0707963267948972": 40, "764": 40, "1415926535897927": 40, "334": 40, "826": 40, "5707963267948968": 40, "1415926535897931": 40, "378": 40, "141592653589794": 40, "891": 40, "815": 40, "210": [40, 61], "782160919529689": 40, "mean_gen": [40, 41, 50], "19902": 40, "4444444": 40, "close": [40, 50], "favour": [40, 50], "4663": 40, "1415926535897913": 40, "1520": 40, "2945": 40, "1937": 40, "3489": 40, "1415926535897905": 40, "3427": 40, "1415926535897944": 40, "141592653589792": [40, 41], "3911": 40, "141592653589789": [40, 41], "4993": 40, "3723": 40, "3551": 40, "1415926535897936": 40, "1716": 40, "315": 40, "1415926535897922": 40, "3441": 40, "141592653589797": 40, "1366": 40, "124776": 40, "266667": 40, "2610": 40, "7182818284590438": 40, "3618": 40, "7182818284590478": 40, "3956": 40, "7182818284590455": [40, 41], "4942": 40, "718281828459043": 40, "4107": 40, "7182818284590287": 40, "1921": 40, "3011": 40, "7182818284590495": 40, "279469": 40, "714286": 40, "2914": 40, "3183098859546274": 40, "808": 40, "1415926536812546": 40, "1434": 40, "1415926536986984": 40, "1079": 40, "2113": 40, "935932260872573": 40, "3739": 40, "14159265368124904": 40, "1415926536189205": 40, "805": 40, "5707963267952043": 40, "4412": 40, "4669422068457747": 40, "2197": 40, "5641895835477555": 40, "4082": 40, "1415926535902257": 40, "1415926537675927": 40, "4031": 40, "1069": 40, "0741512360814633": 40, "978": 40, "141592653745218": 40, "2798": 40, "141592653590368": 40, "2771": 40, "2865": 40, "0707963269360328": 40, "3688": 40, "035090330583488": 40, "94195": 40, "7894737": 40, "acknoledg": 41, "succesfulli": 41, "c2": [41, 42], "data_p6": [41, 50], "data_p7": [41, 50], "account": [41, 50], "collapse_vectorized_coeffici": [41, 50], "cin1": 41, "cin2": 41, "comupt": 41, "ierr": 41, "g1": 41, "dc1": 41, "g2": 41, "h11": 41, "h22": 41, "h12": 41, "h": [41, 50, 55, 56, 57, 58, 59, 60, 61], "det": [41, 50], "linalg": [41, 50], "invh": 41, "inv": [41, 50], "explicitli": 41, "aerr": 41, "lear": 41, "few": [41, 49, 53], "usr": 41, "lib": [41, 50], "python3": [41, 50], "site": [41, 50], "py": [41, 50, 51], "1776": 41, "runtimewarn": [41, 50], "encount": [41, 50], "_umath_linalg": [41, 50], "ipykernel": 41, "__main__": 41, "double_scalar": 41, "1185": 41, "3591409142295225": 41, "5707963267948966": 41, "1367": 41, "718281828459045": 41, "696": 41, "42331082513074425": 41, "1865": 41, "1415926535897816": 41, "7182818284590433": 41, "7182818284590944": 41, "1415926535902035": 41, "1349": 41, "7182818284590446": 41, "1415926535897873": 41, "1454": 41, "141592653589795": 41, "184": [41, 50], "141592653589796": 41, "1935": 41, "141592653589768": 41, "544": 41, "141592653589802": 41, "718281828459047": 41, "390": 41, "718281828459046": 41, "1415926535897984": 41, "429": 41, "1415926535897585": 41, "1890": 41, "3591409142295234": 41, "1415926535898038": 41, "1841": 41, "49451": 41, "4666667": 41, "5694": 41, "2884186598106795": 41, "10610329539427757": 41, "1311": 41, "3183098861802687": 41, "8652559794314285": 41, "8209": 41, "31830988618370615": 41, "8652559794322552": 41, "overflow": [41, 50], "7718": 41, "1835658656164778": 41, "31830988618398554": 41, "4569": 41, "3183098861838616": 41, "43262798971613803": 41, "781924": 41, "359": [41, 46], "4233108251053548": 41, "718281828484438": 41, "3855": 41, "3678794411238845": 41, "4233108248124803": 41, "1602": 41, "744870239868995": 41, "718281828948403": 41, "758": 41, "1415926534019243": 41, "36787944117144233": 41, "2163": 41, "5508691": 41, "188571924": 41, "251192": 41, "3238030792": 41, "296": [41, 46], "718281828459221": 41, "539734222674024": 41, "319292": 41, "666667": 41, "predefin": 42, "talk": 42, "much": 42, "closer": 42, "insight": [42, 44], "inject": 42, "mathmat": 42, "ones": [42, 43, 47, 48, 49], "422": 42, "ylim": 42, "through": [42, 53], "pc_fun": 42, "beta": 42, "mutant": 42, "industri": 43, "misus": 43, "machin": 43, "regeress": 43, "preprocess": 43, "pipelin": 43, "luca1": 43, "generate_luca1": 43, "unknown": [43, 44], "often": 43, "highli": 43, "benefici": 43, "abscissa": 43, "without": 43, "blow": 43, "infin": 43, "think": 43, "40000": [43, 59], "axi": [43, 44], "benefit": 43, "plateau": 43, "asymtot": 43, "devreas": 43, "possibli": [43, 44, 47, 48, 49], "choos": [43, 44, 47, 48, 49, 50], "compet": [43, 44, 47, 48, 49], "knowledg": [43, 44, 47, 48, 49], "onlin": [43, 47, 48, 49], "631": 43, "happen": [43, 44, 47], "jupyt": [43, 44, 47, 48, 49, 51], "notebook": [43, 44, 47, 48, 49], "recov": [43, 44], "afterward": [43, 44, 47], "champion_x": [43, 47, 48], "c_": [43, 44, 45], "piecewis": 44, "gravit": 44, "swarm": 44, "particl": 44, "albeit": [44, 53], "succesful": 44, "analyt": 44, "qualit": 44, "stabil": 44, "orbit": 44, "ll": [44, 50], "18x": 44, "ge": 44, "asymptot": 44, "acceler": 44, "lim_": 44, "rightarrow": 44, "infti": 44, "place": [44, 51], "major": 44, "area": 44, "great": 44, "impact": 44, "mainli": 44, "ration": 44, "0002555079686589074": 44, "get_x": [44, 49, 58, 59, 60, 61], "43930499": 44, "63600381": 44, "59788675": 44, "precis": 45, "nanostructur": 45, "solar": 45, "inspir": 45, "moth": 45, "ey": 45, "analyz": 45, "cell": 45, "thick": 45, "ariadna": 45, "bio": 45, "esa": 45, "gsp": 45, "diatom": 45, "amd": 45, "epyc": 45, "7702": 45, "processor": 45, "minut": 45, "pickl": 45, "moth_data": 45, "pk": 45, "prob_id": 45, "divers": 45, "unconnect": 45, "bertha": 45, "head": 45, "unreleas": 45, "rb": 45, "eph_3_r_1_c_16_lb_17_sum_diff_mul_diff_exp": 45, "eph_4_r_1_c_16_lb_15_sum_diff_mul_div_exp_gaussian": 45, "kernel_list": 45, "reconstruct": 45, "reconstruct_udp": 45, "know": 45, "glanc": 45, "experiment": 45, "min": [45, 50], "worst": 45, "On": 45, "359546731194255e": 45, "3801558148325692e": 45, "0948612e": 45, "nrow": 45, "ncol": 45, "sharex": 45, "sharei": 45, "best_run": 45, "best_dv": 45, "set_xlim": 45, "set_ylim": 45, "ipython": [45, 51], "displai": 45, "best_f": 45, "_repr_latex_": 45, "ideal": 45, "unnecessarili": 45, "5481952594443556e": 45, "866500757662433e": 45, "993101895616535e": 45, "686027444316002e": 45, "922429392571683e": 45, "515167695863056e": 45, "7033656245193685e": 45, "523905989067585e": 45, "9017543270061446e": 45, "1337997121125522e": 45, "margin": 45, "wors": 45, "msa": 45, "set_text": 45, "tight_layout": 45, "conclus": 45, "best_idx": [45, 58, 59, 60], "lambda": 45, "best_isl": 45, "380412125841117e": 45, "3804219347209996e": 45, "3808190703491017e": 45, "3809219218852146e": 45, "5486489454637892e": 45, "5494780218604477e": 45, "549478021860451e": 45, "5524996126148153e": 45, "8981961254319396e": 45, "9140689166325595e": 45, "004121929538379e": 45, "0208570048206605e": 45, "116838729621195e": 45, "13057337419324e": 45, "19691765672383e": 45, "224153596665173e": 45, "3734252967348888e": 45, "3746957690291797e": 45, "3811044286786395e": 45, "3842683416733736e": 45, "686067254813111e": 45, "686069307097475e": 45, "6860856181522074e": 45, "686098183474468e": 45, "936575700754542e": 45, "936942645025763e": 45, "937353947520078e": 45, "938981126078224e": 45, "519576231706857e": 45, "522266408037304e": 45, "569811491073491e": 45, "596454393800356e": 45, "703378409998452e": 45, "7033784099984615e": 45, "705047245789752e": 45, "705078353147797e": 45, "523956586681867e": 45, "524279590137839e": 45, "524279590138164e": 45, "651129097622205e": 45, "9104544589813626e": 45, "9158737383062652e": 45, "9240171327253178e": 45, "9291883990542647e": 45, "135016956476325e": 45, "1360665073366816e": 45, "1364062900679142e": 45, "138267448015574e": 45, "dcgp_exampl": 46, "2134": 46, "graphwiz": 46, "quadratic_error": 46, "initial_conditions_error": 46, "qe": 46, "ie": 46, "dy": [46, 62, 63], "2x": [46, 58, 63], "demand": 46, "punctual": 46, "qe_ode1": 46, "dydx": 46, "penalti": [46, 62, 63], "violat": 46, "ic_ode1": 46, "y0": 46, "414": 46, "456": 46, "227": 46, "146": 46, "402": 46, "123": [46, 50], "469": 46, "204": 46, "446": 46, "392": 46, "164": 46, "248": 46, "129": [46, 50], "346": 46, "302": 46, "370": 46, "258": 46, "281": 46, "341": 46, "383": 46, "137": [46, 50], "433": 46, "426": [46, 58], "136": [46, 50], "230": [46, 61], "tsoulo": [46, 64], "653": 46, "8977": 46, "27272727": 46, "130600": 46, "yco": 46, "138": [46, 50, 58], "qe_ode2": 46, "139": 46, "ic_ode2": 46, "328": 46, "124": 46, "191": 46, "351": 46, "377": 46, "352": 46, "141": [46, 50], "742": 46, "35482": 46, "3076923": 46, "148400": 46, "2y": [46, 62], "9y": 46, "3x": 46, "143": [46, 50, 55, 56], "qe_ode5": 46, "dydx2": 46, "144": [46, 50], "ic_ode5": 46, "dual": 46, "dy0": 46, "dcgp_y0": 46, "dcgp_dy0": 46, "145": [46, 50], "253": 46, "173": 46, "216": 46, "444": 46, "179": 46, "468": 46, "102": 46, "311": 46, "263": 46, "287": 46, "410": 46, "441": 46, "22610": 46, "88200": 46, "frac4": 46, "147": 46, "qe_nlode3": 46, "ic_nlode3": 46, "55": [46, 50], "188": [46, 50], "121": [46, 50], "299": 46, "278": 46, "896": 46, "666666667": 46, "38200": 46, "nabla": 46, "psi": 46, "boundari": [46, 53], "pde": 46, "xval": 46, "yval": 46, "repeat": 46, "qe_pde1": 46, "dpsidx2": 46, "dpsidy2": 46, "pde1": 46, "sin1": 46, "ic_pde1": 46, "dcgp_psi": 46, "err1": 46, "155": 46, "487": 46, "254": 46, "203": 46, "409": 46, "201": 46, "481": 46, "288": 46, "24192": 46, "1052632": 46, "40600": 46, "171": 46, "172": 46, "qe_pde6": 46, "190": [46, 61], "ic_pde6": 46, "err3": 46, "err4": 46, "1586": 46, "05547700971e": 46, "1225": 46, "18298744104e": 46, "511": 46, "90590617962e": 46, "1917": 46, "21996529597e": 46, "1230": 46, "17836520917e": 46, "1837": 46, "192": [46, 50], "797": 46, "327020": 46, "797000": 46, "128": 47, "dimension": [48, 49, 51], "said": 48, "ratpol2": 48, "add_subplot": [48, 49], "111": [48, 49], "kwarg": [48, 49], "layout": [48, 49], "attempt": [48, 49], "skew": [48, 49], "200000": 48, "champion_f": 48, "38250377897772814": 48, "sub": 48, "83466264613465": 48, "77931368273209": 48, "compar": 48, "shape": 49, "eventu": 49, "250": [49, 60, 61], "non_dominated_front_2d": [49, 61], "6049416203226965e": 49, "x1": [49, 61], "4444474582904268e": 49, "3000027124613843e": 49, "8559137162832793": 49, "04427756327168": 49, "714418293710785": 49, "875932935300025": 49, "493068363220251": 49, "422370193371659": 49, "42237019337166": 49, "486758301564212": 49, "41066772551229": 49, "679277437831498": 49, "85767317484314": 49, "plot_non_dominated_front": 49, "expression_weighted_gdual_vdoubl": 50, "newtonparam": 50, "best_weight": 50, "minim": 50, "wi": 50, "is_act": 50, "aw": 50, "ingo": 50, "choic": 50, "num_var": 50, "awidx": 50, "ei": 50, "dw": 50, "singular": 50, "wfe": 50, "restor": 50, "ef": 50, "109": 50, "999999999999997": 50, "14159265358976": 50, "999999999999932": 50, "14159265358979": 50, "999999999999996": 50, "1415926535898": 50, "00000000000001": 50, "999999999999989": 50, "999999999999998": 50, "133": 50, "999999999999999": 50, "999999999999991": 50, "999999999999987": 50, "131": 50, "999999999999995": 50, "14159265358974": 50, "999999999999874": 50, "189": 50, "999999999999988": 50, "1004": 50, "92559245124": 50, "3157": 50, "0668586492": 50, "06685864919": 50, "999999999999993": 50, "999999999999992": 50, "14159265358978": 50, "999999999999981": 50, "174288": 50, "8888888889": 50, "00000000001522": 50, "27654166639185e": 50, "14159265332916": 50, "28318530717146": 50, "999999999999802": 50, "14159265358324": 50, "58664018735164e": 50, "28318530718224": 50, "00000000000018": 50, "14159265361377": 50, "28318530717944": 50, "28318530717959": 50, "01980662698043e": 50, "999999999999994": 50, "14159265359058": 50, "78627727461556e": 50, "28318530717957": 50, "99999999997825": 50, "14159265281984": 50, "06404304548391e": 50, "28318530741037": 50, "187": 50, "14159265358984": 50, "84329364468004e": 50, "999999999996586": 50, "14159265349105": 50, "21245651961797e": 50, "28318530745686": 50, "999999999999923": 50, "42597086653041e": 50, "14159265359109": 50, "28318530717962": 50, "99999999995493": 50, "14159265203297": 50, "17409352674938e": 50, "28318530777391": 50, "00000000012198": 50, "14159265780051": 50, "16978514547372e": 50, "28318530601517": 50, "32238025396602e": 50, "00000000000002": 50, "14159265358992": 50, "28318530717958": 50, "180": [50, 61], "999999999997159": 50, "56552832733729e": 50, "14159265364781": 50, "28318530750492": 50, "99999999999999": 50, "88553657836724e": 50, "14159265358995": 50, "63622336613371e": 50, "2831853071796": 50, "1415926535975": 50, "64577260147692e": 50, "28318530721673": 50, "28318530717961": 50, "14159265358982": 50, "28318530719116": 50, "00000000000278": 50, "14159265388607": 50, "09744339194339e": 50, "28318530643488": 50, "91763911922868e": 50, "14159265358973": 50, "108": 50, "36315536377679": 50, "18996409662261e": 50, "0577979712554117": 50, "195352": 50, "94117647057": 50, "899166850493274": 50, "330784998479351": 50, "330784998479352": 50, "20883912632723": 50, "444707062259436": 50, "444707062259438": 50, "125": 50, "71828182845905": 50, "home": 50, "2116": 50, "132": 50, "6500836381227e": 50, "68530917602041e": 50, "89209275531109e": 50, "0000000000362": 50, "14159265367275": 50, "6991118429053": 50, "47051130607999e": 50, "00000000000142": 50, "00000000000032": 50, "14159265358985": 50, "53915412165946e": 50, "999999999999973": 50, "999999949216629": 50, "14159264435007": 50, "36443001715427e": 50, "00000000433431": 50, "86221303890169e": 50, "62453199799219": 50, "1415927053321": 50, "62453191537768": 50, "06372808316533e": 50, "62453191084485": 50, "999999999998995": 50, "14159265358961": 50, "00000000000009": 50, "999999999999953": 50, "25302298900841e": 50, "105": 50, "77990517211438e": 50, "6656141275367e": 50, "24427033889047e": 50, "29978496930744e": 50, "76206042739191e": 50, "3303626169174e": 50, "69425620306735e": 50, "12378036198924e": 50, "14159265358981": 50, "80264032596514e": 50, "00000000004875": 50, "14159265359866": 50, "542336605776001": 50, "35272399768743e": 50, "2541": 50, "81495243938": 50, "81495245225": 50, "15281241329688": 50, "15281241328598": 50, "972": 50, "092685040695": 50, "02619053589549e": 50, "14159265355456": 50, "999999999994157": 50, "51719913513711e": 50, "87473626494473e": 50, "8747362649445e": 50, "14159265359048": 50, "00000000000011": 50, "08683517342902e": 50, "66045855255763e": 50, "58379173825623": 50, "64744625319335": 50, "11418858333298": 50, "2879457406247": 50, "7761307129903": 50, "974501474950861": 50, "863186354404554": 50, "07750333059453": 50, "6599296272374": 50, "06966097571612": 50, "75780034524026": 50, "38968705261534": 50, "48198655314495": 50, "09415284338664": 50, "45769125393131e": 50, "1415926535899": 50, "70822994414938e": 50, "19135160727313": 50, "59576183848133": 50, "66296848504959": 50, "5211187903134": 50, "987545240550494": 50, "25427228495141e": 50, "94677549026297e": 50, "000000000001": 50, "14159265359084": 50, "999999999999751": 50, "35525271560688e": 50, "999999980945392": 50, "14159265012292": 50, "00000000162629": 50, "00000000000003": 50, "71828182845904": 50, "999999999999915": 50, "999999999999982": 50, "999999999999928": 50, "999999999999977": 50, "999999999999985": 50, "999999999999969": 50, "71828182845796": 50, "1415926535816": 50, "999999999987821": 50, "71828182765082": 50, "81282166780353e": 50, "14159266134502": 50, "0000000050856": 50, "71828182844251": 50, "14159265338736": 50, "999999999457422": 50, "119": 50, "71828182845942": 50, "14159265359449": 50, "00000000000628": 50, "71828181857779": 50, "14159237432049": 50, "49766685257696e": 50, "00000053196694": 50, "71828182845902": 50, "14159265358958": 50, "999999999999598": 50, "00000000000005": 50, "14159265358977": 50, "99999999999993": 50, "999999999999773": 50, "99999999999998": 50, "51490803020543": 50, "20219730313442": 50, "700981172914968": 50, "458140436777564": 50, "625363773202351": 50, "458140436777565": 50, "999999999999967": 50, "14159265358988": 50, "00000000000015": 50, "999999999999894": 50, "71828182845906": 50, "14159265359007": 50, "00000000000047": 50, "1415926535897": 50, "999999999999851": 50, "99999999999997": 50, "00000000000004": 50, "00000000000006": 50, "132245": 50, "45454545456": 50, "658810478707329": 50, "76140528857091": 50, "52281057714182": 50, "242362830744741": 50, "710716298622762": 50, "5421001949062e": 50, "82139426426137": 50, "64278852852271": 50, "261457914778349": 50, "000123063420861819": 50, "000387617697492767": 50, "00026373499528672": 50, "84934325911654e": 50, "0332304392124186": 50, "0664608784094327": 50, "00428004451413307": 50, "0134810245653551": 50, "00984187107586485": 50, "0235684911144266": 50, "128798914957873": 50, "148085179001607": 50, "56551064554709": 50, "74078576306486": 50, "48157152619754": 50, "40565254304111": 50, "50622528661617": 50, "01245057329103": 50, "33977055108826": 50, "0804769112118696": 50, "093009367314253": 50, "186018734628506": 50, "0296058011238267": 50, "ipykernel_launch": 50, "matmul": 50, "177": 50, "999999999990239": 50, "71828182845446": 50, "99999999827576": 50, "1415926695047": 50, "999999996606054": 50, "71828182686597": 50, "00000021604097": 50, "14159255591115": 50, "00000000001092": 50, "71828182846416": 50, "85398185936523": 50, "00000000002564": 50, "71828182859488": 50, "59471453823685e": 50, "29774027604273": 50, "718281828461": 50, "116": 50, "5489631288284e": 50, "999999999612255": 50, "71828182743606": 50, "09654622736853e": 50, "14159265362908": 50, "00000000000211": 50, "00000000003824": 50, "71828182866167": 50, "122": 50, "00000000001473": 50, "5560520538422": 50, "999999991979214": 50, "14159272762242": 50, "91009907439534e": 50, "4159265256615": 50, "00000002272797": 50, "106": 50, "00000000226596": 50, "14159263267476": 50, "08304336385657e": 50, "71828183307158": 50, "14159262986457": 50, "00000000982667": 50, "999999952852321": 50, "4159265358979": 50, "175": 50, "68964745528915e": 50, "00000000821958": 50, "14159270860771": 50, "put": 51, "text": 51, "getting_start": 51, "iostream": [51, 55, 56, 57, 62, 63], "hpp": [51, 55, 56, 57, 58, 59, 60, 61, 62, 63], "namespac": [51, 55, 56, 57, 58, 59, 60, 61], "arithmet": 51, "gdual_d": [51, 55, 56, 57, 62, 63], "n_input": 51, "n_output": 51, "6u": 51, "lb": 51, "7u": 51, "block": 51, "costant": 51, "subsequ": 51, "4232123212u": 51, "nexpress": 51, "nsecond": 51, "nmutat": 51, "folder": 51, "cmakelist": 51, "txt": 51, "content": 51, "cmake_minimum_requir": 51, "find_packag": 51, "add_execut": 51, "target_link_librari": 51, "set_properti": 51, "properti": 51, "cxx_standard": 51, "cxx_standard_requir": 51, "cxx_extens": 51, "NO": 51, "mkdir": 51, "cd": 51, "script": [51, 54], "4232123212": 51, "recommend": 51, "enjoi": 51, "visit": 52, "everi": 53, "similarli": 53, "combin": 53, "furthermor": 53, "lyapunov": 53, "concurr": 53, "topologi": 53, "extens": 53, "complic": 53, "further": 53, "variant": 53, "tree": 54, "julian": 54, "peter": 54, "thomson": 54, "1997": 54, "himself": 54, "aspect": 54, "runtim": 54, "functor": 54, "back_compat": 55, "io": [55, 58, 59, 60, 61, 63], "sistem": [55, 56], "hamiltonian": [55, 56, 57], "q": [55, 56], "dfp": [55, 56], "dfq": [55, 56], "dq": [55, 56], "rd": [55, 56, 57, 62, 63], "p_var": [55, 56], "static_cast": [55, 56, 57, 62, 63], "q_var": [55, 56], "1e32": [55, 56, 57, 62, 63], "newfit": [55, 56, 57, 62, 63], "newchromosom": [55, 56, 57, 62, 63], "cout": [55, 56, 57, 59, 62, 63], "setw": [55, 56, 57, 61, 62, 63], "endl": [55, 56, 62, 63], "2m": 57, "pr": 57, "pt": 57, "symbol_list": 57, "th": 57, "sym": 57, "dfpr": 57, "dpr": 57, "dfpt": 57, "dpt": 57, "dfqr": 57, "dfqt": 57, "dth": 57, "qr": 57, "qt": 57, "50u": [57, 60, 61], "pr_var": 57, "pt_var": 57, "r_var": 57, "th_var": 57, "m_var": 57, "mu_var": 57, "easiest": 58, "koza_quint": 58, "20u": [58, 59], "21u": [58, 59], "500u": [58, 59], "trim_left_if": [58, 59, 60, 61], "is_any_of": [58, 59, 60, 61], "trim_right_if": [58, 59, 60, 61], "nbest": [58, 59, 60], "determinist": [58, 59, 60, 61], "3898": 58, "638": 58, "482": 58, "1500": [58, 59], "734": 58, "1698": 58, "6792": 58, "2071e": 58, "practic": [59, 60], "multiobjectov": 59, "uda1": 59, "100000u": 59, "t1": 59, "chrono": 59, "high_resolution_clock": 59, "t2": 59, "durat": 59, "duration_cast": 59, "microsecond": 59, "3803": 59, "11378": 59, "2487": 59, "959988": 59, "70799": 59, "14114": 59, "70797": 59, "14053": 59, "70796": 59, "14064": 59, "2500": 59, "0901456": 59, "0711": 59, "0597183": 59, "07233": 59, "3500": 59, "16000": [59, 61], "4500": 59, "18000": [59, 61], "0596577": 59, "0723": 59, "20000": [59, 61], "5500": 59, "22000": [59, 61], "24000": [59, 61], "6500": 59, "26000": 59, "28000": 59, "7500": 59, "30000": 59, "32000": 59, "8500": 59, "34000": 59, "36000": 59, "9500": 59, "38000": 59, "15u": [60, 61], "16u": [60, 61], "solver": 60, "1000u": [60, 61], "sometim": 60, "bit": 60, "luck": 60, "exaclti": 60, "goe": 60, "report": 60, "occur": 60, "tradit": 60, "incredibli": 60, "hard": 60, "4009": 60, "41031": 60, "978909": 60, "238557": 60, "84565": 60, "240548": 60, "761757": 60, "240032": 60, "0170582": 60, "16484": 60, "164837": 60, "350": 60, "357": 60, "1428": 60, "17578e": 60, "14159": 60, "fourth": 61, "determin": 61, "certain": 61, "arguabl": 61, "among": 61, "vladi6": 61, "handl": 61, "nnon": 61, "decltyp": 61, "10239": 61, "42703": 61, "828554": 61, "374803": 61, "164032": 61, "03552": 61, "0200792": 61, "15000": 61, "170": 61, "17000": 61, "19000": 61, "21000": 61, "23000": 61, "25000": 61, "844272": 61, "10197": 61, "17331": 61, "27379": 61, "22752": 61, "74875": 61, "8741": 61, "lagari": [62, 63], "ddy": 62, "ode1": [62, 64], "hr": 62, "fitness_": [62, 63], "enforc": [62, 63], "incldu": 64, "nlode3": 64, "prime": [64, 66], "integr": [64, 66], "spring": 64, "mass": 64, "lipson": 64, "kepler": 64, "world": 66, "materi": 66, "biomimet": 66, "island": 66, "ffnn": 66, "kera": 66, "discoveri": 66, "ii": 66}, "objects": {"": [[2, 0, 1, "_CPPv4N4dcgp6es4cgpE", "dcgp::es4cgp"], [2, 1, 1, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj", "dcgp::es4cgp::es4cgp"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj", "dcgp::es4cgp::es4cgp::ftol"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj", "dcgp::es4cgp::es4cgp::gen"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj", "dcgp::es4cgp::es4cgp::learn_constants"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj", "dcgp::es4cgp::es4cgp::max_mut"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj", "dcgp::es4cgp::es4cgp::seed"], [2, 1, 1, "_CPPv4NK4dcgp6es4cgp6evolveEN5pagmo10populationE", "dcgp::es4cgp::evolve"], [2, 2, 1, "_CPPv4NK4dcgp6es4cgp6evolveEN5pagmo10populationE", "dcgp::es4cgp::evolve::pop"], [2, 1, 1, "_CPPv4NK4dcgp6es4cgp14get_extra_infoEv", "dcgp::es4cgp::get_extra_info"], [2, 1, 1, "_CPPv4NK4dcgp6es4cgp7get_logEv", "dcgp::es4cgp::get_log"], [2, 1, 1, "_CPPv4NK4dcgp6es4cgp8get_nameEv", "dcgp::es4cgp::get_name"], [2, 1, 1, "_CPPv4NK4dcgp6es4cgp8get_seedEv", "dcgp::es4cgp::get_seed"], [2, 1, 1, "_CPPv4NK4dcgp6es4cgp13get_verbosityEv", "dcgp::es4cgp::get_verbosity"], [2, 3, 1, "_CPPv4N4dcgp6es4cgp13log_line_typeE", "dcgp::es4cgp::log_line_type"], [2, 3, 1, "_CPPv4N4dcgp6es4cgp8log_typeE", "dcgp::es4cgp::log_type"], [2, 1, 1, "_CPPv4I0EN4dcgp6es4cgp9serializeEvR7Archivej", "dcgp::es4cgp::serialize"], [2, 4, 1, "_CPPv4I0EN4dcgp6es4cgp9serializeEvR7Archivej", "dcgp::es4cgp::serialize::Archive"], [2, 2, 1, "_CPPv4I0EN4dcgp6es4cgp9serializeEvR7Archivej", "dcgp::es4cgp::serialize::ar"], [2, 1, 1, "_CPPv4N4dcgp6es4cgp7set_bfeERKN5pagmo3bfeE", "dcgp::es4cgp::set_bfe"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp7set_bfeERKN5pagmo3bfeE", "dcgp::es4cgp::set_bfe::b"], [2, 1, 1, "_CPPv4N4dcgp6es4cgp8set_seedEj", "dcgp::es4cgp::set_seed"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp8set_seedEj", "dcgp::es4cgp::set_seed::seed"], [2, 1, 1, "_CPPv4N4dcgp6es4cgp13set_verbosityEj", "dcgp::es4cgp::set_verbosity"], [2, 2, 1, "_CPPv4N4dcgp6es4cgp13set_verbosityEj", "dcgp::es4cgp::set_verbosity::level"], [3, 0, 1, "_CPPv4I0EN4dcgp10expressionE", "dcgp::expression"], [3, 4, 1, "_CPPv4I0EN4dcgp10expressionE", "dcgp::expression::T"], [3, 1, 1, "_CPPv4N4dcgp10expression10expressionERK10expression", "dcgp::expression::expression"], [3, 1, 1, "_CPPv4N4dcgp10expression10expressionERR10expression", "dcgp::expression::expression"], [3, 1, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression"], [3, 1, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::arity"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::arity"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::c"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::c"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::f"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::f"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::l"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::l"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::m"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::m"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::n"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::n"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::n_eph"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::n_eph"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::r"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::r"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::seed"], [3, 2, 1, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj", "dcgp::expression::expression::seed"], [3, 1, 1, "_CPPv4NK4dcgp10expression3getEv", "dcgp::expression::get"], [3, 1, 1, "_CPPv4NK4dcgp10expression16get_active_genesEv", "dcgp::expression::get_active_genes"], [3, 1, 1, "_CPPv4NK4dcgp10expression16get_active_nodesEv", "dcgp::expression::get_active_nodes"], [3, 1, 1, "_CPPv4NK4dcgp10expression9get_arityEj", "dcgp::expression::get_arity"], [3, 1, 1, "_CPPv4NK4dcgp10expression9get_arityEv", "dcgp::expression::get_arity"], [3, 2, 1, "_CPPv4NK4dcgp10expression9get_arityEj", "dcgp::expression::get_arity::node_id"], [3, 1, 1, "_CPPv4NK4dcgp10expression5get_cEv", "dcgp::expression::get_c"], [3, 1, 1, "_CPPv4NK4dcgp10expression12get_eph_symbEv", "dcgp::expression::get_eph_symb"], [3, 1, 1, "_CPPv4NK4dcgp10expression11get_eph_valEv", "dcgp::expression::get_eph_val"], [3, 1, 1, "_CPPv4NK4dcgp10expression5get_fEv", "dcgp::expression::get_f"], [3, 1, 1, "_CPPv4NK4dcgp10expression12get_gene_idxEv", "dcgp::expression::get_gene_idx"], [3, 1, 1, "_CPPv4NK4dcgp10expression5get_lEv", "dcgp::expression::get_l"], [3, 1, 1, "_CPPv4NK4dcgp10expression6get_lbEv", "dcgp::expression::get_lb"], [3, 1, 1, "_CPPv4NK4dcgp10expression5get_mEv", "dcgp::expression::get_m"], [3, 1, 1, "_CPPv4NK4dcgp10expression5get_nEv", "dcgp::expression::get_n"], [3, 1, 1, "_CPPv4NK4dcgp10expression5get_rEv", "dcgp::expression::get_r"], [3, 1, 1, "_CPPv4NK4dcgp10expression6get_ubEv", "dcgp::expression::get_ub"], [3, 1, 1, "_CPPv4NK4dcgp10expression14is_active_geneEKj", "dcgp::expression::is_active_gene"], [3, 2, 1, "_CPPv4NK4dcgp10expression14is_active_geneEKj", "dcgp::expression::is_active_gene::idx"], [3, 1, 1, "_CPPv4NK4dcgp10expression14is_active_nodeEKj", "dcgp::expression::is_active_node"], [3, 2, 1, "_CPPv4NK4dcgp10expression14is_active_nodeEKj", "dcgp::expression::is_active_node::node_id"], [3, 1, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorI1TEERKNSt6vectorI1TEE9loss_type", "dcgp::expression::loss"], [3, 1, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6vectorI1TEEEERKNSt6stringEj", "dcgp::expression::loss"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6vectorI1TEEEERKNSt6stringEj", "dcgp::expression::loss::labels"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorI1TEERKNSt6vectorI1TEE9loss_type", "dcgp::expression::loss::loss_e"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6vectorI1TEEEERKNSt6stringEj", "dcgp::expression::loss::loss_s"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6vectorI1TEEEERKNSt6stringEj", "dcgp::expression::loss::parallel"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorI1TEERKNSt6vectorI1TEE9loss_type", "dcgp::expression::loss::point"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6vectorI1TEEEERKNSt6stringEj", "dcgp::expression::loss::points"], [3, 2, 1, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorI1TEERKNSt6vectorI1TEE9loss_type", "dcgp::expression::loss::prediction"], [3, 5, 1, "_CPPv4N4dcgp10expression9loss_typeE", "dcgp::expression::loss_type"], [3, 6, 1, "_CPPv4N4dcgp10expression9loss_type2CEE", "dcgp::expression::loss_type::CE"], [3, 6, 1, "_CPPv4N4dcgp10expression9loss_type3MSEE", "dcgp::expression::loss_type::MSE"], [3, 1, 1, "_CPPv4N4dcgp10expression6mutateENSt6vectorIjEE", "dcgp::expression::mutate"], [3, 1, 1, "_CPPv4N4dcgp10expression6mutateEj", "dcgp::expression::mutate"], [3, 2, 1, "_CPPv4N4dcgp10expression6mutateEj", "dcgp::expression::mutate::idx"], [3, 2, 1, "_CPPv4N4dcgp10expression6mutateENSt6vectorIjEE", "dcgp::expression::mutate::idxs"], [3, 1, 1, "_CPPv4N4dcgp10expression13mutate_activeEj", "dcgp::expression::mutate_active"], [3, 2, 1, "_CPPv4N4dcgp10expression13mutate_activeEj", "dcgp::expression::mutate_active::N"], [3, 1, 1, "_CPPv4N4dcgp10expression19mutate_active_cgeneEj", "dcgp::expression::mutate_active_cgene"], [3, 2, 1, "_CPPv4N4dcgp10expression19mutate_active_cgeneEj", "dcgp::expression::mutate_active_cgene::N"], [3, 1, 1, "_CPPv4N4dcgp10expression19mutate_active_fgeneEj", "dcgp::expression::mutate_active_fgene"], [3, 2, 1, "_CPPv4N4dcgp10expression19mutate_active_fgeneEj", "dcgp::expression::mutate_active_fgene::N"], [3, 1, 1, "_CPPv4N4dcgp10expression15mutate_inactiveEj", "dcgp::expression::mutate_inactive"], [3, 2, 1, "_CPPv4N4dcgp10expression15mutate_inactiveEj", "dcgp::expression::mutate_inactive::N"], [3, 1, 1, "_CPPv4N4dcgp10expression12mutate_ogeneEj", "dcgp::expression::mutate_ogene"], [3, 2, 1, "_CPPv4N4dcgp10expression12mutate_ogeneEj", "dcgp::expression::mutate_ogene::N"], [3, 1, 1, "_CPPv4N4dcgp10expression13mutate_randomEj", "dcgp::expression::mutate_random"], [3, 2, 1, "_CPPv4N4dcgp10expression13mutate_randomEj", "dcgp::expression::mutate_random::N"], [3, 1, 1, "_CPPv4NK4dcgp10expressionclERKNSt16initializer_listINSt6stringEEE", "dcgp::expression::operator()"], [3, 1, 1, "_CPPv4NK4dcgp10expressionclERKNSt16initializer_listIdEE", "dcgp::expression::operator()"], [3, 1, 1, "_CPPv4NK4dcgp10expressionclERKNSt6vectorI1TEE", "dcgp::expression::operator()"], [3, 1, 1, "_CPPv4NK4dcgp10expressionclERKNSt6vectorINSt6stringEEE", "dcgp::expression::operator()"], [3, 2, 1, "_CPPv4NK4dcgp10expressionclERKNSt16initializer_listINSt6stringEEE", "dcgp::expression::operator()::in"], [3, 2, 1, "_CPPv4NK4dcgp10expressionclERKNSt16initializer_listIdEE", "dcgp::expression::operator()::in"], [3, 2, 1, "_CPPv4NK4dcgp10expressionclERKNSt6vectorINSt6stringEEE", "dcgp::expression::operator()::in"], [3, 2, 1, "_CPPv4NK4dcgp10expressionclERKNSt6vectorI1TEE", "dcgp::expression::operator()::point"], [3, 1, 1, "_CPPv4N4dcgp10expressionlsERNSt7ostreamERK10expression", "dcgp::expression::operator&lt;&lt;"], [3, 2, 1, "_CPPv4N4dcgp10expressionlsERNSt7ostreamERK10expression", "dcgp::expression::operator&lt;&lt;::d"], [3, 2, 1, "_CPPv4N4dcgp10expressionlsERNSt7ostreamERK10expression", "dcgp::expression::operator&lt;&lt;::os"], [3, 1, 1, "_CPPv4N4dcgp10expressionaSERK10expression", "dcgp::expression::operator="], [3, 1, 1, "_CPPv4N4dcgp10expressionaSERR10expression", "dcgp::expression::operator="], [3, 1, 1, "_CPPv4N4dcgp10expression4seedEl", "dcgp::expression::seed"], [3, 2, 1, "_CPPv4N4dcgp10expression4seedEl", "dcgp::expression::seed::seed"], [3, 1, 1, "_CPPv4I0EN4dcgp10expression9serializeEvR7Archivej", "dcgp::expression::serialize"], [3, 4, 1, "_CPPv4I0EN4dcgp10expression9serializeEvR7Archivej", "dcgp::expression::serialize::Archive"], [3, 2, 1, "_CPPv4I0EN4dcgp10expression9serializeEvR7Archivej", "dcgp::expression::serialize::ar"], [3, 1, 1, "_CPPv4N4dcgp10expression3setERKNSt6vectorIjEE", "dcgp::expression::set"], [3, 2, 1, "_CPPv4N4dcgp10expression3setERKNSt6vectorIjEE", "dcgp::expression::set::xu"], [3, 1, 1, "_CPPv4N4dcgp10expression12set_eph_symbERKNSt6vectorINSt6stringEEE", "dcgp::expression::set_eph_symb"], [3, 2, 1, "_CPPv4N4dcgp10expression12set_eph_symbERKNSt6vectorINSt6stringEEE", "dcgp::expression::set_eph_symb::eph_symb"], [3, 1, 1, "_CPPv4N4dcgp10expression11set_eph_valERKNSt6vectorI1TEE", "dcgp::expression::set_eph_val"], [3, 2, 1, "_CPPv4N4dcgp10expression11set_eph_valERKNSt6vectorI1TEE", "dcgp::expression::set_eph_val::eph_val"], [3, 1, 1, "_CPPv4N4dcgp10expression10set_f_geneEjj", "dcgp::expression::set_f_gene"], [3, 2, 1, "_CPPv4N4dcgp10expression10set_f_geneEjj", "dcgp::expression::set_f_gene::f_id"], [3, 2, 1, "_CPPv4N4dcgp10expression10set_f_geneEjj", "dcgp::expression::set_f_gene::node_id"], [3, 1, 1, "_CPPv4I0EN4dcgp10expression14set_from_rangeEv7InputIt7InputIt", "dcgp::expression::set_from_range"], [3, 4, 1, "_CPPv4I0EN4dcgp10expression14set_from_rangeEv7InputIt7InputIt", "dcgp::expression::set_from_range::InputIt"], [3, 2, 1, "_CPPv4I0EN4dcgp10expression14set_from_rangeEv7InputIt7InputIt", "dcgp::expression::set_from_range::begin"], [3, 2, 1, "_CPPv4I0EN4dcgp10expression14set_from_rangeEv7InputIt7InputIt", "dcgp::expression::set_from_range::end"], [3, 1, 1, "_CPPv4N4dcgp10expression24set_phenotype_correctionE11pc_fun_type", "dcgp::expression::set_phenotype_correction"], [3, 2, 1, "_CPPv4N4dcgp10expression24set_phenotype_correctionE11pc_fun_type", "dcgp::expression::set_phenotype_correction::pc"], [3, 1, 1, "_CPPv4N4dcgp10expression26unset_phenotype_correctionEv", "dcgp::expression::unset_phenotype_correction"], [3, 1, 1, "_CPPv4N4dcgp10expressionD0Ev", "dcgp::expression::~expression"], [4, 0, 1, "_CPPv4N4dcgp14expression_annE", "dcgp::expression_ann"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann6d_lossERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEN10expressionIdE9loss_typeEj", "dcgp::expression_ann::d_loss"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss::gbiases"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss::gweights"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann6d_lossERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEN10expressionIdE9loss_typeEj", "dcgp::expression_ann::d_loss::labels"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann6d_lossERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEN10expressionIdE9loss_typeEj", "dcgp::expression_ann::d_loss::loss_e"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss::loss_e"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann6d_lossERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEN10expressionIdE9loss_typeEj", "dcgp::expression_ann::d_loss::parallel"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss::point"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann6d_lossERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEN10expressionIdE9loss_typeEj", "dcgp::expression_ann::d_loss::points"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss::prediction"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE", "dcgp::expression_ann::d_loss::value"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::arity"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::arity"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::c"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::c"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::f"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::f"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::l"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::l"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::m"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::m"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::n"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::n"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::r"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::r"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::seed"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj", "dcgp::expression_ann::expression_ann::seed"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann8get_biasENSt6vectorIdE9size_typeE", "dcgp::expression_ann::get_bias"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann8get_biasENSt6vectorIdE9size_typeE", "dcgp::expression_ann::get_bias::idx"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann10get_biasesEv", "dcgp::expression_ann::get_biases"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann10get_weightENSt6vectorIdE9size_typeE", "dcgp::expression_ann::get_weight"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann10get_weightEjj", "dcgp::expression_ann::get_weight"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann10get_weightENSt6vectorIdE9size_typeE", "dcgp::expression_ann::get_weight::idx"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann10get_weightEjj", "dcgp::expression_ann::get_weight::input_id"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann10get_weightEjj", "dcgp::expression_ann::get_weight::node_id"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann11get_weightsEv", "dcgp::expression_ann::get_weights"], [4, 5, 1, "_CPPv4N4dcgp14expression_ann11kernel_typeE", "dcgp::expression_ann::kernel_type"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type3ABSE", "dcgp::expression_ann::kernel_type::ABS"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type6COS_NUE", "dcgp::expression_ann::kernel_type::COS_NU"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type3ELUE", "dcgp::expression_ann::kernel_type::ELU"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type11GAUSSIAN_NUE", "dcgp::expression_ann::kernel_type::GAUSSIAN_NU"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type7INV_SUME", "dcgp::expression_ann::kernel_type::INV_SUM"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type4ISRUE", "dcgp::expression_ann::kernel_type::ISRU"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type4RELUE", "dcgp::expression_ann::kernel_type::RELU"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type3SIGE", "dcgp::expression_ann::kernel_type::SIG"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type6SIN_NUE", "dcgp::expression_ann::kernel_type::SIN_NU"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type4STEPE", "dcgp::expression_ann::kernel_type::STEP"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type3SUME", "dcgp::expression_ann::kernel_type::SUM"], [4, 6, 1, "_CPPv4N4dcgp14expression_ann11kernel_type4TANHE", "dcgp::expression_ann::kernel_type::TANH"], [4, 1, 1, "_CPPv4NK4dcgp14expression_ann16n_active_weightsEb", "dcgp::expression_ann::n_active_weights"], [4, 2, 1, "_CPPv4NK4dcgp14expression_ann16n_active_weightsEb", "dcgp::expression_ann::n_active_weights::unique"], [4, 1, 1, "_CPPv4I0_20enable_double_stringI1UEENK4dcgp14expression_annclENSt6vectorI1UEERKNSt16initializer_listI1UEE", "dcgp::expression_ann::operator()"], [4, 1, 1, "_CPPv4NK4dcgp14expression_annclERKNSt6vectorINSt6stringEEE", "dcgp::expression_ann::operator()"], [4, 1, 1, "_CPPv4NK4dcgp14expression_annclERKNSt6vectorIdEE", "dcgp::expression_ann::operator()"], [4, 4, 1, "_CPPv4I0_20enable_double_stringI1UEENK4dcgp14expression_annclENSt6vectorI1UEERKNSt16initializer_listI1UEE", "dcgp::expression_ann::operator()::U"], [4, 2, 1, "_CPPv4I0_20enable_double_stringI1UEENK4dcgp14expression_annclENSt6vectorI1UEERKNSt16initializer_listI1UEE", "dcgp::expression_ann::operator()::point"], [4, 2, 1, "_CPPv4NK4dcgp14expression_annclERKNSt6vectorINSt6stringEEE", "dcgp::expression_ann::operator()::point"], [4, 2, 1, "_CPPv4NK4dcgp14expression_annclERKNSt6vectorIdEE", "dcgp::expression_ann::operator()::point"], [4, 1, 1, "_CPPv4N4dcgp14expression_annlsERNSt7ostreamERK14expression_ann", "dcgp::expression_ann::operator&lt;&lt;"], [4, 2, 1, "_CPPv4N4dcgp14expression_annlsERNSt7ostreamERK14expression_ann", "dcgp::expression_ann::operator&lt;&lt;::d"], [4, 2, 1, "_CPPv4N4dcgp14expression_annlsERNSt7ostreamERK14expression_ann", "dcgp::expression_ann::operator&lt;&lt;::os"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann16randomise_biasesEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_biases"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann16randomise_biasesEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_biases::mean"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann16randomise_biasesEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_biases::seed"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann16randomise_biasesEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_biases::std"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann17randomise_weightsEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_weights"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann17randomise_weightsEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_weights::mean"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann17randomise_weightsEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_weights::seed"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann17randomise_weightsEddNSt13random_device11result_typeE", "dcgp::expression_ann::randomise_weights::std"], [4, 1, 1, "_CPPv4I0EN4dcgp14expression_ann9serializeEvR7Archivej", "dcgp::expression_ann::serialize"], [4, 4, 1, "_CPPv4I0EN4dcgp14expression_ann9serializeEvR7Archivej", "dcgp::expression_ann::serialize::Archive"], [4, 2, 1, "_CPPv4I0EN4dcgp14expression_ann9serializeEvR7Archivej", "dcgp::expression_ann::serialize::ar"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann8set_biasENSt6vectorIdE9size_typeERKd", "dcgp::expression_ann::set_bias"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann8set_biasENSt6vectorIdE9size_typeERKd", "dcgp::expression_ann::set_bias::idx"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann8set_biasENSt6vectorIdE9size_typeERKd", "dcgp::expression_ann::set_bias::w"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann10set_biasesERKNSt6vectorIdEE", "dcgp::expression_ann::set_biases"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann10set_biasesERKNSt6vectorIdEE", "dcgp::expression_ann::set_biases::bs"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann12set_output_fERKNSt6stringE", "dcgp::expression_ann::set_output_f"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann12set_output_fERKNSt6stringE", "dcgp::expression_ann::set_output_f::name"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann10set_weightENSt6vectorIdE9size_typeERKd", "dcgp::expression_ann::set_weight"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann10set_weightEjjRKd", "dcgp::expression_ann::set_weight"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann10set_weightENSt6vectorIdE9size_typeERKd", "dcgp::expression_ann::set_weight::idx"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann10set_weightEjjRKd", "dcgp::expression_ann::set_weight::input_id"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann10set_weightEjjRKd", "dcgp::expression_ann::set_weight::node_id"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann10set_weightENSt6vectorIdE9size_typeERKd", "dcgp::expression_ann::set_weight::w"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann10set_weightEjjRKd", "dcgp::expression_ann::set_weight::w"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann11set_weightsERKNSt6vectorIdEE", "dcgp::expression_ann::set_weights"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann11set_weightsERKNSt6vectorIdEE", "dcgp::expression_ann::set_weights::ws"], [4, 1, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::batch_size"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::labels"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::loss_s"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::lr"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::parallel"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::points"], [4, 2, 1, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb", "dcgp::expression_ann::sgd::shuffle"], [5, 0, 1, "_CPPv4I0EN4dcgp19expression_weightedE", "dcgp::expression_weighted"], [5, 4, 1, "_CPPv4I0EN4dcgp19expression_weightedE", "dcgp::expression_weighted::T"], [5, 1, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted"], [5, 1, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::arities"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::arity"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::c"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::c"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::f"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::f"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::l"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::l"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::m"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::m"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::n"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::n"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::r"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::r"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::seed"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj", "dcgp::expression_weighted::expression_weighted::seed"], [5, 1, 1, "_CPPv4NK4dcgp19expression_weighted10get_weightEjj", "dcgp::expression_weighted::get_weight"], [5, 2, 1, "_CPPv4NK4dcgp19expression_weighted10get_weightEjj", "dcgp::expression_weighted::get_weight::input_id"], [5, 2, 1, "_CPPv4NK4dcgp19expression_weighted10get_weightEjj", "dcgp::expression_weighted::get_weight::node_id"], [5, 1, 1, "_CPPv4NK4dcgp19expression_weighted11get_weightsEv", "dcgp::expression_weighted::get_weights"], [5, 1, 1, "_CPPv4I0_15functor_enablerI1UEENK4dcgp19expression_weightedclENSt6vectorI1UEERKNSt16initializer_listI1UEE", "dcgp::expression_weighted::operator()"], [5, 1, 1, "_CPPv4NK4dcgp19expression_weightedclERKNSt6vectorI1TEE", "dcgp::expression_weighted::operator()"], [5, 1, 1, "_CPPv4NK4dcgp19expression_weightedclERKNSt6vectorINSt6stringEEE", "dcgp::expression_weighted::operator()"], [5, 4, 1, "_CPPv4I0_15functor_enablerI1UEENK4dcgp19expression_weightedclENSt6vectorI1UEERKNSt16initializer_listI1UEE", "dcgp::expression_weighted::operator()::U"], [5, 2, 1, "_CPPv4I0_15functor_enablerI1UEENK4dcgp19expression_weightedclENSt6vectorI1UEERKNSt16initializer_listI1UEE", "dcgp::expression_weighted::operator()::in"], [5, 2, 1, "_CPPv4NK4dcgp19expression_weightedclERKNSt6vectorI1TEE", "dcgp::expression_weighted::operator()::in"], [5, 2, 1, "_CPPv4NK4dcgp19expression_weightedclERKNSt6vectorINSt6stringEEE", "dcgp::expression_weighted::operator()::in"], [5, 1, 1, "_CPPv4N4dcgp19expression_weightedlsERNSt7ostreamERK19expression_weighted", "dcgp::expression_weighted::operator&lt;&lt;"], [5, 2, 1, "_CPPv4N4dcgp19expression_weightedlsERNSt7ostreamERK19expression_weighted", "dcgp::expression_weighted::operator&lt;&lt;::d"], [5, 2, 1, "_CPPv4N4dcgp19expression_weightedlsERNSt7ostreamERK19expression_weighted", "dcgp::expression_weighted::operator&lt;&lt;::os"], [5, 1, 1, "_CPPv4I0EN4dcgp19expression_weighted9serializeEvR7Archivej", "dcgp::expression_weighted::serialize"], [5, 4, 1, "_CPPv4I0EN4dcgp19expression_weighted9serializeEvR7Archivej", "dcgp::expression_weighted::serialize::Archive"], [5, 2, 1, "_CPPv4I0EN4dcgp19expression_weighted9serializeEvR7Archivej", "dcgp::expression_weighted::serialize::ar"], [5, 1, 1, "_CPPv4N4dcgp19expression_weighted10set_weightEjjRK1T", "dcgp::expression_weighted::set_weight"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted10set_weightEjjRK1T", "dcgp::expression_weighted::set_weight::input_id"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted10set_weightEjjRK1T", "dcgp::expression_weighted::set_weight::node_id"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted10set_weightEjjRK1T", "dcgp::expression_weighted::set_weight::w"], [5, 1, 1, "_CPPv4N4dcgp19expression_weighted11set_weightsERKNSt6vectorI1TEE", "dcgp::expression_weighted::set_weights"], [5, 2, 1, "_CPPv4N4dcgp19expression_weighted11set_weightsERKNSt6vectorI1TEE", "dcgp::expression_weighted::set_weights::ws"], [6, 0, 1, "_CPPv4N4dcgp6gd4cgpE", "dcgp::gd4cgp"], [6, 1, 1, "_CPPv4NK4dcgp6gd4cgp6evolveEN5pagmo10populationE", "dcgp::gd4cgp::evolve"], [6, 2, 1, "_CPPv4NK4dcgp6gd4cgp6evolveEN5pagmo10populationE", "dcgp::gd4cgp::evolve::pop"], [6, 1, 1, "_CPPv4N4dcgp6gd4cgp6gd4cgpEjdd", "dcgp::gd4cgp::gd4cgp"], [6, 2, 1, "_CPPv4N4dcgp6gd4cgp6gd4cgpEjdd", "dcgp::gd4cgp::gd4cgp::lr"], [6, 2, 1, "_CPPv4N4dcgp6gd4cgp6gd4cgpEjdd", "dcgp::gd4cgp::gd4cgp::lr_min"], [6, 2, 1, "_CPPv4N4dcgp6gd4cgp6gd4cgpEjdd", "dcgp::gd4cgp::gd4cgp::max_iter"], [6, 1, 1, "_CPPv4NK4dcgp6gd4cgp14get_extra_infoEv", "dcgp::gd4cgp::get_extra_info"], [6, 1, 1, "_CPPv4NK4dcgp6gd4cgp7get_logEv", "dcgp::gd4cgp::get_log"], [6, 1, 1, "_CPPv4NK4dcgp6gd4cgp8get_nameEv", "dcgp::gd4cgp::get_name"], [6, 1, 1, "_CPPv4NK4dcgp6gd4cgp13get_verbosityEv", "dcgp::gd4cgp::get_verbosity"], [6, 3, 1, "_CPPv4N4dcgp6gd4cgp13log_line_typeE", "dcgp::gd4cgp::log_line_type"], [6, 3, 1, "_CPPv4N4dcgp6gd4cgp8log_typeE", "dcgp::gd4cgp::log_type"], [6, 1, 1, "_CPPv4I0EN4dcgp6gd4cgp9serializeEvR7Archivej", "dcgp::gd4cgp::serialize"], [6, 4, 1, "_CPPv4I0EN4dcgp6gd4cgp9serializeEvR7Archivej", "dcgp::gd4cgp::serialize::Archive"], [6, 2, 1, "_CPPv4I0EN4dcgp6gd4cgp9serializeEvR7Archivej", "dcgp::gd4cgp::serialize::ar"], [6, 1, 1, "_CPPv4N4dcgp6gd4cgp13set_verbosityEj", "dcgp::gd4cgp::set_verbosity"], [6, 2, 1, "_CPPv4N4dcgp6gd4cgp13set_verbosityEj", "dcgp::gd4cgp::set_verbosity::level"], [8, 0, 1, "_CPPv4I0EN4dcgp6kernelE", "dcgp::kernel"], [8, 4, 1, "_CPPv4I0EN4dcgp6kernelE", "dcgp::kernel::T"], [8, 1, 1, "_CPPv4NK4dcgp6kernel8get_nameEv", "dcgp::kernel::get_name"], [8, 1, 1, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE", "dcgp::kernel::kernel"], [8, 4, 1, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE", "dcgp::kernel::kernel::U"], [8, 4, 1, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE", "dcgp::kernel::kernel::V"], [8, 2, 1, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE", "dcgp::kernel::kernel::f"], [8, 2, 1, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE", "dcgp::kernel::kernel::name"], [8, 2, 1, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE", "dcgp::kernel::kernel::pf"], [8, 1, 1, "_CPPv4NK4dcgp6kernelclERKNSt16initializer_listI1TEE", "dcgp::kernel::operator()"], [8, 1, 1, "_CPPv4NK4dcgp6kernelclERKNSt6vectorI1TEE", "dcgp::kernel::operator()"], [8, 1, 1, "_CPPv4NK4dcgp6kernelclERKNSt6vectorINSt6stringEEE", "dcgp::kernel::operator()"], [8, 2, 1, "_CPPv4NK4dcgp6kernelclERKNSt16initializer_listI1TEE", "dcgp::kernel::operator()::in"], [8, 2, 1, "_CPPv4NK4dcgp6kernelclERKNSt6vectorI1TEE", "dcgp::kernel::operator()::in"], [8, 2, 1, "_CPPv4NK4dcgp6kernelclERKNSt6vectorINSt6stringEEE", "dcgp::kernel::operator()::in"], [8, 1, 1, "_CPPv4N4dcgp6kernellsERNSt7ostreamERK6kernelI1TE", "dcgp::kernel::operator&lt;&lt;"], [8, 2, 1, "_CPPv4N4dcgp6kernellsERNSt7ostreamERK6kernelI1TE", "dcgp::kernel::operator&lt;&lt;::d"], [8, 2, 1, "_CPPv4N4dcgp6kernellsERNSt7ostreamERK6kernelI1TE", "dcgp::kernel::operator&lt;&lt;::os"], [8, 1, 1, "_CPPv4I0EN4dcgp6kernel9serializeEvR7Archivej", "dcgp::kernel::serialize"], [8, 4, 1, "_CPPv4I0EN4dcgp6kernel9serializeEvR7Archivej", "dcgp::kernel::serialize::Archive"], [8, 2, 1, "_CPPv4I0EN4dcgp6kernel9serializeEvR7Archivej", "dcgp::kernel::serialize::ar"], [10, 0, 1, "_CPPv4I0EN4dcgp10kernel_setE", "dcgp::kernel_set"], [10, 4, 1, "_CPPv4I0EN4dcgp10kernel_setE", "dcgp::kernel_set::T"], [10, 1, 1, "_CPPv4N4dcgp10kernel_set5clearEv", "dcgp::kernel_set::clear"], [10, 1, 1, "_CPPv4N4dcgp10kernel_set10kernel_setERKNSt6vectorINSt6stringEEE", "dcgp::kernel_set::kernel_set"], [10, 1, 1, "_CPPv4N4dcgp10kernel_set10kernel_setEv", "dcgp::kernel_set::kernel_set"], [10, 2, 1, "_CPPv4N4dcgp10kernel_set10kernel_setERKNSt6vectorINSt6stringEEE", "dcgp::kernel_set::kernel_set::list"], [10, 1, 1, "_CPPv4NK4dcgp10kernel_setclEv", "dcgp::kernel_set::operator()"], [10, 1, 1, "_CPPv4N4dcgp10kernel_setlsERNSt7ostreamERK10kernel_setI1TE", "dcgp::kernel_set::operator&lt;&lt;"], [10, 2, 1, "_CPPv4N4dcgp10kernel_setlsERNSt7ostreamERK10kernel_setI1TE", "dcgp::kernel_set::operator&lt;&lt;::d"], [10, 2, 1, "_CPPv4N4dcgp10kernel_setlsERNSt7ostreamERK10kernel_setI1TE", "dcgp::kernel_set::operator&lt;&lt;::os"], [10, 1, 1, "_CPPv4NK4dcgp10kernel_setixEKNSt6vectorIN4dcgp6kernelI1TEEE9size_typeE", "dcgp::kernel_set::operator[]"], [10, 2, 1, "_CPPv4NK4dcgp10kernel_setixEKNSt6vectorIN4dcgp6kernelI1TEEE9size_typeE", "dcgp::kernel_set::operator[]::idx"], [10, 1, 1, "_CPPv4N4dcgp10kernel_set9push_backENSt6stringE", "dcgp::kernel_set::push_back"], [10, 1, 1, "_CPPv4N4dcgp10kernel_set9push_backERKN4dcgp6kernelI1TEE", "dcgp::kernel_set::push_back"], [10, 2, 1, "_CPPv4N4dcgp10kernel_set9push_backERKN4dcgp6kernelI1TEE", "dcgp::kernel_set::push_back::kernel"], [10, 2, 1, "_CPPv4N4dcgp10kernel_set9push_backENSt6stringE", "dcgp::kernel_set::push_back::kernel_name"], [10, 1, 1, "_CPPv4I0EN4dcgp10kernel_set9serializeEvR7Archivej", "dcgp::kernel_set::serialize"], [10, 4, 1, "_CPPv4I0EN4dcgp10kernel_set9serializeEvR7Archivej", "dcgp::kernel_set::serialize::Archive"], [10, 2, 1, "_CPPv4I0EN4dcgp10kernel_set9serializeEvR7Archivej", "dcgp::kernel_set::serialize::ar"], [11, 0, 1, "_CPPv4N4dcgp7mes4cgpE", "dcgp::mes4cgp"], [11, 1, 1, "_CPPv4NK4dcgp7mes4cgp6evolveEN5pagmo10populationE", "dcgp::mes4cgp::evolve"], [11, 2, 1, "_CPPv4NK4dcgp7mes4cgp6evolveEN5pagmo10populationE", "dcgp::mes4cgp::evolve::pop"], [11, 1, 1, "_CPPv4NK4dcgp7mes4cgp14get_extra_infoEv", "dcgp::mes4cgp::get_extra_info"], [11, 1, 1, "_CPPv4NK4dcgp7mes4cgp7get_logEv", "dcgp::mes4cgp::get_log"], [11, 1, 1, "_CPPv4NK4dcgp7mes4cgp8get_nameEv", "dcgp::mes4cgp::get_name"], [11, 1, 1, "_CPPv4NK4dcgp7mes4cgp8get_seedEv", "dcgp::mes4cgp::get_seed"], [11, 1, 1, "_CPPv4NK4dcgp7mes4cgp13get_verbosityEv", "dcgp::mes4cgp::get_verbosity"], [11, 3, 1, "_CPPv4N4dcgp7mes4cgp13log_line_typeE", "dcgp::mes4cgp::log_line_type"], [11, 3, 1, "_CPPv4N4dcgp7mes4cgp8log_typeE", "dcgp::mes4cgp::log_type"], [11, 1, 1, "_CPPv4N4dcgp7mes4cgp7mes4cgpEjjdj", "dcgp::mes4cgp::mes4cgp"], [11, 2, 1, "_CPPv4N4dcgp7mes4cgp7mes4cgpEjjdj", "dcgp::mes4cgp::mes4cgp::ftol"], [11, 2, 1, "_CPPv4N4dcgp7mes4cgp7mes4cgpEjjdj", "dcgp::mes4cgp::mes4cgp::gen"], [11, 2, 1, "_CPPv4N4dcgp7mes4cgp7mes4cgpEjjdj", "dcgp::mes4cgp::mes4cgp::max_mut"], [11, 2, 1, "_CPPv4N4dcgp7mes4cgp7mes4cgpEjjdj", "dcgp::mes4cgp::mes4cgp::seed"], [11, 1, 1, "_CPPv4I0EN4dcgp7mes4cgp9serializeEvR7Archivej", "dcgp::mes4cgp::serialize"], [11, 4, 1, "_CPPv4I0EN4dcgp7mes4cgp9serializeEvR7Archivej", "dcgp::mes4cgp::serialize::Archive"], [11, 2, 1, "_CPPv4I0EN4dcgp7mes4cgp9serializeEvR7Archivej", "dcgp::mes4cgp::serialize::ar"], [11, 1, 1, "_CPPv4N4dcgp7mes4cgp8set_seedEj", "dcgp::mes4cgp::set_seed"], [11, 2, 1, "_CPPv4N4dcgp7mes4cgp8set_seedEj", "dcgp::mes4cgp::set_seed::seed"], [11, 1, 1, "_CPPv4N4dcgp7mes4cgp13set_verbosityEj", "dcgp::mes4cgp::set_verbosity"], [11, 2, 1, "_CPPv4N4dcgp7mes4cgp13set_verbosityEj", "dcgp::mes4cgp::set_verbosity::level"], [12, 0, 1, "_CPPv4N4dcgp9momes4cgpE", "dcgp::momes4cgp"], [12, 1, 1, "_CPPv4NK4dcgp9momes4cgp6evolveEN5pagmo10populationE", "dcgp::momes4cgp::evolve"], [12, 2, 1, "_CPPv4NK4dcgp9momes4cgp6evolveEN5pagmo10populationE", "dcgp::momes4cgp::evolve::pop"], [12, 1, 1, "_CPPv4NK4dcgp9momes4cgp14get_extra_infoEv", "dcgp::momes4cgp::get_extra_info"], [12, 1, 1, "_CPPv4NK4dcgp9momes4cgp7get_logEv", "dcgp::momes4cgp::get_log"], [12, 1, 1, "_CPPv4NK4dcgp9momes4cgp8get_nameEv", "dcgp::momes4cgp::get_name"], [12, 1, 1, "_CPPv4NK4dcgp9momes4cgp8get_seedEv", "dcgp::momes4cgp::get_seed"], [12, 1, 1, "_CPPv4NK4dcgp9momes4cgp13get_verbosityEv", "dcgp::momes4cgp::get_verbosity"], [12, 3, 1, "_CPPv4N4dcgp9momes4cgp13log_line_typeE", "dcgp::momes4cgp::log_line_type"], [12, 3, 1, "_CPPv4N4dcgp9momes4cgp8log_typeE", "dcgp::momes4cgp::log_type"], [12, 1, 1, "_CPPv4N4dcgp9momes4cgp9momes4cgpEjjdj", "dcgp::momes4cgp::momes4cgp"], [12, 2, 1, "_CPPv4N4dcgp9momes4cgp9momes4cgpEjjdj", "dcgp::momes4cgp::momes4cgp::ftol"], [12, 2, 1, "_CPPv4N4dcgp9momes4cgp9momes4cgpEjjdj", "dcgp::momes4cgp::momes4cgp::gen"], [12, 2, 1, "_CPPv4N4dcgp9momes4cgp9momes4cgpEjjdj", "dcgp::momes4cgp::momes4cgp::max_mut"], [12, 2, 1, "_CPPv4N4dcgp9momes4cgp9momes4cgpEjjdj", "dcgp::momes4cgp::momes4cgp::seed"], [12, 1, 1, "_CPPv4I0EN4dcgp9momes4cgp9serializeEvR7Archivej", "dcgp::momes4cgp::serialize"], [12, 4, 1, "_CPPv4I0EN4dcgp9momes4cgp9serializeEvR7Archivej", "dcgp::momes4cgp::serialize::Archive"], [12, 2, 1, "_CPPv4I0EN4dcgp9momes4cgp9serializeEvR7Archivej", "dcgp::momes4cgp::serialize::ar"], [12, 1, 1, "_CPPv4N4dcgp9momes4cgp8set_seedEj", "dcgp::momes4cgp::set_seed"], [12, 2, 1, "_CPPv4N4dcgp9momes4cgp8set_seedEj", "dcgp::momes4cgp::set_seed::seed"], [12, 1, 1, "_CPPv4N4dcgp9momes4cgp13set_verbosityEj", "dcgp::momes4cgp::set_verbosity"], [12, 2, 1, "_CPPv4N4dcgp9momes4cgp13set_verbosityEj", "dcgp::momes4cgp::set_verbosity::level"], [13, 0, 1, "_CPPv4N4dcgp19symbolic_regressionE", "dcgp::symbolic_regression"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression7fitnessERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::fitness"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression7fitnessERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::fitness::x"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression10get_boundsEv", "dcgp::symbolic_regression::get_bounds"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression7get_cgpEv", "dcgp::symbolic_regression::get_cgp"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression14get_extra_infoEv", "dcgp::symbolic_regression::get_extra_info"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression8get_nameEv", "dcgp::symbolic_regression::get_name"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression7get_nixEv", "dcgp::symbolic_regression::get_nix"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression8get_nobjEv", "dcgp::symbolic_regression::get_nobj"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression17get_thread_safetyEv", "dcgp::symbolic_regression::get_thread_safety"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression8gradientERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::gradient"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression8gradientERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::gradient::x"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression17gradient_sparsityEv", "dcgp::symbolic_regression::gradient_sparsity"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression8hessiansERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::hessians"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression8hessiansERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::hessians::x"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression17hessians_sparsityEv", "dcgp::symbolic_regression::hessians_sparsity"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorINSt6vectorIdEEEEN5pagmo13vector_doubleE", "dcgp::symbolic_regression::predict"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorIdEEN5pagmo13vector_doubleE", "dcgp::symbolic_regression::predict"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorIdEEN5pagmo13vector_doubleE", "dcgp::symbolic_regression::predict::point"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorINSt6vectorIdEEEEN5pagmo13vector_doubleE", "dcgp::symbolic_regression::predict::points"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorINSt6vectorIdEEEEN5pagmo13vector_doubleE", "dcgp::symbolic_regression::predict::x"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorIdEEN5pagmo13vector_doubleE", "dcgp::symbolic_regression::predict::x"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression8prettierERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::prettier"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression8prettierERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::prettier::x"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression6prettyERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::pretty"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression6prettyERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::pretty::x"], [13, 1, 1, "_CPPv4I0EN4dcgp19symbolic_regression9serializeEvR7Archivej", "dcgp::symbolic_regression::serialize"], [13, 4, 1, "_CPPv4I0EN4dcgp19symbolic_regression9serializeEvR7Archivej", "dcgp::symbolic_regression::serialize::Archive"], [13, 2, 1, "_CPPv4I0EN4dcgp19symbolic_regression9serializeEvR7Archivej", "dcgp::symbolic_regression::serialize::ar"], [13, 1, 1, "_CPPv4NK4dcgp19symbolic_regression7set_cgpERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::set_cgp"], [13, 2, 1, "_CPPv4NK4dcgp19symbolic_regression7set_cgpERKN5pagmo13vector_doubleE", "dcgp::symbolic_regression::set_cgp::x"], [13, 1, 1, "_CPPv4N4dcgp19symbolic_regression24set_phenotype_correctionEN10expressionIdE11pc_fun_typeEN10expressionIN4audi7gdual_vEE11pc_fun_typeE", "dcgp::symbolic_regression::set_phenotype_correction"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression24set_phenotype_correctionEN10expressionIdE11pc_fun_typeEN10expressionIN4audi7gdual_vEE11pc_fun_typeE", "dcgp::symbolic_regression::set_phenotype_correction::dpc"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression24set_phenotype_correctionEN10expressionIdE11pc_fun_typeEN10expressionIN4audi7gdual_vEE11pc_fun_typeE", "dcgp::symbolic_regression::set_phenotype_correction::pc"], [13, 1, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression"], [13, 1, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionEv", "dcgp::symbolic_regression::symbolic_regression"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::arity"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::c"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::f"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::l"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::labels"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::loss_s"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::multi_objective"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::n_eph"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::parallel_batches"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::points"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::r"], [13, 2, 1, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj", "dcgp::symbolic_regression::symbolic_regression::seed"], [13, 1, 1, "_CPPv4N4dcgp19symbolic_regression26unset_phenotype_correctionEv", "dcgp::symbolic_regression::unset_phenotype_correction"]], "dcgpy": [[30, 7, 1, "", "disable_threading"], [30, 7, 1, "", "enable_threading"], [15, 8, 1, "", "es4cgp"], [17, 8, 1, "", "expression_ann"], [16, 8, 1, "", "expression_double"], [16, 8, 1, "", "expression_gdual_double"], [16, 8, 1, "", "expression_gdual_vdouble"], [18, 8, 1, "", "expression_weighted_double"], [18, 8, 1, "", "expression_weighted_gdual_double"], [18, 8, 1, "", "expression_weighted_gdual_vdouble"], [19, 8, 1, "", "gd4cgp"], [28, 7, 1, "", "generate_P1"], [28, 7, 1, "", "generate_P2"], [28, 7, 1, "", "generate_P3"], [28, 7, 1, "", "generate_P4"], [28, 7, 1, "", "generate_P5"], [28, 7, 1, "", "generate_P6"], [28, 7, 1, "", "generate_P7"], [27, 7, 1, "", "generate_chwirut1"], [27, 7, 1, "", "generate_chwirut2"], [27, 7, 1, "", "generate_daniel_wood"], [27, 7, 1, "", "generate_gauss1"], [27, 7, 1, "", "generate_kirby2"], [31, 7, 1, "", "generate_kotanchek"], [24, 7, 1, "", "generate_koza_quintic"], [27, 7, 1, "", "generate_lanczos2"], [27, 7, 1, "", "generate_misra1b"], [31, 7, 1, "", "generate_ratpol2d"], [31, 7, 1, "", "generate_ratpol3d"], [31, 7, 1, "", "generate_ripple"], [31, 7, 1, "", "generate_salutowicz"], [31, 7, 1, "", "generate_salutowicz2d"], [31, 7, 1, "", "generate_sinecosine"], [31, 7, 1, "", "generate_uball5d"], [21, 8, 1, "", "kernel_double"], [21, 8, 1, "", "kernel_gdual_double"], [21, 8, 1, "", "kernel_gdual_vdouble"], [23, 8, 1, "", "kernel_set_double"], [23, 8, 1, "", "kernel_set_gdual_double"], [23, 8, 1, "", "kernel_set_gdual_vdouble"], [25, 8, 1, "", "mes4cgp"], [26, 8, 1, "", "momes4cgp"], [29, 8, 1, "", "symbolic_regression"]], "dcgpy.es4cgp": [[15, 9, 1, "", "get_log"], [15, 9, 1, "", "get_seed"], [15, 9, 1, "", "set_bfe"]], "dcgpy.expression_ann": [[17, 10, 1, "", "eph_symb"], [17, 10, 1, "", "eph_val"], [17, 9, 1, "", "get_bias"], [17, 9, 1, "", "get_biases"], [17, 9, 1, "", "get_weight"], [17, 9, 1, "", "get_weights"], [17, 9, 1, "", "n_active_weights"], [17, 9, 1, "", "randomise_biases"], [17, 9, 1, "", "randomise_weights"], [17, 9, 1, "", "set_bias"], [17, 9, 1, "", "set_biases"], [17, 9, 1, "", "set_output_f"], [17, 9, 1, "", "set_weight"], [17, 9, 1, "", "set_weights"], [17, 9, 1, "", "sgd"], [17, 9, 1, "", "simplify"], [17, 9, 1, "", "visualize"]], "dcgpy.expression_double": [[16, 10, 1, "", "eph_symb"], [16, 10, 1, "", "eph_val"], [16, 9, 1, "", "get"], [16, 9, 1, "", "get_active_genes"], [16, 9, 1, "", "get_active_nodes"], [16, 9, 1, "", "get_arity"], [16, 9, 1, "", "get_cols"], [16, 9, 1, "", "get_f"], [16, 9, 1, "", "get_gene_idx"], [16, 9, 1, "", "get_lb"], [16, 9, 1, "", "get_levels_back"], [16, 9, 1, "", "get_m"], [16, 9, 1, "", "get_n"], [16, 9, 1, "", "get_rows"], [16, 9, 1, "", "get_ub"], [16, 9, 1, "", "loss"], [16, 9, 1, "", "mutate"], [16, 9, 1, "", "mutate_active"], [16, 9, 1, "", "mutate_active_cgene"], [16, 9, 1, "", "mutate_active_fgene"], [16, 9, 1, "", "mutate_ogene"], [16, 9, 1, "", "mutate_random"], [16, 9, 1, "", "set"], [16, 9, 1, "", "set_f_gene"], [16, 9, 1, "", "set_phenotype_correction"], [16, 9, 1, "", "simplify"], [16, 9, 1, "", "unset_phenotype_correction"], [16, 9, 1, "", "visualize"]], "dcgpy.expression_gdual_double": [[16, 10, 1, "", "eph_symb"], [16, 10, 1, "", "eph_val"], [16, 9, 1, "", "get"], [16, 9, 1, "", "get_active_genes"], [16, 9, 1, "", "get_active_nodes"], [16, 9, 1, "", "get_arity"], [16, 9, 1, "", "get_cols"], [16, 9, 1, "", "get_f"], [16, 9, 1, "", "get_gene_idx"], [16, 9, 1, "", "get_lb"], [16, 9, 1, "", "get_levels_back"], [16, 9, 1, "", "get_m"], [16, 9, 1, "", "get_n"], [16, 9, 1, "", "get_rows"], [16, 9, 1, "", "get_ub"], [16, 9, 1, "", "loss"], [16, 9, 1, "", "mutate"], [16, 9, 1, "", "mutate_active"], [16, 9, 1, "", "mutate_active_cgene"], [16, 9, 1, "", "mutate_active_fgene"], [16, 9, 1, "", "mutate_ogene"], [16, 9, 1, "", "mutate_random"], [16, 9, 1, "", "set"], [16, 9, 1, "", "set_f_gene"], [16, 9, 1, "", "set_phenotype_correction"], [16, 9, 1, "", "simplify"], [16, 9, 1, "", "unset_phenotype_correction"], [16, 9, 1, "", "visualize"]], "dcgpy.expression_gdual_vdouble": [[16, 10, 1, "", "eph_symb"], [16, 10, 1, "", "eph_val"], [16, 9, 1, "", "get"], [16, 9, 1, "", "get_active_genes"], [16, 9, 1, "", "get_active_nodes"], [16, 9, 1, "", "get_arity"], [16, 9, 1, "", "get_cols"], [16, 9, 1, "", "get_f"], [16, 9, 1, "", "get_gene_idx"], [16, 9, 1, "", "get_lb"], [16, 9, 1, "", "get_levels_back"], [16, 9, 1, "", "get_m"], [16, 9, 1, "", "get_n"], [16, 9, 1, "", "get_rows"], [16, 9, 1, "", "get_ub"], [16, 9, 1, "", "loss"], [16, 9, 1, "", "mutate"], [16, 9, 1, "", "mutate_active"], [16, 9, 1, "", "mutate_active_cgene"], [16, 9, 1, "", "mutate_active_fgene"], [16, 9, 1, "", "mutate_ogene"], [16, 9, 1, "", "mutate_random"], [16, 9, 1, "", "set"], [16, 9, 1, "", "set_f_gene"], [16, 9, 1, "", "set_phenotype_correction"], [16, 9, 1, "", "simplify"], [16, 9, 1, "", "unset_phenotype_correction"], [16, 9, 1, "", "visualize"]], "dcgpy.expression_weighted_double": [[18, 10, 1, "", "eph_symb"], [18, 10, 1, "", "eph_val"], [18, 9, 1, "", "get_weight"], [18, 9, 1, "", "get_weights"], [18, 9, 1, "", "set_weight"], [18, 9, 1, "", "set_weights"]], "dcgpy.expression_weighted_gdual_double": [[18, 10, 1, "", "eph_symb"], [18, 10, 1, "", "eph_val"], [18, 9, 1, "", "get_weight"], [18, 9, 1, "", "get_weights"], [18, 9, 1, "", "set_weight"], [18, 9, 1, "", "set_weights"]], "dcgpy.expression_weighted_gdual_vdouble": [[18, 10, 1, "", "eph_symb"], [18, 10, 1, "", "eph_val"], [18, 9, 1, "", "get_weight"], [18, 9, 1, "", "get_weights"], [18, 9, 1, "", "set_weight"], [18, 9, 1, "", "set_weights"]], "dcgpy.gd4cgp": [[19, 9, 1, "", "get_log"]], "dcgpy.kernel_set_double": [[23, 9, 1, "", "push_back"]], "dcgpy.kernel_set_gdual_double": [[23, 9, 1, "", "push_back"]], "dcgpy.kernel_set_gdual_vdouble": [[23, 9, 1, "", "push_back"]], "dcgpy.mes4cgp": [[25, 9, 1, "", "get_log"], [25, 9, 1, "", "get_seed"]], "dcgpy.momes4cgp": [[26, 9, 1, "", "get_log"], [26, 9, 1, "", "get_seed"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:functionParam", "3": "cpp:type", "4": "cpp:templateParam", "5": "cpp:enum", "6": "cpp:enumerator", "7": "py:function", "8": "py:class", "9": "py:method", "10": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "functionParam", "C++ function parameter"], "3": ["cpp", "type", "C++ type"], "4": ["cpp", "templateParam", "C++ template parameter"], "5": ["cpp", "enum", "C++ enum"], "6": ["cpp", "enumerator", "C++ enumerator"], "7": ["py", "function", "Python function"], "8": ["py", "class", "Python class"], "9": ["py", "method", "Python method"], "10": ["py", "attribute", "Python attribute"]}, "titleterms": {"changelog": 0, "1": [0, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50], "6": [0, 43, 44, 47, 48, 49], "unreleas": 0, "5": [0, 40, 41, 43, 44, 45, 47, 48, 49, 50], "7": 0, "2020": 0, "new": [0, 35], "chang": 0, "credit": 1, "main": 1, "develop": 1, "evolutionari": [2, 11, 12, 15, 25, 26, 59], "strategi": [2, 11, 12, 15, 25, 26], "uda": [2, 6, 11, 12, 15, 19, 25, 26], "express": [3, 16, 35, 42], "dcgp": [3, 4, 5, 7, 16, 17, 18, 20, 35, 36, 37, 39, 46, 50, 53], "expression_ann": [4, 17], "ann": [4, 17], "expression_weight": [5, 18], "w": [5, 18], "gradient": [6, 19], "descent": [6, 19], "c": [7, 33, 51, 64], "document": [7, 14, 20], "content": [7, 16, 32, 49], "kernel": [7, 8, 9, 20, 21, 22, 23, 35, 40, 46], "type": [7, 20], "symbol": [7, 13, 20, 29, 35, 38, 40, 41, 43, 44, 47, 48, 49, 50, 64, 66], "regress": [7, 13, 20, 29, 37, 38, 40, 41, 43, 44, 47, 48, 49, 50, 64, 66], "avail": [9, 22], "kernel_set": 10, "memet": [11, 12, 25, 26, 49, 60], "multi": [12, 26, 49], "object": [12, 26, 49], "udp": [13, 29], "api": 14, "expression_doubl": 16, "expression_gdual_doubl": 16, "expression_gdual_vdoubl": 16, "expression_weighted_doubl": 18, "expression_weighted_gdual_doubl": 18, "expression_weighted_gdual_vdoubl": 18, "python": [20, 33, 51, 66], "util": 20, "kernel_doubl": 21, "kernel_gdual_doubl": 21, "kernel_gdual_vdoubl": 21, "set": [23, 36, 37], "kernel_set_doubl": 23, "kernel_set_gdual_doubl": 23, "kernel_set_gdual_vdoubl": 23, "koza": [24, 58], "quintic": [24, 58], "nist": 27, "problem": [27, 28, 31, 39, 40, 41, 43, 44, 47, 48, 49, 50, 57, 58, 62, 63], "strd": 27, "p1": [28, 40, 50], "p7": [28, 41, 50], "thread": 30, "disable_thread": 30, "enable_thread": 30, "from": [31, 62, 63], "vladislavleva": 31, "differenti": [32, 46, 53], "cartesian": [32, 34, 52, 53], "genet": [32, 34, 52, 53], "program": [32, 34, 46, 52, 53], "tabl": 32, "refer": 32, "instal": 33, "guid": 33, "conda": 33, "build": 33, "repres": 34, "an": [34, 42, 58, 60, 61], "artifici": 34, "neural": [34, 66], "network": [34, 66], "instanti": [34, 46], "inspect": [34, 43, 44, 46, 47, 48, 49], "dcgpann": [34, 36, 37], "mutat": [34, 42], "train": [34, 36, 37], "custom": 35, "write": 35, "nonlinear": 35, "its": 35, "form": [35, 45], "2": [35, 40, 41, 42, 43, 44, 47, 48, 49, 50], "defin": [35, 42, 46], "our": 35, "callabl": 35, "3": [35, 40, 41, 42, 43, 47, 48, 49, 50], "profil": 35, "speed": 35, "4": [35, 43, 44, 47, 48, 49], "us": [35, 36, 37, 48, 56, 59, 60], "dcpy": 35, "ffnn": [36, 37], "v": [36, 37], "kera": [36, 37], "classif": 36, "data": [36, 37, 43, 44, 47, 48, 49], "encod": [36, 37], "same": [36, 37], "i": [36, 37], "done": [36, 37], "tensor": [36, 37], "flow": [36, 37], "backend": [36, 37], "repeat": 37, "ten": 37, "time": [37, 42], "comparison": 37, "island": 38, "model": [38, 58, 59, 60], "discoveri": 39, "prime": [39, 55, 56], "integr": [39, 55, 56, 57], "A": [39, 43, 44, 45, 47], "mass": [39, 55, 56], "spring": [39, 55, 56], "system": [39, 55, 56], "simpl": 39, "pendulum": 39, "The": [39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50], "two": 39, "bodi": 39, "learn": [40, 41, 48], "constant": [40, 41, 48], "task": [40, 41, 50], "deprec": [40, 41, 66], "function": [40, 41, 46, 50], "e": [40, 41, 46, 50], "lambda": [40, 41, 50], "algorithm": [40, 41, 43, 44, 47, 48, 49, 50], "test": [40, 41, 50], "error": [40, 41, 50], "x": [40, 41, 50], "pi": [40, 41, 50], "p2": [40, 50], "frac": [40, 41, 50], "p3": [40, 50], "p4": [40, 50], "sin": [40, 41, 50], "1x": [40, 50], "part": 41, "ii": 41, "p5": [41, 50], "ex": [41, 50], "p6": [41, 50], "co": [41, 50], "phenotyp": [42, 66], "correct": [42, 66], "we": [42, 46], "10": 42, "plot": 42, "real": [43, 44, 45], "world": [43, 44, 45], "case": [43, 44, 45], "engin": 43, "materi": 43, "raw": [43, 44], "normal": 43, "search": [43, 44, 47, 48, 49, 57], "solut": [43, 44, 46, 47, 48], "physic": 44, "dynam": 44, "biomimet": 45, "space": 45, "technologi": 45, "preliminari": 45, "best": 45, "fit": 45, "found": 45, "look": [45, 49], "eleg": 45, "show": 45, "solv": [46, 62, 63], "equat": 46, "input": 46, "output": [46, 58, 59, 60, 61], "randomli": 46, "creat": 46, "evolv": 46, "consid": 46, "follow": 46, "ordinari": 46, "ode1": [46, 63], "ode2": 46, "ode5": 46, "non": [46, 49, 61], "linear": 46, "nlode3": [46, 62], "patial": 46, "pde2": 46, "pde6": 46, "basic": 47, "tutori": [47, 65], "recov": [47, 48], "log": [47, 48, 49], "evolut": 48, "approach": [49, 59, 60], "domin": [49, 61], "front": [49, 61], "let": 49, "have": 49, "weight": 50, "newton": 50, "": [50, 57], "method": [50, 56], "quick": 51, "start": 51, "exampl": 51, "cgp": 52, "background": 54, "find": [55, 56, 58, 59, 60, 61], "lipson": 56, "first": 57, "kepler": 57, "exact": [58, 60], "code": [58, 59, 60, 61], "includ": 59, "one": [59, 60], "paramet": [59, 60], "pure": 59, "incldu": 60, "entir": 61, "formula": 61, "tsoulo": [62, 63], "other": [64, 66], "core": 66}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Changelog": [[0, "changelog"]], "1.6 (Unreleased)": [[0, "unreleased"]], "1.5 (6/7/2020)": [[0, "id2"]], "New": [[0, "new"]], "Changes": [[0, "changes"]], "Credits": [[1, "credits"]], "Main developers": [[1, "main-developers"]], "Evolutionary Strategy (UDA)": [[2, "evolutionary-strategy-uda"], [15, "evolutionary-strategy-uda"]], "expression (dCGP)": [[3, "expression-dcgp"], [16, "expression-dcgp"]], "expression_ann (dCGP-ANN)": [[4, "expression-ann-dcgp-ann"], [17, "expression-ann-dcgp-ann"]], "expression_weighted (dCGP-W)": [[5, "expression-weighted-dcgp-w"], [18, "expression-weighted-dcgp-w"]], "Gradient Descent (UDA)": [[6, "gradient-descent-uda"], [19, "gradient-descent-uda"]], "C++ Documentation": [[7, "c-documentation"]], "Contents": [[7, "contents"], [16, "contents"]], "Kernels": [[7, "kernels"], [20, "kernels"]], "Types of dCGPs": [[7, "types-of-dcgps"], [20, "types-of-dcgps"]], "Symbolic Regression": [[7, "symbolic-regression"], [20, "symbolic-regression"], [64, "symbolic-regression"], [66, "symbolic-regression"]], "kernel": [[8, "kernel"]], "Available kernels": [[9, "available-kernels"], [22, "available-kernels"]], "kernel_set": [[10, "kernel-set"]], "Memetic Evolutionary Strategy (UDA)": [[11, "memetic-evolutionary-strategy-uda"], [25, "memetic-evolutionary-strategy-uda"]], "Multi-Objective Memetic Evolutionary Strategy (UDA)": [[12, "multi-objective-memetic-evolutionary-strategy-uda"], [26, "multi-objective-memetic-evolutionary-strategy-uda"]], "Symbolic Regression (UDP)": [[13, "symbolic-regression-udp"], [29, "symbolic-regression-udp"]], "API documentation": [[14, "api-documentation"]], "expression_double": [[16, "expression-double"]], "expression_gdual_double": [[16, "expression-gdual-double"]], "expression_gdual_vdouble": [[16, "expression-gdual-vdouble"]], "expression_weighted_double": [[18, "expression-weighted-double"]], "expression_weighted_gdual_double": [[18, "expression-weighted-gdual-double"]], "expression_weighted_gdual_vdouble": [[18, "expression-weighted-gdual-vdouble"]], "Python Documentation": [[20, "python-documentation"]], "Utilities": [[20, "utilities"]], "Kernel": [[21, "kernel"]], "kernel_double": [[21, "kernel-double"]], "kernel_gdual_double": [[21, "kernel-gdual-double"]], "kernel_gdual_vdouble": [[21, "kernel-gdual-vdouble"]], "Kernel set": [[23, "kernel-set"]], "kernel_set_double": [[23, "kernel-set-double"]], "kernel_set_gdual_double": [[23, "kernel-set-gdual-double"]], "kernel_set_gdual_vdouble": [[23, "kernel-set-gdual-vdouble"]], "Koza Quintic": [[24, "koza-quintic"]], "NIST problems (StRD)": [[27, "nist-problems-strd"]], "Problems P1-P7": [[28, "problems-p1-p7"]], "Threading": [[30, "threading"]], "disable_threading": [[30, "disable-threading"]], "enable_threading": [[30, "enable-threading"]], "Problems from Vladislavleva": [[31, "problems-from-vladislavleva"]], "Differentiable Cartesian Genetic Programming": [[32, "differentiable-cartesian-genetic-programming"]], "Table of contents:": [[32, "table-of-contents"]], "References": [[32, "references"]], "Installation guide": [[33, "installation-guide"]], "C++": [[33, "c"], [51, "c"], [64, "c"]], "Python": [[33, "python"], [51, "python"], [66, "python"]], "Installing with conda": [[33, "installing-with-conda"]], "Building": [[33, "building"]], "Representing an Artificial Neural Network as a Cartesian Genetic Program": [[34, "Representing-an-Artificial-Neural-Network-as-a-Cartesian-Genetic-Program"]], "Instantiating and inspecting a dCGPANN": [[34, "Instantiating-and-inspecting-a-dCGPANN"]], "Mutating a dCGPANN": [[34, "Mutating-a-dCGPANN"]], "Training a dCGPANN": [[34, "Training-a-dCGPANN"]], "Custom Kernels": [[35, "Custom-Kernels"]], "1 - Write the nonlinearity and its symbolic form": [[35, "1---Write-the-nonlinearity-and-its-symbolic-form"]], "2 - Define a dcgp.kernel with our new callables": [[35, "2---Define-a-dcgp.kernel-with-our-new-callables"]], "3 - Profiling the speed": [[35, "3---Profiling-the-speed"]], "4 - Using the new kernel in a dcpy.expression": [[35, "4---Using-the-new-kernel-in-a-dcpy.expression"]], "Training a FFNN in dCGPANN vs.\u00a0Keras (classification)": [[36, "Training-a-FFNN-in-dCGPANN-vs.\u00a0Keras-(classification)"]], "Data set": [[36, "Data-set"], [37, "Data-set"]], "Encoding and training a FFNN using dCGP": [[36, "Encoding-and-training-a-FFNN-using-dCGP"], [37, "Encoding-and-training-a-FFNN-using-dCGP"]], "Same training is done using Keras (Tensor Flow backend)": [[36, "Same-training-is-done-using-Keras-(Tensor-Flow-backend)"], [37, "Same-training-is-done-using-Keras-(Tensor-Flow-backend)"]], "Training a FFNN in dCGPANN vs.\u00a0Keras (regression)": [[37, "Training-a-FFNN-in-dCGPANN-vs.\u00a0Keras-(regression)"]], "Repeating ten times the same comparison": [[37, "Repeating-ten-times-the-same-comparison"]], "Symbolic Regression and the Island Model": [[38, "Symbolic-Regression-and-the-Island-Model"]], "Discovery of prime integrals with dCGP": [[39, "Discovery-of-prime-integrals-with-dCGP"]], "A mass spring system": [[39, "A-mass-spring-system"]], "Simple pendulum": [[39, "Simple-pendulum"]], "The two-body problem": [[39, "The-two-body-problem"]], "Learning constants in a symbolic regression task (deprecated)": [[40, "Learning-constants-in-a-symbolic-regression-task-(deprecated)"]], "The kernel functions": [[40, "The-kernel-functions"], [46, "The-kernel-functions"]], "The ES-(1+\\lambda) algorithm": [[40, "The-ES-(1+\\lambda)-algorithm"], [41, "The-ES-(1+\\lambda)-algorithm"], [50, "The-ES-(1+\\lambda)-algorithm"]], "The test problems": [[40, "The-test-problems"], [41, "The-test-problems"], [50, "The-test-problems"]], "The error functions": [[40, "The-error-functions"], [41, "The-error-functions"]], "Problem P1: x^5 - \\pi x^3 + x": [[40, "Problem-P1:-x^5---\\pi-x^3-+-x"], [50, "Problem-P1:-x^5---\\pi-x^3-+-x"]], "Problem P2 - x^5 - \\pi x^3 + \\frac{2\\pi}x": [[40, "Problem-P2---x^5---\\pi-x^3-+-\\frac{2\\pi}x"]], "Problem P3 - \\frac{e x^5 + x^3}{x + 1}": [[40, "Problem-P3---\\frac{e-x^5-+-x^3}{x-+-1}"]], "Problem P4: \\sin(\\pi x) + \\frac 1x": [[40, "Problem-P4:-\\sin(\\pi-x)-+-\\frac-1x"], [50, "Problem-P4:-\\sin(\\pi-x)-+-\\frac-1x"]], "Learning constants in a symbolic regression task (PART II) (deprecated)": [[41, "Learning-constants-in-a-symbolic-regression-task-(PART-II)-(deprecated)"]], "Problem P5: ex^5 - \\pi x^3 + x": [[41, "Problem-P5:-ex^5---\\pi-x^3-+-x"], [50, "Problem-P5:-ex^5---\\pi-x^3-+-x"]], "Problem P6: \\frac{e x^2-1}{\\pi (x + 2)}": [[41, "Problem-P6:-\\frac{e-x^2-1}{\\pi-(x-+-2)}"], [50, "Problem-P6:-\\frac{e-x^2-1}{\\pi-(x-+-2)}"]], "Problem P7: \\sin(e x) + \\cos(\\pi x)": [[41, "Problem-P7:-\\sin(e-x)-+-\\cos(\\pi-x)"], [50, "Problem-P7:-\\sin(e-x)-+-\\cos(\\pi-x)"]], "Phenotype Correction": [[42, "Phenotype-Correction"]], "1 - We define an expression": [[42, "1---We-define-an-expression"]], "2 - We correct the phenotype": [[42, "2---We-correct-the-phenotype"]], "3 - We mutate 10 times and plot the mutated expressions": [[42, "3---We-mutate-10-times-and-plot-the-mutated-expressions"]], "A real-world case (Engineering: materials)": [[43, "A-real-world-case-(Engineering:-materials)"]], "1 - The raw data": [[43, "1---The-raw-data"], [44, "1---The-raw-data"]], "2 - Normalizing the data": [[43, "2---Normalizing-the-data"]], "3 - The symbolic regression problem": [[43, "3---The-symbolic-regression-problem"]], "4 - The search algorithm": [[43, "4---The-search-algorithm"], [44, "4---The-search-algorithm"]], "5 - The search": [[43, "5---The-search"], [44, "5---The-search"]], "6 - Inspecting the solution": [[43, "6---Inspecting-the-solution"], [44, "6---Inspecting-the-solution"]], "A real-world case (Physics: dynamics)": [[44, "A-real-world-case-(Physics:-dynamics)"]], "2 - The symbolic regression problem": [[44, "2---The-symbolic-regression-problem"], [47, "2---The-symbolic-regression-problem"], [48, "2---The-symbolic-regression-problem"], [49, "2---The-symbolic-regression-problem"]], "A real-world case (Biomimetics: space technology)": [[45, "A-real-world-case-(Biomimetics:-space-technology)"]], "Preliminaries": [[45, "Preliminaries"]], "The best fits found": [[45, "The-best-fits-found"]], "Looking for elegant forms": [[45, "Looking-for-elegant-forms"]], "Showing the best 5 fits": [[45, "Showing-the-best-5-fits"]], "Solving differential equations with dCGP": [[46, "Solving-differential-equations-with-dCGP"]], "Instantiate a (1 input, 1 output) dCGP and we inspect a randomly created program": [[46, "Instantiate-a-(1-input,-1-output)-dCGP-and-we-inspect-a-randomly-created-program"]], "Define the ES that will evolve solutions": [[46, "Define-the-ES-that-will-evolve-solutions"]], "Consider the following Ordinary Differential Equation (ODE1):": [[46, "Consider-the-following-Ordinary-Differential-Equation-(ODE1):"]], "Consider the following Ordinary Differential Equation (ODE2):": [[46, "Consider-the-following-Ordinary-Differential-Equation-(ODE2):"]], "Consider the following Ordinary Differential Equation (ODE5):": [[46, "Consider-the-following-Ordinary-Differential-Equation-(ODE5):"]], "Consider the following non linear Ordinary Differential Equation (NLODE3):": [[46, "Consider-the-following-non-linear-Ordinary-Differential-Equation-(NLODE3):"]], "Consider the following non linear Patial Differential Equation (PDE2):": [[46, "Consider-the-following-non-linear-Patial-Differential-Equation-(PDE2):"]], "Consider the following non linear Patial Differential Equation (PDE6):": [[46, "Consider-the-following-non-linear-Patial-Differential-Equation-(PDE6):"]], "A basic tutorial on symbolic regression": [[47, "A-basic-tutorial-on-symbolic-regression"]], "1 - The data": [[47, "1---The-data"], [48, "1---The-data"], [49, "1---The-data"]], "3 - The search algorithm": [[47, "3---The-search-algorithm"], [48, "3---The-search-algorithm"], [49, "3---The-search-algorithm"]], "4 - The search": [[47, "4---The-search"], [48, "4---The-search"], [49, "4---The-search"]], "5 - Inspecting the solution": [[47, "5---Inspecting-the-solution"], [48, "5---Inspecting-the-solution"]], "6 - Recovering the log": [[47, "6---Recovering-the-log"], [48, "6---Recovering-the-log"]], "Learning constants using evolution": [[48, "Learning-constants-using-evolution"]], "Multi-objective memetic approach": [[49, "Multi-objective-memetic-approach"]], "5 - Inspecting the non dominated front": [[49, "5---Inspecting-the-non-dominated-front"]], "6 - Lets have a look to the log content": [[49, "6---Lets-have-a-look-to-the-log-content"]], "Weighted dCGP for a symbolic regression task": [[50, "Weighted-dCGP-for-a-symbolic-regression-task"]], "The error function": [[50, "The-error-function"]], "Newton\u2019s method": [[50, "Newton\u2019s-method"]], "Problem P2: x^5 - \\pi x^3 + \\frac{2\\pi}x": [[50, "Problem-P2:-x^5---\\pi-x^3-+-\\frac{2\\pi}x"]], "Problem P3: \\frac{e x^5 + x^3}{x + 1}": [[50, "Problem-P3:-\\frac{e-x^5-+-x^3}{x-+-1}"]], "Quick start examples": [[51, "quick-start-examples"]], "Cartesian Genetic Programming (CGP)": [[52, "cartesian-genetic-programming-cgp"]], "Differentiable Cartesian Genetic Programming (dCGP)": [[53, "differentiable-cartesian-genetic-programming-dcgp"]], "Background": [[54, "background"]], "Finding the prime integral for a spring mass system": [[55, "finding-the-prime-integral-for-a-spring-mass-system"]], "Finding the prime integral for a spring mass system using Lipson method": [[56, "finding-the-prime-integral-for-a-spring-mass-system-using-lipson-method"]], "Search for first integrals of Kepler\u2019s problem": [[57, "search-for-first-integrals-of-kepler-s-problem"]], "Find an exact model for the Koza quintic problem": [[58, "find-an-exact-model-for-the-koza-quintic-problem"]], "Code:": [[58, "code"], [59, "code"], [60, "code"], [61, "code"]], "Output:": [[58, "output"], [59, "output"], [60, "output"], [61, "output"]], "Find a model including one parameter (using a purely evolutionary approach)": [[59, "find-a-model-including-one-parameter-using-a-purely-evolutionary-approach"]], "Find an exact model inclduing one parameter using a memetic approach": [[60, "find-an-exact-model-inclduing-one-parameter-using-a-memetic-approach"]], "Finding an entire non dominated front of formulas.": [[61, "finding-an-entire-non-dominated-front-of-formulas"]], "Solving the NLODE3 problem from Tsoulos": [[62, "solving-the-nlode3-problem-from-tsoulos"]], "Solving the ODE1 problem from Tsoulos": [[63, "solving-the-ode1-problem-from-tsoulos"]], "Others": [[64, "others"]], "Tutorials": [[65, "tutorials"]], "Core": [[66, "core"]], "Phenotype correction": [[66, "phenotype-correction"]], "Neural Networks": [[66, "neural-networks"]], "Other": [[66, "other"]], "Deprecated": [[66, "deprecated"]]}, "indexentries": {"dcgp::es4cgp (c++ class)": [[2, "_CPPv4N4dcgp6es4cgpE"]], "dcgp::es4cgp::es4cgp (c++ function)": [[2, "_CPPv4N4dcgp6es4cgp6es4cgpEjjdbj"]], "dcgp::es4cgp::evolve (c++ function)": [[2, "_CPPv4NK4dcgp6es4cgp6evolveEN5pagmo10populationE"]], "dcgp::es4cgp::get_extra_info (c++ function)": [[2, "_CPPv4NK4dcgp6es4cgp14get_extra_infoEv"]], "dcgp::es4cgp::get_log (c++ function)": [[2, "_CPPv4NK4dcgp6es4cgp7get_logEv"]], "dcgp::es4cgp::get_name (c++ function)": [[2, "_CPPv4NK4dcgp6es4cgp8get_nameEv"]], "dcgp::es4cgp::get_seed (c++ function)": [[2, "_CPPv4NK4dcgp6es4cgp8get_seedEv"]], "dcgp::es4cgp::get_verbosity (c++ function)": [[2, "_CPPv4NK4dcgp6es4cgp13get_verbosityEv"]], "dcgp::es4cgp::log_line_type (c++ type)": [[2, "_CPPv4N4dcgp6es4cgp13log_line_typeE"]], "dcgp::es4cgp::log_type (c++ type)": [[2, "_CPPv4N4dcgp6es4cgp8log_typeE"]], "dcgp::es4cgp::serialize (c++ function)": [[2, "_CPPv4I0EN4dcgp6es4cgp9serializeEvR7Archivej"]], "dcgp::es4cgp::set_bfe (c++ function)": [[2, "_CPPv4N4dcgp6es4cgp7set_bfeERKN5pagmo3bfeE"]], "dcgp::es4cgp::set_seed (c++ function)": [[2, "_CPPv4N4dcgp6es4cgp8set_seedEj"]], "dcgp::es4cgp::set_verbosity (c++ function)": [[2, "_CPPv4N4dcgp6es4cgp13set_verbosityEj"]], "dcgp::expression (c++ class)": [[3, "_CPPv4I0EN4dcgp10expressionE"]], "dcgp::expression::expression (c++ function)": [[3, "_CPPv4N4dcgp10expression10expressionERK10expression"], [3, "_CPPv4N4dcgp10expression10expressionERR10expression"], [3, "_CPPv4N4dcgp10expression10expressionEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEjj"], [3, "_CPPv4N4dcgp10expression10expressionEjjjjjjNSt6vectorI6kernelI1TEEEjj"]], "dcgp::expression::get (c++ function)": [[3, "_CPPv4NK4dcgp10expression3getEv"]], "dcgp::expression::get_active_genes (c++ function)": [[3, "_CPPv4NK4dcgp10expression16get_active_genesEv"]], "dcgp::expression::get_active_nodes (c++ function)": [[3, "_CPPv4NK4dcgp10expression16get_active_nodesEv"]], "dcgp::expression::get_arity (c++ function)": [[3, "_CPPv4NK4dcgp10expression9get_arityEj"], [3, "_CPPv4NK4dcgp10expression9get_arityEv"]], "dcgp::expression::get_c (c++ function)": [[3, "_CPPv4NK4dcgp10expression5get_cEv"]], "dcgp::expression::get_eph_symb (c++ function)": [[3, "_CPPv4NK4dcgp10expression12get_eph_symbEv"]], "dcgp::expression::get_eph_val (c++ function)": [[3, "_CPPv4NK4dcgp10expression11get_eph_valEv"]], "dcgp::expression::get_f (c++ function)": [[3, "_CPPv4NK4dcgp10expression5get_fEv"]], "dcgp::expression::get_gene_idx (c++ function)": [[3, "_CPPv4NK4dcgp10expression12get_gene_idxEv"]], "dcgp::expression::get_l (c++ function)": [[3, "_CPPv4NK4dcgp10expression5get_lEv"]], "dcgp::expression::get_lb (c++ function)": [[3, "_CPPv4NK4dcgp10expression6get_lbEv"]], "dcgp::expression::get_m (c++ function)": [[3, "_CPPv4NK4dcgp10expression5get_mEv"]], "dcgp::expression::get_n (c++ function)": [[3, "_CPPv4NK4dcgp10expression5get_nEv"]], "dcgp::expression::get_r (c++ function)": [[3, "_CPPv4NK4dcgp10expression5get_rEv"]], "dcgp::expression::get_ub (c++ function)": [[3, "_CPPv4NK4dcgp10expression6get_ubEv"]], "dcgp::expression::is_active_gene (c++ function)": [[3, "_CPPv4NK4dcgp10expression14is_active_geneEKj"]], "dcgp::expression::is_active_node (c++ function)": [[3, "_CPPv4NK4dcgp10expression14is_active_nodeEKj"]], "dcgp::expression::loss (c++ function)": [[3, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorI1TEERKNSt6vectorI1TEE9loss_type"], [3, "_CPPv4NK4dcgp10expression4lossERKNSt6vectorINSt6vectorI1TEEEERKNSt6vectorINSt6vectorI1TEEEERKNSt6stringEj"]], "dcgp::expression::loss_type (c++ enum)": [[3, "_CPPv4N4dcgp10expression9loss_typeE"]], "dcgp::expression::loss_type::ce (c++ enumerator)": [[3, "_CPPv4N4dcgp10expression9loss_type2CEE"]], "dcgp::expression::loss_type::mse (c++ enumerator)": [[3, "_CPPv4N4dcgp10expression9loss_type3MSEE"]], "dcgp::expression::mutate (c++ function)": [[3, "_CPPv4N4dcgp10expression6mutateENSt6vectorIjEE"], [3, "_CPPv4N4dcgp10expression6mutateEj"]], "dcgp::expression::mutate_active (c++ function)": [[3, "_CPPv4N4dcgp10expression13mutate_activeEj"]], "dcgp::expression::mutate_active_cgene (c++ function)": [[3, "_CPPv4N4dcgp10expression19mutate_active_cgeneEj"]], "dcgp::expression::mutate_active_fgene (c++ function)": [[3, "_CPPv4N4dcgp10expression19mutate_active_fgeneEj"]], "dcgp::expression::mutate_inactive (c++ function)": [[3, "_CPPv4N4dcgp10expression15mutate_inactiveEj"]], "dcgp::expression::mutate_ogene (c++ function)": [[3, "_CPPv4N4dcgp10expression12mutate_ogeneEj"]], "dcgp::expression::mutate_random (c++ function)": [[3, "_CPPv4N4dcgp10expression13mutate_randomEj"]], "dcgp::expression::operator() (c++ function)": [[3, "_CPPv4NK4dcgp10expressionclERKNSt16initializer_listINSt6stringEEE"], [3, "_CPPv4NK4dcgp10expressionclERKNSt16initializer_listIdEE"], [3, "_CPPv4NK4dcgp10expressionclERKNSt6vectorI1TEE"], [3, "_CPPv4NK4dcgp10expressionclERKNSt6vectorINSt6stringEEE"]], "dcgp::expression::operator<< (c++ function)": [[3, "_CPPv4N4dcgp10expressionlsERNSt7ostreamERK10expression"]], "dcgp::expression::operator= (c++ function)": [[3, "_CPPv4N4dcgp10expressionaSERK10expression"], [3, "_CPPv4N4dcgp10expressionaSERR10expression"]], "dcgp::expression::seed (c++ function)": [[3, "_CPPv4N4dcgp10expression4seedEl"]], "dcgp::expression::serialize (c++ function)": [[3, "_CPPv4I0EN4dcgp10expression9serializeEvR7Archivej"]], "dcgp::expression::set (c++ function)": [[3, "_CPPv4N4dcgp10expression3setERKNSt6vectorIjEE"]], "dcgp::expression::set_eph_symb (c++ function)": [[3, "_CPPv4N4dcgp10expression12set_eph_symbERKNSt6vectorINSt6stringEEE"]], "dcgp::expression::set_eph_val (c++ function)": [[3, "_CPPv4N4dcgp10expression11set_eph_valERKNSt6vectorI1TEE"]], "dcgp::expression::set_f_gene (c++ function)": [[3, "_CPPv4N4dcgp10expression10set_f_geneEjj"]], "dcgp::expression::set_from_range (c++ function)": [[3, "_CPPv4I0EN4dcgp10expression14set_from_rangeEv7InputIt7InputIt"]], "dcgp::expression::set_phenotype_correction (c++ function)": [[3, "_CPPv4N4dcgp10expression24set_phenotype_correctionE11pc_fun_type"]], "dcgp::expression::unset_phenotype_correction (c++ function)": [[3, "_CPPv4N4dcgp10expression26unset_phenotype_correctionEv"]], "dcgp::expression::~expression (c++ function)": [[3, "_CPPv4N4dcgp10expressionD0Ev"]], "dcgp::expression_ann (c++ class)": [[4, "_CPPv4N4dcgp14expression_annE"]], "dcgp::expression_ann::d_loss (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann6d_lossERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEN10expressionIdE9loss_typeEj"], [4, "_CPPv4NK4dcgp14expression_ann6d_lossERdRNSt6vectorIdEERNSt6vectorIdEERKNSt6vectorIdEERKNSt6vectorIdEEKN10expressionIdE9loss_typeE"]], "dcgp::expression_ann::expression_ann (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjNSt6vectorIjEENSt6vectorI6kernelIdEEEj"], [4, "_CPPv4N4dcgp14expression_ann14expression_annEjjjjjjNSt6vectorI6kernelIdEEEj"]], "dcgp::expression_ann::get_bias (c++ function)": [[4, "_CPPv4NK4dcgp14expression_ann8get_biasENSt6vectorIdE9size_typeE"]], "dcgp::expression_ann::get_biases (c++ function)": [[4, "_CPPv4NK4dcgp14expression_ann10get_biasesEv"]], "dcgp::expression_ann::get_weight (c++ function)": [[4, "_CPPv4NK4dcgp14expression_ann10get_weightENSt6vectorIdE9size_typeE"], [4, "_CPPv4NK4dcgp14expression_ann10get_weightEjj"]], "dcgp::expression_ann::get_weights (c++ function)": [[4, "_CPPv4NK4dcgp14expression_ann11get_weightsEv"]], "dcgp::expression_ann::kernel_type (c++ enum)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_typeE"]], "dcgp::expression_ann::kernel_type::abs (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type3ABSE"]], "dcgp::expression_ann::kernel_type::cos_nu (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type6COS_NUE"]], "dcgp::expression_ann::kernel_type::elu (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type3ELUE"]], "dcgp::expression_ann::kernel_type::gaussian_nu (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type11GAUSSIAN_NUE"]], "dcgp::expression_ann::kernel_type::inv_sum (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type7INV_SUME"]], "dcgp::expression_ann::kernel_type::isru (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type4ISRUE"]], "dcgp::expression_ann::kernel_type::relu (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type4RELUE"]], "dcgp::expression_ann::kernel_type::sig (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type3SIGE"]], "dcgp::expression_ann::kernel_type::sin_nu (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type6SIN_NUE"]], "dcgp::expression_ann::kernel_type::step (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type4STEPE"]], "dcgp::expression_ann::kernel_type::sum (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type3SUME"]], "dcgp::expression_ann::kernel_type::tanh (c++ enumerator)": [[4, "_CPPv4N4dcgp14expression_ann11kernel_type4TANHE"]], "dcgp::expression_ann::n_active_weights (c++ function)": [[4, "_CPPv4NK4dcgp14expression_ann16n_active_weightsEb"]], "dcgp::expression_ann::operator() (c++ function)": [[4, "_CPPv4I0_20enable_double_stringI1UEENK4dcgp14expression_annclENSt6vectorI1UEERKNSt16initializer_listI1UEE"], [4, "_CPPv4NK4dcgp14expression_annclERKNSt6vectorINSt6stringEEE"], [4, "_CPPv4NK4dcgp14expression_annclERKNSt6vectorIdEE"]], "dcgp::expression_ann::operator<< (c++ function)": [[4, "_CPPv4N4dcgp14expression_annlsERNSt7ostreamERK14expression_ann"]], "dcgp::expression_ann::randomise_biases (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann16randomise_biasesEddNSt13random_device11result_typeE"]], "dcgp::expression_ann::randomise_weights (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann17randomise_weightsEddNSt13random_device11result_typeE"]], "dcgp::expression_ann::serialize (c++ function)": [[4, "_CPPv4I0EN4dcgp14expression_ann9serializeEvR7Archivej"]], "dcgp::expression_ann::set_bias (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann8set_biasENSt6vectorIdE9size_typeERKd"]], "dcgp::expression_ann::set_biases (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann10set_biasesERKNSt6vectorIdEE"]], "dcgp::expression_ann::set_output_f (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann12set_output_fERKNSt6stringE"]], "dcgp::expression_ann::set_weight (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann10set_weightENSt6vectorIdE9size_typeERKd"], [4, "_CPPv4N4dcgp14expression_ann10set_weightEjjRKd"]], "dcgp::expression_ann::set_weights (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann11set_weightsERKNSt6vectorIdEE"]], "dcgp::expression_ann::sgd (c++ function)": [[4, "_CPPv4N4dcgp14expression_ann3sgdERNSt6vectorINSt6vectorIdEEEERNSt6vectorINSt6vectorIdEEEEdjRKNSt6stringEjb"]], "dcgp::expression_weighted (c++ class)": [[5, "_CPPv4I0EN4dcgp19expression_weightedE"]], "dcgp::expression_weighted::expression_weighted (c++ function)": [[5, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjNSt6vectorIjEENSt6vectorI6kernelI1TEEEj"], [5, "_CPPv4N4dcgp19expression_weighted19expression_weightedEjjjjjjNSt6vectorI6kernelI1TEEEj"]], "dcgp::expression_weighted::get_weight (c++ function)": [[5, "_CPPv4NK4dcgp19expression_weighted10get_weightEjj"]], "dcgp::expression_weighted::get_weights (c++ function)": [[5, "_CPPv4NK4dcgp19expression_weighted11get_weightsEv"]], "dcgp::expression_weighted::operator() (c++ function)": [[5, "_CPPv4I0_15functor_enablerI1UEENK4dcgp19expression_weightedclENSt6vectorI1UEERKNSt16initializer_listI1UEE"], [5, "_CPPv4NK4dcgp19expression_weightedclERKNSt6vectorI1TEE"], [5, "_CPPv4NK4dcgp19expression_weightedclERKNSt6vectorINSt6stringEEE"]], "dcgp::expression_weighted::operator<< (c++ function)": [[5, "_CPPv4N4dcgp19expression_weightedlsERNSt7ostreamERK19expression_weighted"]], "dcgp::expression_weighted::serialize (c++ function)": [[5, "_CPPv4I0EN4dcgp19expression_weighted9serializeEvR7Archivej"]], "dcgp::expression_weighted::set_weight (c++ function)": [[5, "_CPPv4N4dcgp19expression_weighted10set_weightEjjRK1T"]], "dcgp::expression_weighted::set_weights (c++ function)": [[5, "_CPPv4N4dcgp19expression_weighted11set_weightsERKNSt6vectorI1TEE"]], "dcgp::gd4cgp (c++ class)": [[6, "_CPPv4N4dcgp6gd4cgpE"]], "dcgp::gd4cgp::evolve (c++ function)": [[6, "_CPPv4NK4dcgp6gd4cgp6evolveEN5pagmo10populationE"]], "dcgp::gd4cgp::gd4cgp (c++ function)": [[6, "_CPPv4N4dcgp6gd4cgp6gd4cgpEjdd"]], "dcgp::gd4cgp::get_extra_info (c++ function)": [[6, "_CPPv4NK4dcgp6gd4cgp14get_extra_infoEv"]], "dcgp::gd4cgp::get_log (c++ function)": [[6, "_CPPv4NK4dcgp6gd4cgp7get_logEv"]], "dcgp::gd4cgp::get_name (c++ function)": [[6, "_CPPv4NK4dcgp6gd4cgp8get_nameEv"]], "dcgp::gd4cgp::get_verbosity (c++ function)": [[6, "_CPPv4NK4dcgp6gd4cgp13get_verbosityEv"]], "dcgp::gd4cgp::log_line_type (c++ type)": [[6, "_CPPv4N4dcgp6gd4cgp13log_line_typeE"]], "dcgp::gd4cgp::log_type (c++ type)": [[6, "_CPPv4N4dcgp6gd4cgp8log_typeE"]], "dcgp::gd4cgp::serialize (c++ function)": [[6, "_CPPv4I0EN4dcgp6gd4cgp9serializeEvR7Archivej"]], "dcgp::gd4cgp::set_verbosity (c++ function)": [[6, "_CPPv4N4dcgp6gd4cgp13set_verbosityEj"]], "dcgp::kernel (c++ class)": [[8, "_CPPv4I0EN4dcgp6kernelE"]], "dcgp::kernel::get_name (c++ function)": [[8, "_CPPv4NK4dcgp6kernel8get_nameEv"]], "dcgp::kernel::kernel (c++ function)": [[8, "_CPPv4I00EN4dcgp6kernel6kernelERR1URR1VNSt6stringE"]], "dcgp::kernel::operator() (c++ function)": [[8, "_CPPv4NK4dcgp6kernelclERKNSt16initializer_listI1TEE"], [8, "_CPPv4NK4dcgp6kernelclERKNSt6vectorI1TEE"], [8, "_CPPv4NK4dcgp6kernelclERKNSt6vectorINSt6stringEEE"]], "dcgp::kernel::operator<< (c++ function)": [[8, "_CPPv4N4dcgp6kernellsERNSt7ostreamERK6kernelI1TE"]], "dcgp::kernel::serialize (c++ function)": [[8, "_CPPv4I0EN4dcgp6kernel9serializeEvR7Archivej"]], "dcgp::kernel_set (c++ class)": [[10, "_CPPv4I0EN4dcgp10kernel_setE"]], "dcgp::kernel_set::clear (c++ function)": [[10, "_CPPv4N4dcgp10kernel_set5clearEv"]], "dcgp::kernel_set::kernel_set (c++ function)": [[10, "_CPPv4N4dcgp10kernel_set10kernel_setERKNSt6vectorINSt6stringEEE"], [10, "_CPPv4N4dcgp10kernel_set10kernel_setEv"]], "dcgp::kernel_set::operator() (c++ function)": [[10, "_CPPv4NK4dcgp10kernel_setclEv"]], "dcgp::kernel_set::operator<< (c++ function)": [[10, "_CPPv4N4dcgp10kernel_setlsERNSt7ostreamERK10kernel_setI1TE"]], "dcgp::kernel_set::operator[] (c++ function)": [[10, "_CPPv4NK4dcgp10kernel_setixEKNSt6vectorIN4dcgp6kernelI1TEEE9size_typeE"]], "dcgp::kernel_set::push_back (c++ function)": [[10, "_CPPv4N4dcgp10kernel_set9push_backENSt6stringE"], [10, "_CPPv4N4dcgp10kernel_set9push_backERKN4dcgp6kernelI1TEE"]], "dcgp::kernel_set::serialize (c++ function)": [[10, "_CPPv4I0EN4dcgp10kernel_set9serializeEvR7Archivej"]], "dcgp::mes4cgp (c++ class)": [[11, "_CPPv4N4dcgp7mes4cgpE"]], "dcgp::mes4cgp::evolve (c++ function)": [[11, "_CPPv4NK4dcgp7mes4cgp6evolveEN5pagmo10populationE"]], "dcgp::mes4cgp::get_extra_info (c++ function)": [[11, "_CPPv4NK4dcgp7mes4cgp14get_extra_infoEv"]], "dcgp::mes4cgp::get_log (c++ function)": [[11, "_CPPv4NK4dcgp7mes4cgp7get_logEv"]], "dcgp::mes4cgp::get_name (c++ function)": [[11, "_CPPv4NK4dcgp7mes4cgp8get_nameEv"]], "dcgp::mes4cgp::get_seed (c++ function)": [[11, "_CPPv4NK4dcgp7mes4cgp8get_seedEv"]], "dcgp::mes4cgp::get_verbosity (c++ function)": [[11, "_CPPv4NK4dcgp7mes4cgp13get_verbosityEv"]], "dcgp::mes4cgp::log_line_type (c++ type)": [[11, "_CPPv4N4dcgp7mes4cgp13log_line_typeE"]], "dcgp::mes4cgp::log_type (c++ type)": [[11, "_CPPv4N4dcgp7mes4cgp8log_typeE"]], "dcgp::mes4cgp::mes4cgp (c++ function)": [[11, "_CPPv4N4dcgp7mes4cgp7mes4cgpEjjdj"]], "dcgp::mes4cgp::serialize (c++ function)": [[11, "_CPPv4I0EN4dcgp7mes4cgp9serializeEvR7Archivej"]], "dcgp::mes4cgp::set_seed (c++ function)": [[11, "_CPPv4N4dcgp7mes4cgp8set_seedEj"]], "dcgp::mes4cgp::set_verbosity (c++ function)": [[11, "_CPPv4N4dcgp7mes4cgp13set_verbosityEj"]], "dcgp::momes4cgp (c++ class)": [[12, "_CPPv4N4dcgp9momes4cgpE"]], "dcgp::momes4cgp::evolve (c++ function)": [[12, "_CPPv4NK4dcgp9momes4cgp6evolveEN5pagmo10populationE"]], "dcgp::momes4cgp::get_extra_info (c++ function)": [[12, "_CPPv4NK4dcgp9momes4cgp14get_extra_infoEv"]], "dcgp::momes4cgp::get_log (c++ function)": [[12, "_CPPv4NK4dcgp9momes4cgp7get_logEv"]], "dcgp::momes4cgp::get_name (c++ function)": [[12, "_CPPv4NK4dcgp9momes4cgp8get_nameEv"]], "dcgp::momes4cgp::get_seed (c++ function)": [[12, "_CPPv4NK4dcgp9momes4cgp8get_seedEv"]], "dcgp::momes4cgp::get_verbosity (c++ function)": [[12, "_CPPv4NK4dcgp9momes4cgp13get_verbosityEv"]], "dcgp::momes4cgp::log_line_type (c++ type)": [[12, "_CPPv4N4dcgp9momes4cgp13log_line_typeE"]], "dcgp::momes4cgp::log_type (c++ type)": [[12, "_CPPv4N4dcgp9momes4cgp8log_typeE"]], "dcgp::momes4cgp::momes4cgp (c++ function)": [[12, "_CPPv4N4dcgp9momes4cgp9momes4cgpEjjdj"]], "dcgp::momes4cgp::serialize (c++ function)": [[12, "_CPPv4I0EN4dcgp9momes4cgp9serializeEvR7Archivej"]], "dcgp::momes4cgp::set_seed (c++ function)": [[12, "_CPPv4N4dcgp9momes4cgp8set_seedEj"]], "dcgp::momes4cgp::set_verbosity (c++ function)": [[12, "_CPPv4N4dcgp9momes4cgp13set_verbosityEj"]], "dcgp::symbolic_regression (c++ class)": [[13, "_CPPv4N4dcgp19symbolic_regressionE"]], "dcgp::symbolic_regression::fitness (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression7fitnessERKN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::get_bounds (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression10get_boundsEv"]], "dcgp::symbolic_regression::get_cgp (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression7get_cgpEv"]], "dcgp::symbolic_regression::get_extra_info (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression14get_extra_infoEv"]], "dcgp::symbolic_regression::get_name (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression8get_nameEv"]], "dcgp::symbolic_regression::get_nix (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression7get_nixEv"]], "dcgp::symbolic_regression::get_nobj (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression8get_nobjEv"]], "dcgp::symbolic_regression::get_thread_safety (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression17get_thread_safetyEv"]], "dcgp::symbolic_regression::gradient (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression8gradientERKN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::gradient_sparsity (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression17gradient_sparsityEv"]], "dcgp::symbolic_regression::hessians (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression8hessiansERKN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::hessians_sparsity (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression17hessians_sparsityEv"]], "dcgp::symbolic_regression::predict (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorINSt6vectorIdEEEEN5pagmo13vector_doubleE"], [13, "_CPPv4NK4dcgp19symbolic_regression7predictERKNSt6vectorIdEEN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::prettier (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression8prettierERKN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::pretty (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression6prettyERKN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::serialize (c++ function)": [[13, "_CPPv4I0EN4dcgp19symbolic_regression9serializeEvR7Archivej"]], "dcgp::symbolic_regression::set_cgp (c++ function)": [[13, "_CPPv4NK4dcgp19symbolic_regression7set_cgpERKN5pagmo13vector_doubleE"]], "dcgp::symbolic_regression::set_phenotype_correction (c++ function)": [[13, "_CPPv4N4dcgp19symbolic_regression24set_phenotype_correctionEN10expressionIdE11pc_fun_typeEN10expressionIN4audi7gdual_vEE11pc_fun_typeE"]], "dcgp::symbolic_regression::symbolic_regression (c++ function)": [[13, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionERKNSt6vectorINSt6vectorIdEEEERKNSt6vectorINSt6vectorIdEEEEjjjjNSt6vectorI6kernelIdEEEjbjNSt6stringEj"], [13, "_CPPv4N4dcgp19symbolic_regression19symbolic_regressionEv"]], "dcgp::symbolic_regression::unset_phenotype_correction (c++ function)": [[13, "_CPPv4N4dcgp19symbolic_regression26unset_phenotype_correctionEv"]], "es4cgp (class in dcgpy)": [[15, "dcgpy.es4cgp"]], "get_log() (dcgpy.es4cgp method)": [[15, "dcgpy.es4cgp.get_log"]], "get_seed() (dcgpy.es4cgp method)": [[15, "dcgpy.es4cgp.get_seed"]], "set_bfe() (dcgpy.es4cgp method)": [[15, "dcgpy.es4cgp.set_bfe"]], "eph_symb (dcgpy.expression_double attribute)": [[16, "dcgpy.expression_double.eph_symb"]], "eph_symb (dcgpy.expression_gdual_double attribute)": [[16, "dcgpy.expression_gdual_double.eph_symb"]], "eph_symb (dcgpy.expression_gdual_vdouble attribute)": [[16, "dcgpy.expression_gdual_vdouble.eph_symb"]], "eph_val (dcgpy.expression_double attribute)": [[16, "dcgpy.expression_double.eph_val"]], "eph_val (dcgpy.expression_gdual_double attribute)": [[16, "dcgpy.expression_gdual_double.eph_val"]], "eph_val (dcgpy.expression_gdual_vdouble attribute)": [[16, "dcgpy.expression_gdual_vdouble.eph_val"]], "expression_double (class in dcgpy)": [[16, "dcgpy.expression_double"]], "expression_gdual_double (class in dcgpy)": [[16, "dcgpy.expression_gdual_double"]], "expression_gdual_vdouble (class in dcgpy)": [[16, "dcgpy.expression_gdual_vdouble"]], "get() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get"]], "get() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get"]], "get() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get"]], "get_active_genes() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_active_genes"]], "get_active_genes() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_active_genes"]], "get_active_genes() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_active_genes"]], "get_active_nodes() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_active_nodes"]], "get_active_nodes() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_active_nodes"]], "get_active_nodes() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_active_nodes"]], "get_arity() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_arity"]], "get_arity() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_arity"]], "get_arity() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_arity"]], "get_cols() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_cols"]], "get_cols() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_cols"]], "get_cols() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_cols"]], "get_f() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_f"]], "get_f() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_f"]], "get_f() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_f"]], "get_gene_idx() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_gene_idx"]], "get_gene_idx() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_gene_idx"]], "get_gene_idx() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_gene_idx"]], "get_lb() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_lb"]], "get_lb() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_lb"]], "get_lb() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_lb"]], "get_levels_back() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_levels_back"]], "get_levels_back() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_levels_back"]], "get_levels_back() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_levels_back"]], "get_m() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_m"]], "get_m() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_m"]], "get_m() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_m"]], "get_n() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_n"]], "get_n() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_n"]], "get_n() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_n"]], "get_rows() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_rows"]], "get_rows() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_rows"]], "get_rows() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_rows"]], "get_ub() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.get_ub"]], "get_ub() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.get_ub"]], "get_ub() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.get_ub"]], "loss() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.loss"]], "loss() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.loss"]], "loss() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.loss"]], "mutate() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.mutate"]], "mutate() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.mutate"]], "mutate() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.mutate"]], "mutate_active() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.mutate_active"]], "mutate_active() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.mutate_active"]], "mutate_active() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.mutate_active"]], "mutate_active_cgene() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.mutate_active_cgene"]], "mutate_active_cgene() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.mutate_active_cgene"]], "mutate_active_cgene() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.mutate_active_cgene"]], "mutate_active_fgene() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.mutate_active_fgene"]], "mutate_active_fgene() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.mutate_active_fgene"]], "mutate_active_fgene() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.mutate_active_fgene"]], "mutate_ogene() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.mutate_ogene"]], "mutate_ogene() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.mutate_ogene"]], "mutate_ogene() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.mutate_ogene"]], "mutate_random() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.mutate_random"]], "mutate_random() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.mutate_random"]], "mutate_random() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.mutate_random"]], "set() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.set"]], "set() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.set"]], "set() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.set"]], "set_f_gene() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.set_f_gene"]], "set_f_gene() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.set_f_gene"]], "set_f_gene() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.set_f_gene"]], "set_phenotype_correction() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.set_phenotype_correction"]], "set_phenotype_correction() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.set_phenotype_correction"]], "set_phenotype_correction() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.set_phenotype_correction"]], "simplify() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.simplify"]], "simplify() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.simplify"]], "simplify() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.simplify"]], "unset_phenotype_correction() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.unset_phenotype_correction"]], "unset_phenotype_correction() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.unset_phenotype_correction"]], "unset_phenotype_correction() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.unset_phenotype_correction"]], "visualize() (dcgpy.expression_double method)": [[16, "dcgpy.expression_double.visualize"]], "visualize() (dcgpy.expression_gdual_double method)": [[16, "dcgpy.expression_gdual_double.visualize"]], "visualize() (dcgpy.expression_gdual_vdouble method)": [[16, "dcgpy.expression_gdual_vdouble.visualize"]], "eph_symb (dcgpy.expression_ann attribute)": [[17, "dcgpy.expression_ann.eph_symb"]], "eph_val (dcgpy.expression_ann attribute)": [[17, "dcgpy.expression_ann.eph_val"]], "expression_ann (class in dcgpy)": [[17, "dcgpy.expression_ann"]], "get_bias() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.get_bias"]], "get_biases() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.get_biases"]], "get_weight() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.get_weight"]], "get_weights() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.get_weights"]], "n_active_weights() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.n_active_weights"]], "randomise_biases() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.randomise_biases"]], "randomise_weights() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.randomise_weights"]], "set_bias() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.set_bias"]], "set_biases() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.set_biases"]], "set_output_f() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.set_output_f"]], "set_weight() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.set_weight"]], "set_weights() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.set_weights"]], "sgd() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.sgd"]], "simplify() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.simplify"]], "visualize() (dcgpy.expression_ann method)": [[17, "dcgpy.expression_ann.visualize"]], "eph_symb (dcgpy.expression_weighted_double attribute)": [[18, "dcgpy.expression_weighted_double.eph_symb"]], "eph_symb (dcgpy.expression_weighted_gdual_double attribute)": [[18, "dcgpy.expression_weighted_gdual_double.eph_symb"]], "eph_symb (dcgpy.expression_weighted_gdual_vdouble attribute)": [[18, "dcgpy.expression_weighted_gdual_vdouble.eph_symb"]], "eph_val (dcgpy.expression_weighted_double attribute)": [[18, "dcgpy.expression_weighted_double.eph_val"]], "eph_val (dcgpy.expression_weighted_gdual_double attribute)": [[18, "dcgpy.expression_weighted_gdual_double.eph_val"]], "eph_val (dcgpy.expression_weighted_gdual_vdouble attribute)": [[18, "dcgpy.expression_weighted_gdual_vdouble.eph_val"]], "expression_weighted_double (class in dcgpy)": [[18, "dcgpy.expression_weighted_double"]], "expression_weighted_gdual_double (class in dcgpy)": [[18, "dcgpy.expression_weighted_gdual_double"]], "expression_weighted_gdual_vdouble (class in dcgpy)": [[18, "dcgpy.expression_weighted_gdual_vdouble"]], "get_weight() (dcgpy.expression_weighted_double method)": [[18, "dcgpy.expression_weighted_double.get_weight"]], "get_weight() (dcgpy.expression_weighted_gdual_double method)": [[18, "dcgpy.expression_weighted_gdual_double.get_weight"]], "get_weight() (dcgpy.expression_weighted_gdual_vdouble method)": [[18, "dcgpy.expression_weighted_gdual_vdouble.get_weight"]], "get_weights() (dcgpy.expression_weighted_double method)": [[18, "dcgpy.expression_weighted_double.get_weights"]], "get_weights() (dcgpy.expression_weighted_gdual_double method)": [[18, "dcgpy.expression_weighted_gdual_double.get_weights"]], "get_weights() (dcgpy.expression_weighted_gdual_vdouble method)": [[18, "dcgpy.expression_weighted_gdual_vdouble.get_weights"]], "set_weight() (dcgpy.expression_weighted_double method)": [[18, "dcgpy.expression_weighted_double.set_weight"]], "set_weight() (dcgpy.expression_weighted_gdual_double method)": [[18, "dcgpy.expression_weighted_gdual_double.set_weight"]], "set_weight() (dcgpy.expression_weighted_gdual_vdouble method)": [[18, "dcgpy.expression_weighted_gdual_vdouble.set_weight"]], "set_weights() (dcgpy.expression_weighted_double method)": [[18, "dcgpy.expression_weighted_double.set_weights"]], "set_weights() (dcgpy.expression_weighted_gdual_double method)": [[18, "dcgpy.expression_weighted_gdual_double.set_weights"]], "set_weights() (dcgpy.expression_weighted_gdual_vdouble method)": [[18, "dcgpy.expression_weighted_gdual_vdouble.set_weights"]], "gd4cgp (class in dcgpy)": [[19, "dcgpy.gd4cgp"]], "get_log() (dcgpy.gd4cgp method)": [[19, "dcgpy.gd4cgp.get_log"]], "kernel_double (class in dcgpy)": [[21, "dcgpy.kernel_double"]], "kernel_gdual_double (class in dcgpy)": [[21, "dcgpy.kernel_gdual_double"]], "kernel_gdual_vdouble (class in dcgpy)": [[21, "dcgpy.kernel_gdual_vdouble"]], "kernel_set_double (class in dcgpy)": [[23, "dcgpy.kernel_set_double"]], "kernel_set_gdual_double (class in dcgpy)": [[23, "dcgpy.kernel_set_gdual_double"]], "kernel_set_gdual_vdouble (class in dcgpy)": [[23, "dcgpy.kernel_set_gdual_vdouble"]], "push_back() (dcgpy.kernel_set_double method)": [[23, "dcgpy.kernel_set_double.push_back"]], "push_back() (dcgpy.kernel_set_gdual_double method)": [[23, "dcgpy.kernel_set_gdual_double.push_back"]], "push_back() (dcgpy.kernel_set_gdual_vdouble method)": [[23, "dcgpy.kernel_set_gdual_vdouble.push_back"]], "generate_koza_quintic() (in module dcgpy)": [[24, "dcgpy.generate_koza_quintic"]], "get_log() (dcgpy.mes4cgp method)": [[25, "dcgpy.mes4cgp.get_log"]], "get_seed() (dcgpy.mes4cgp method)": [[25, "dcgpy.mes4cgp.get_seed"]], "mes4cgp (class in dcgpy)": [[25, "dcgpy.mes4cgp"]], "get_log() (dcgpy.momes4cgp method)": [[26, "dcgpy.momes4cgp.get_log"]], "get_seed() (dcgpy.momes4cgp method)": [[26, "dcgpy.momes4cgp.get_seed"]], "momes4cgp (class in dcgpy)": [[26, "dcgpy.momes4cgp"]], "generate_chwirut1() (in module dcgpy)": [[27, "dcgpy.generate_chwirut1"]], "generate_chwirut2() (in module dcgpy)": [[27, "dcgpy.generate_chwirut2"]], "generate_daniel_wood() (in module dcgpy)": [[27, "dcgpy.generate_daniel_wood"]], "generate_gauss1() (in module dcgpy)": [[27, "dcgpy.generate_gauss1"]], "generate_kirby2() (in module dcgpy)": [[27, "dcgpy.generate_kirby2"]], "generate_lanczos2() (in module dcgpy)": [[27, "dcgpy.generate_lanczos2"]], "generate_misra1b() (in module dcgpy)": [[27, "dcgpy.generate_misra1b"]], "generate_p1() (in module dcgpy)": [[28, "dcgpy.generate_P1"]], "generate_p2() (in module dcgpy)": [[28, "dcgpy.generate_P2"]], "generate_p3() (in module dcgpy)": [[28, "dcgpy.generate_P3"]], "generate_p4() (in module dcgpy)": [[28, "dcgpy.generate_P4"]], "generate_p5() (in module dcgpy)": [[28, "dcgpy.generate_P5"]], "generate_p6() (in module dcgpy)": [[28, "dcgpy.generate_P6"]], "generate_p7() (in module dcgpy)": [[28, "dcgpy.generate_P7"]], "symbolic_regression (class in dcgpy)": [[29, "dcgpy.symbolic_regression"]], "disable_threading() (in module dcgpy)": [[30, "dcgpy.disable_threading"]], "enable_threading() (in module dcgpy)": [[30, "dcgpy.enable_threading"]], "generate_kotanchek() (in module dcgpy)": [[31, "dcgpy.generate_kotanchek"]], "generate_ratpol2d() (in module dcgpy)": [[31, "dcgpy.generate_ratpol2d"]], "generate_ratpol3d() (in module dcgpy)": [[31, "dcgpy.generate_ratpol3d"]], "generate_ripple() (in module dcgpy)": [[31, "dcgpy.generate_ripple"]], "generate_salutowicz() (in module dcgpy)": [[31, "dcgpy.generate_salutowicz"]], "generate_salutowicz2d() (in module dcgpy)": [[31, "dcgpy.generate_salutowicz2d"]], "generate_sinecosine() (in module dcgpy)": [[31, "dcgpy.generate_sinecosine"]], "generate_uball5d() (in module dcgpy)": [[31, "dcgpy.generate_uball5d"]]}})